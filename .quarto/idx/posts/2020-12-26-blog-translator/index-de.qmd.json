{"title":"Blog-Beiträge automatisch übersetzen","markdown":{"yaml":{"draft":true,"toc":true,"layout":"post","comments":{"hypothesis":true},"date":"2020-12-26","description":"How to translate a German blog post to English.","categories":["NLP","ML"],"image":"logo_blog_translator.png","title":"Blog-Beiträge automatisch übersetzen","from":"markdown+emoji","autor":"Johannes Tomasoni"},"headingText":"load pretrained model and tokenizer","containsRefs":false,"markdown":"\n\n[:de:](index-de.html) [:us:](index.html)\n\n> Achtung! Dieser Text wurde automatisch übersetzt!\n\nDa ich in meinem ersten [Blog-Beitrag](https://datamuni.com/@joatom/a-handful-of-bricks-from-sql-to-pandas) soviele Fehler auf Englisch gemacht habe, schreibe ich diesen Beitrag auf Deutsch und lasse ihn automatisch übersetzen.\n\nZur Übersetzung verwende ich das populäre NLP-Framework von [huggingface.co](https://huggingface.co/transformers/index.html). Auf ihrer Webseite ist ein einfaches [Beispiel](https://huggingface.co/transformers/model_doc/marian.html) um eine Übersetzungsanwendung zu implementieren. Und diese werde ich verwenden.\n\nWie erwartet, hat es nicht auf Anhieb funktioniert die Markdown-Syntax bei der Übersetzung immer korrekt zu übernehmen.\nAlso habe ich zu Beginn und hinterher noch ein paar Anpassungen vornehmen müssen.\n\nDen Code (inkl. Vor- und Nachbearbeitung), den ich für die Übersetzung der Markdown-Dateien verwendet habe, findet ihr [hier](https://github.com/joatom/blog-resources/tree/main/blog_translator).\nAber da es ja nur ein paar Zeilen Code sind, können wir sie uns auch eben hier anschauen:\n\n```python\nfrom transformers import MarianMTModel, MarianTokenizer\n\nmodel_name = 'Helsinki-NLP/opus-mt-de-en'\ntokenizer = MarianTokenizer.from_pretrained(model_name)\nmodel = MarianMTModel.from_pretrained(model_name)\n\n# load german block post\nf_in = open(\"blog_translator_de.md\", \"r\")\nsrc_text = f_in.readlines()\nf_in.close()\n\n# preprocessing\n## line break (\\n) results to \"I don't know.\"  We make it more specific:\nsrc_text = [s.replace('\\n',' <<eol>>') for s in src_text]\n\n## remove code block\ncode = []\ninside_code_block = False\nfor i, line in enumerate(src_text):\n    if line.startswith('```') and not inside_code_block:\n        # entering codeblock\n        inside_code_block = True\n        code += [line]\n        src_text[i] = '<<code_block>>'\n    elif inside_code_block and not line.startswith('```'):\n        code += [line]\n        src_text[i] = '<<code_block>>'\n    elif inside_code_block and line.startswith('```'):\n        # leaving code block\n        code += [line]\n        src_text[i] = '<<code_block>>'\n        inside_code_block = False\n\n# translate\ntranslated = model.generate(**tokenizer.prepare_seq2seq_batch(src_text, return_tensors=\"pt\"))\ntgt_text = [tokenizer.decode(t, skip_special_tokens=True) for t in translated]\n\n# postprocessing\n## replace code_blog tags with code\nfor i, line in enumerate(tgt_text):\n    if line == '<<code_block>>':\n        tgt_text[i] = code.pop(0)\n\n## remove the eol (but keep empty list entries / lines)\ntgt_text = [s.replace('<<eol>>', '',) for s in tgt_text]\n## remove space between ] ( to get the md link syntax right\ntgt_text = [s.replace('] (', '](',) for s in tgt_text]\n\n# write english blog post\nwith open('2020-12-26-blog-translator.md', 'w') as f_out:\n    for line in tgt_text:\n        f_out.write(\"%s\\n\" % line)\nf_out.close()\n```\n\nDa das meine erster NLP-Anwendung ist, habe ich es bei diesem *Hello World*-Code belassen. Sicherlich gibt es geschickter Wege, um die Markdown-Syntax in *tokenizer* abzubilden. Vielleicht schreibe ich ein Follow up, wenn ich es rausgefunden habe.\n\nÜbrigens, die Übersetzung hat mich ebenfallls dazu gebracht meinen deutschen Schreibstil anzupassen.\nBeispielsweise funktioniert Sarkasmus nach der Übersetzung nicht so gut, also hab ich es vermieden.\nAußerdem kommt es auch häufig auf die richtige Wortwahl an (z.B. gibt es kein Markdown-Befehl, jedoch gibt es Markdown-Syntax).\n\nViele Grüße\n\nJohannes & der Roboter\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"from":"markdown+emoji","output-file":"index-de.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.256","theme":{"light":"flatly","dark":"darkly"},"title-block-banner":true,"draft":true,"layout":"post","comments":{"hypothesis":true},"date":"2020-12-26","description":"How to translate a German blog post to English.","categories":["NLP","ML"],"image":"logo_blog_translator.png","title":"Blog-Beiträge automatisch übersetzen","autor":"Johannes Tomasoni"},"extensions":{"book":{"multiFile":true}}}}}