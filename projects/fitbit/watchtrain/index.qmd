---
toc: false
layout: post
title: ML watchtrain
description: Streaming ML training progress to a Fitbit
author: Johannes Tomasoni
date: "2021-06-19"
categories: [Fitbit, Side Project, ML, API]
image: logo_watchtrain1.png
comments:
  utterances:
    repo: joatom/blog
from: markdown+emoji
---
<a href="https://github.com/joatom/watchtrain">
<img class="notebook-badge-image" src="../../../assets/github.svg" alt="View On GitHub"></a>

# About
This repository contains code to stream ML training progress (currently only fastai) to a Fitbit Versa 3. More details on this project can be found in my [blog post](../../../posts/2021-06-19-watchtrain/index.qmd).

<p align="left">
  <img src="logo_watchtrain1.png" width="400" title="ML watchtrain">
</p>

The project consists of three components, which can be found in the github repository:

- An *API server* that coordinates the communication between ML training and the watch.
- Code that runs on the *Fitbit* Versa 3 to display the training progress received from the API server.
- A websocket *logger* that uses fastai's callback architecture to fetch training progress and metrics to send to the API server. The WebsocketLogger was heavily influenced by the original fastai [CSVLogger and Progress Callback](https://docs.fast.ai/callback.progress.html).

# How to run it

The repository contains a Dockerfile that launches the API server. The *fitbit* code needs to be be deployed to the watch via [Fitbit Studio](https://studio.fitbit.com/). The API server address can be adjusted in the */fitbit/companion/index.js*. A running example on how to use the fastai Callback for training can also be found in the repository.


> The watch, the API server and the training scripts should run in the same network, if run locally. On a local net the subnet mask needs to be 192.168.0.*. Alternatively the API server needs to run on a trusted HTTPS host. (see [blog post](../../../posts/2021-06-19-watchtrain/index.qmd))

# References
- [Blog post](../../../posts/2021-06-19-watchtrain/index.qmd) about this project
- Fastapi Docker setup: https://fastapi.tiangolo.com/deployment/docker/
- Fitbit IDE: https://studio.fitbit.com/
- Fastai CSVLogger and Progress Callback: https://docs.fast.ai/callback.progress.html