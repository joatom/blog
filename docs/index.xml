<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>jo@tom</title>
<link>https://joatom.github.io/blog/index.html</link>
<atom:link href="https://joatom.github.io/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>AI curios</description>
<generator>quarto-1.2.256</generator>
<lastBuildDate>Tue, 09 Jan 2024 23:00:00 GMT</lastBuildDate>
<item>
  <title>Personal Energy Consumption 2023</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2024-01-10-energy-consumption/index.html</link>
  <description><![CDATA[ 




<section id="review-of-2023" class="level1">
<h1>Review of 2023</h1>
<p>2023 is over, it’s time to crunch some numbers.</p>
<p>I’ll share with you the numbers of my families energy consumption and <img src="https://latex.codecogs.com/png.latex?CO_2"> footprint of 2023. Our household consists of two adults, three kids and a cat.</p>
<p>In case you know your numbers and are open about it, feel free to share and compare them in the comment section.</p>
<p align="center">
<img src="https://joatom.github.io/blog/posts/2024-01-10-energy-consumption/fire.jpg" alt="" width="50%" style="border-radius: 50%;">
</p>
</section>
<section id="energy-consumption" class="level1">
<h1>Energy consumption</h1>
<p>This are the direct consumptions of the household that I was able to track - like an ESG <strong>Scope 1</strong> measure.</p>
<section id="electricity" class="level2">
<h2 class="anchored" data-anchor-id="electricity">Electricity</h2>
<table class="table">
<colgroup>
<col style="width: 34%">
<col style="width: 21%">
<col style="width: 21%">
<col style="width: 21%">
</colgroup>
<thead>
<tr class="header">
<th>Consumption in kWh <sup>1</sup></th>
<th><strong>2023</strong></th>
<th>2022</th>
<th><strong><span style="color:green">-</span> / <span style="color:red">+</span></strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Heat pump (hot water &amp; heating)</td>
<td>1695</td>
<td>1919</td>
<td><span style="color:green">-224 (12%)</span>*</td>
</tr>
<tr class="even">
<td>Household</td>
<td>2625</td>
<td>2999</td>
<td><span style="color:green">-374 (12%)</span>**</td>
</tr>
</tbody>
</table>
<p>Both electricity sources are renewable.</p>
<p>* main savings result from reducing the overall room temperature by 2°C</p>
<p>** some of the savings result from replacing the old dryer</p>
</section>
<section id="car" class="level2">
<h2 class="anchored" data-anchor-id="car">Car</h2>
<table class="table">
<colgroup>
<col style="width: 38%">
<col style="width: 23%">
<col style="width: 19%">
<col style="width: 19%">
</colgroup>
<thead>
<tr class="header">
<th>Consumption</th>
<th><strong>2023</strong></th>
<th>2022</th>
<th><strong><span style="color:green">-</span> / <span style="color:red">+</span></strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Distance in kilometer <sup>2</sup></td>
<td><strong>10047</strong></td>
<td>11975</td>
<td><span style="color:green">-1928 (16%)</span></td>
</tr>
<tr class="even">
<td>Diesel in liter</td>
<td><strong>673</strong></td>
<td>802</td>
<td><span style="color:green">-129 (16%)</span></td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?CO_2"> emissions of Diesel in t <sup>3</sup></td>
<td><strong>2.05</strong></td>
<td>2.44</td>
<td><span style="color:green">-0.39 (16%)</span></td>
</tr>
</tbody>
</table>
<p>The average Diesel consumption ranges from 0.065 to 0.067 l/km.<sup>4</sup> The calculations are done with 0.067 l/km.</p>
</section>
</section>
<section id="co_2-footprint" class="level1">
<h1><img src="https://latex.codecogs.com/png.latex?CO_2"> footprint</h1>
<p>The emissions are calculated using <span class="citation" data-cites="uba_2024"><span>“<span>CO2</span>-<span>Rechner</span> Des <span>Umweltbundesamtes</span>”</span> (2024)</span>, a <img src="https://latex.codecogs.com/png.latex?CO_2"> calculator provided by the German Government.</p>
<section id="household-emission" class="level2">
<h2 class="anchored" data-anchor-id="household-emission">Household emission</h2>
<table class="table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>Category</th>
<th><img src="https://latex.codecogs.com/png.latex?CO_2"> emission in t <sup>5</sup></th>
<th><img src="https://latex.codecogs.com/png.latex?CO_2"> emission in t p.P.</th>
<th>Consumption</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><em>&nbsp; &nbsp; House</em></td>
<td><em>&nbsp; &nbsp; 1.45</em></td>
<td><em>&nbsp; &nbsp; 0.29</em></td>
<td></td>
</tr>
<tr class="even">
<td><em>&nbsp; &nbsp; Heating</em></td>
<td><em>&nbsp; &nbsp; 0.05</em></td>
<td><em>&nbsp; &nbsp; 0.01</em></td>
<td>1695 kWh</td>
</tr>
<tr class="odd">
<td><em>&nbsp; &nbsp; Electricity</em></td>
<td><em>&nbsp; &nbsp; 0.07</em></td>
<td><em>&nbsp; &nbsp; 0.01</em></td>
<td>2625 kWh</td>
</tr>
<tr class="even">
<td>Housing total</td>
<td>1.57</td>
<td>0.31</td>
<td></td>
</tr>
<tr class="odd">
<td><em>&nbsp; &nbsp; Car</em></td>
<td><em>&nbsp; &nbsp; 0.35</em></td>
<td><em>&nbsp; &nbsp; 0.07</em></td>
<td></td>
</tr>
<tr class="even">
<td><em>&nbsp; &nbsp; Car mileage</em></td>
<td><em>&nbsp; &nbsp; 2.05</em></td>
<td><em>&nbsp; &nbsp; 0.41</em></td>
<td>10047 km</td>
</tr>
<tr class="odd">
<td><em>&nbsp; &nbsp; Carpool</em></td>
<td><em>&nbsp; &nbsp; 0.16</em></td>
<td><em>&nbsp; &nbsp; 0.03</em></td>
<td>1000 km</td>
</tr>
<tr class="even">
<td><em>&nbsp; &nbsp; Public Transportation</em></td>
<td><em>&nbsp; &nbsp; 0.14</em></td>
<td><em>&nbsp; &nbsp; 0.03</em></td>
<td>2793 km</td>
</tr>
<tr class="odd">
<td>Transportation total</td>
<td>2.62</td>
<td>0.52</td>
<td></td>
</tr>
<tr class="even">
<td>Food</td>
<td>6.9</td>
<td>1.38</td>
<td>reduced meat, preferred local</td>
</tr>
<tr class="odd">
<td>General Consumption</td>
<td>18.45</td>
<td>3.69</td>
<td>default estimate</td>
</tr>
<tr class="even">
<td>Public Emissions</td>
<td>5.75</td>
<td>1.15</td>
<td>default estimate</td>
</tr>
<tr class="odd">
<td><strong>Total</strong></td>
<td><strong>35.37</strong></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>Total per person</strong></td>
<td></td>
<td><strong>7.07</strong></td>
<td></td>
</tr>
</tbody>
</table>
</section>
<section id="personal-emission" class="level2">
<h2 class="anchored" data-anchor-id="personal-emission">Personal emission</h2>
<div class="cell quarto-layout-panel" data-execution_count="1">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="cell-output cell-output-display quarto-layout-cell" data-execution_count="8" style="flex-basis: 100.0%;justify-content: center;">
<p><img src="https://joatom.github.io/blog/posts/2024-01-10-energy-consumption/index_files/figure-html/cell-2-output-1.png" class="img-fluid" width="824"></p>
</div>
</div>
</div>
<table class="table">
<colgroup>
<col style="width: 27%">
<col style="width: 27%">
<col style="width: 22%">
<col style="width: 22%">
</colgroup>
<thead>
<tr class="header">
<th>Category</th>
<th><img src="https://latex.codecogs.com/png.latex?CO_2"> emission in t <sup>6</sup></th>
<th>German average <sup>7</sup></th>
<th><strong><span style="color:green">-</span> / <span style="color:red">+</span></strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Housing</td>
<td>0.31</td>
<td>2.49</td>
<td><span style="color:green">-2.18 (88%)</span></td>
</tr>
<tr class="even">
<td>Transportation</td>
<td>0.92</td>
<td>2.22</td>
<td><span style="color:green">-1.3 (59%)</span></td>
</tr>
<tr class="odd">
<td>Food</td>
<td>1.67</td>
<td>1.75</td>
<td><span style="color:green">-0.08 (5%)</span></td>
</tr>
<tr class="even">
<td>General Consumption</td>
<td>3.69</td>
<td>2.73</td>
<td><span style="color:red">+0.96 (35%)</span></td>
</tr>
<tr class="odd">
<td>Public Emissions</td>
<td>1.15</td>
<td>1.15</td>
<td>0 (0%)</td>
</tr>
<tr class="even">
<td><strong>Total</strong></td>
<td><strong>7.74</strong></td>
<td><strong>10.34</strong></td>
<td><strong><span style="color:green">-2.6 (25%)</span></strong></td>
</tr>
</tbody>
</table>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Options to further reduce my consumption significantly are limited.</p>
<ul>
<li>The biggest contribution is <em>General Consumption</em> which is a general estimate depending on our household income. The assumption is: the more you earn the more you consume.</li>
<li>The second biggest block is <em>Food</em>. This could be improved by reducing dairy and meat.</li>
<li>The third block <em>Public Emission</em> covers infrastructure, industry, etc. and is hard to influence on an individual level.</li>
<li>The <em>Housing</em> category is already quite low because of good insulation and energy efficient heating.</li>
<li>The <em>Transportation</em> category was low because the five of us share one car. We did few traveling and due to a work from home policy I spend few kilometers commuting.</li>
</ul>
<p>I firmly believe that the only way to improve life or reduce consumption is by implementing habits into your daily life that are not causing much effort, like enjoying a walk to the bakery instead of squeezing into a car. For bigger changes to work, like installing a PV system, there must be an economic incentive, like a quick armortization and low opportunity costs.</p>
<div class="callout-tip callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Life hacks
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Default to not taking the <a href="../2023-01-03-fill-her-up/">car</a>.</li>
<li>Watch out for inefficient electrical devices, like an old dryer. In my case it was much cheaper to replace my broken 15 year old dryer with a new energy efficient one instead of repairing it.</li>
<li>Don’t just buy things because thy are efficient. Buying a new car every three years is probably not very <img src="https://latex.codecogs.com/png.latex?CO_2"> efficient, no matter how advanced the battery is.</li>
<li>Rule of thumb: Electronics and machines are good for efficiency at work. Outside of work they have lots of downsides: they cost lots of money, the lead to high emissions, they often are noisy, mostly they weaken your body.</li>
</ul>
<p>That said, time to switch of my computer and unfold the drying rack, lol.</p>
<p>Bye <span class="emoji" data-emoji="wink">😉</span></p>
</div>
</div>
</section>
<section id="references" class="level1">
<h1>References</h1>
<div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-uba_2024" class="csl-entry">
<span>“<span>CO2</span>-<span>Rechner</span> Des <span>Umweltbundesamtes</span>.”</span> 2024. <a href="https://uba.co2-rechner.de/de_DE/">https://uba.co2-rechner.de/de_DE/</a>.
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>The data is taken from the electricity meters.↩︎</p></li>
<li id="fn2"><p>Data is taken from car mileage display.↩︎</p></li>
<li id="fn3"><p><img src="https://latex.codecogs.com/png.latex?CO_2"> emissions of Diesel is calculated via <span class="citation" data-cites="uba_2024"><span>“<span>CO2</span>-<span>Rechner</span> Des <span>Umweltbundesamtes</span>”</span> (2024)</span>↩︎</p></li>
<li id="fn4"><p>Data is taken from car mileage display.↩︎</p></li>
<li id="fn5"><ul>
<li>Default values are taken for the categories <em>General Consumption</em> and <em>Public Emissions</em>.</li>
<li>Mileage for <em>Carpool</em> and <em>Public Transportation</em> are approximated.</li>
<li>Category <em>Food</em> is calculated depending on age and diet.</li>
</ul>
↩︎</li>
<li id="fn6"><p>Personal emission is either calculated by household emission divided by five (<em>Housing</em>, <em>General Consumption</em>, <em>Public Emissions</em>) or by the actual values (<em>Transportation</em>, <em>Food</em>).↩︎</p></li>
<li id="fn7"><p>German average is taken from <span class="citation" data-cites="uba_2024"><span>“<span>CO2</span>-<span>Rechner</span> Des <span>Umweltbundesamtes</span>”</span> (2024)</span>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Environment</category>
  <category>Life hack</category>
  <guid>https://joatom.github.io/blog/posts/2024-01-10-energy-consumption/index.html</guid>
  <pubDate>Tue, 09 Jan 2024 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2024-01-10-energy-consumption/fire.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Interactive Precision-Recall Curve</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2023-12-29-pr-curve/2023-12-29-interactive-precision-recall-curve.html</link>
  <description><![CDATA[ 




<p>Recently I talked about metrics for inbalanced binary classification problems.</p>
<p>I had trouble properly explaining the <em>Precision-Recall Curve</em> in simple words.</p>
<p>Sometimes a nice visualization tells more than a thousand words.</p>
<p>So, I made this simple interactive chart:</p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2023-12-29T18:04:53.555687Z&quot;,&quot;iopub.status.busy&quot;:&quot;2023-12-29T18:04:53.555039Z&quot;,&quot;iopub.status.idle&quot;:&quot;2023-12-29T18:04:54.706341Z&quot;,&quot;shell.execute_reply&quot;:&quot;2023-12-29T18:04:54.705089Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2023-12-29T18:04:53.555651Z&quot;}" data-trusted="true" data-execution_count="9">
<div class="cell-output cell-output-display" data-execution_count="9">

<style>
  #altair-viz-e8b06afd6b504c50baa88f5b3640acad.vega-embed {
    width: 100%;
    display: flex;
  }

  #altair-viz-e8b06afd6b504c50baa88f5b3640acad.vega-embed details,
  #altair-viz-e8b06afd6b504c50baa88f5b3640acad.vega-embed details summary {
    position: relative;
  }
</style>
<div id="altair-viz-e8b06afd6b504c50baa88f5b3640acad"></div>
<script type="text/javascript">
  var VEGA_DEBUG = (typeof VEGA_DEBUG == "undefined") ? {} : VEGA_DEBUG;
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-e8b06afd6b504c50baa88f5b3640acad") {
      outputDiv = document.getElementById("altair-viz-e8b06afd6b504c50baa88f5b3640acad");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm/vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm/vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm/vega-lite@5.16.3?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm/vega-embed@6?noext",
    };

    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return (VEGA_DEBUG[key] == version) ?
        Promise.resolve(paths[lib]) :
        new Promise(function(resolve, reject) {
          var s = document.createElement('script');
          document.getElementsByTagName("head")[0].appendChild(s);
          s.async = true;
          s.onload = () => {
            VEGA_DEBUG[key] = version;
            return resolve(paths[lib]);
          };
          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
          s.src = paths[lib];
        });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "5")
        .then(() => maybeLoadScript("vega-lite", "5.16.3"))
        .then(() => maybeLoadScript("vega-embed", "6"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 300, "continuousHeight": 300, "stroke": null}, "axis": {"grid": false}}, "vconcat": [{"vconcat": [{"layer": [{"data": {"name": "data-2f06ebf5cdbb27232932afaf5a3440fe"}, "mark": {"type": "bar", "binSpacing": 0, "opacity": 0.7}, "encoding": {"color": {"field": "label_left", "type": "nominal"}, "x": {"axis": null, "bin": {"maxbins": 50}, "field": "proba", "type": "quantitative"}, "y": {"aggregate": "count", "stack": null, "type": "quantitative"}}, "transform": [{"filter": "(datum['proba'] <= Threshold)"}]}, {"data": {"name": "data-2f06ebf5cdbb27232932afaf5a3440fe"}, "mark": {"type": "bar", "binSpacing": 0, "opacity": 0.7}, "encoding": {"color": {"field": "label_right", "scale": {"domain": ["TN", "FP", "FN", "TP"], "range": ["#3472FF", "#7FA6FE", "#C39393", "#D20000"]}, "title": "Results", "type": "nominal"}, "x": {"axis": null, "bin": {"maxbins": 50}, "field": "proba", "type": "quantitative"}, "y": {"aggregate": "count", "stack": null, "type": "quantitative"}}, "transform": [{"filter": "(datum['proba'] > Threshold)"}]}, {"data": {"name": "empty"}, "mark": {"type": "rule", "color": "gray"}, "encoding": {"size": {"value": 2}, "x": {"type": "quantitative", "datum": {"expr": "Threshold"}}}}, {"data": {"name": "empty"}, "mark": {"type": "text", "text": "Threshold"}, "encoding": {"x": {"type": "quantitative", "datum": {"expr": "Threshold"}}}}], "height": 225, "width": 600}, {"layer": [{"data": {"name": "data-2f06ebf5cdbb27232932afaf5a3440fe"}, "mark": {"type": "circle", "opacity": 0.6, "size": 20}, "encoding": {"color": {"field": "label_left", "type": "nominal"}, "x": {"axis": {"title": "Predicted Probability"}, "field": "proba", "type": "quantitative"}, "y": {"axis": {"title": "True Class"}, "field": "label", "type": "ordinal"}, "yOffset": {"field": "jitter", "type": "quantitative"}}, "transform": [{"calculate": "random()", "as": "jitter"}, {"filter": "(datum['proba'] <= Threshold)"}]}, {"data": {"name": "data-2f06ebf5cdbb27232932afaf5a3440fe"}, "mark": {"type": "circle", "opacity": 0.6, "size": 20}, "encoding": {"color": {"field": "label_right", "scale": {"domain": ["TN", "FP", "FN", "TP"], "range": ["#3472FF", "#7FA6FE", "#C39393", "#D20000"]}, "title": "Results", "type": "nominal"}, "x": {"axis": {"title": "Predicted Probability"}, "field": "proba", "type": "quantitative"}, "y": {"axis": {"title": "True Class"}, "field": "label", "type": "ordinal"}, "yOffset": {"field": "jitter", "type": "quantitative"}}, "transform": [{"calculate": "random()", "as": "jitter"}, {"filter": "(datum['proba'] > Threshold)"}]}, {"data": {"name": "empty"}, "mark": {"type": "rule", "color": "gray"}, "encoding": {"size": {"value": 2}, "x": {"type": "quantitative", "datum": {"expr": "Threshold"}}}}], "height": 50, "width": 600}]}, {"hconcat": [{"layer": [{"mark": {"type": "point"}, "encoding": {"color": {"value": "red"}, "x": {"aggregate": "mean", "axis": {"title": "FPR"}, "field": "FPR", "type": "quantitative"}, "y": {"aggregate": "mean", "axis": {"title": "TPR"}, "field": "TPR", "type": "quantitative"}}, "transform": [{"filter": "((datum['ROC_Thresholds'] >= Threshold) && (datum['ROC_Thresholds_Shift'] < Threshold))"}]}, {"mark": {"type": "line"}, "encoding": {"tooltip": [{"field": "TPR", "format": ",.4f", "title": "TPR", "type": "quantitative"}, {"field": "FPR", "format": ",.4f", "title": "FPR", "type": "quantitative"}, {"field": "ROC_Thresholds", "format": ",.4f", "title": "Threshold", "type": "quantitative"}], "x": {"field": "FPR", "type": "quantitative"}, "y": {"field": "TPR", "type": "quantitative"}}, "title": "ROC curve (AUC:  0.9558)"}, {"mark": {"type": "rule", "color": "gray"}, "encoding": {"size": {"value": 1}, "x": {"axis": {"title": "FPR"}, "field": "zero_fld", "type": "quantitative"}, "x2": {"aggregate": "mean", "field": "FPR"}, "y": {"aggregate": "mean", "axis": {"title": "TPR"}, "field": "TPR", "type": "quantitative"}}, "transform": [{"filter": "((datum['ROC_Thresholds'] >= Threshold) && (datum['ROC_Thresholds_Shift'] < Threshold))"}, {"calculate": "0", "as": "zero_fld"}]}, {"mark": {"type": "rule", "color": "gray"}, "encoding": {"size": {"value": 1}, "x": {"aggregate": "mean", "axis": {"title": "FPR"}, "field": "FPR", "type": "quantitative"}, "y": {"aggregate": "mean", "axis": {"title": "TPR"}, "field": "TPR", "type": "quantitative"}}, "transform": [{"filter": "((datum['ROC_Thresholds'] >= Threshold) && (datum['ROC_Thresholds_Shift'] < Threshold))"}]}], "data": {"name": "data-a41302de01f838faad7dc6f0dc229582"}, "height": 160, "width": 160}, {"layer": [{"mark": {"type": "point"}, "encoding": {"color": {"value": "red"}, "x": {"aggregate": "mean", "axis": {"title": "Recall"}, "field": "Recall", "type": "quantitative"}, "y": {"aggregate": "mean", "axis": {"title": "Precision"}, "field": "Precision", "type": "quantitative"}}, "transform": [{"filter": "((datum['PR_Thresholds'] >= Threshold) && (datum['PR_Thresholds_Shift'] < Threshold))"}]}, {"mark": {"type": "line"}, "encoding": {"tooltip": [{"field": "Precision", "format": ",.4f", "title": "Precision", "type": "quantitative"}, {"field": "Recall", "format": ",.4f", "title": "Recall", "type": "quantitative"}, {"field": "F1 score", "format": ",.4f", "title": "F1 score", "type": "quantitative"}, {"field": "PR_Thresholds", "format": ",.4f", "title": "Threshold", "type": "quantitative"}], "x": {"field": "Recall", "type": "quantitative"}, "y": {"field": "Precision", "type": "quantitative"}}, "title": "Precision - Recall curve (AUC:  0.8556)"}, {"mark": {"type": "rule", "color": "gray"}, "encoding": {"size": {"value": 1}, "x": {"axis": {"title": "Recall"}, "field": "zero_fld", "type": "quantitative"}, "x2": {"aggregate": "mean", "field": "Recall"}, "y": {"aggregate": "mean", "axis": {"title": "Precision"}, "field": "Precision", "type": "quantitative"}}, "transform": [{"filter": "((datum['PR_Thresholds'] >= Threshold) && (datum['PR_Thresholds_Shift'] < Threshold))"}, {"calculate": "0", "as": "zero_fld"}]}, {"mark": {"type": "rule", "color": "gray"}, "encoding": {"size": {"value": 1}, "x": {"aggregate": "mean", "axis": {"title": "Recall"}, "field": "Recall", "type": "quantitative"}, "y": {"aggregate": "mean", "axis": {"title": "Precision"}, "field": "Precision", "type": "quantitative"}}, "transform": [{"filter": "((datum['PR_Thresholds'] >= Threshold) && (datum['PR_Thresholds_Shift'] < Threshold))"}]}], "data": {"name": "data-7ed971ff4d3660ce4dcaa3bef23164d9"}, "height": 160, "width": 160}, {"layer": [{"data": {"name": "data-2f06ebf5cdbb27232932afaf5a3440fe"}, "mark": {"type": "rect"}, "encoding": {"color": {"field": "lbl_text", "scale": {"domain": ["TN", "FP", "FN", "TP"], "range": ["#3472FF", "#7FA6FE", "#C39393", "#D20000"]}, "title": "Results", "type": "ordinal"}, "x": {"axis": {"domain": false, "ticks": false}, "field": "preds", "scale": {"domain": [0, 1, "Recall"]}, "type": "ordinal"}, "xOffset": {"field": "zero", "type": "ordinal"}, "y": {"axis": {"domain": false, "ticks": false}, "field": "label", "scale": {"domain": ["Precision", 0, 1]}, "type": "ordinal"}, "yOffset": {"field": "zero", "type": "ordinal"}}, "title": "Confusion Matrix", "transform": [{"calculate": "datum.proba <= Threshold ? 0 : 1 ", "as": "preds"}, {"calculate": "datum.preds==0 & datum.label==0 ? 'TN' : datum.preds==0 & datum.label==1 ? 'FN' : datum.preds==1 & datum.label==1? 'TP' : 'FP'", "as": "lbl_text"}, {"calculate": "0", "as": "zero"}]}, {"data": {"name": "data-2f06ebf5cdbb27232932afaf5a3440fe"}, "mark": {"type": "text", "baseline": "middle"}, "encoding": {"color": {"value": "white"}, "text": {"aggregate": "count", "type": "quantitative"}, "x": {"axis": {"domain": false, "ticks": false}, "field": "preds", "scale": {"domain": [0, 1, "Recall"]}, "type": "ordinal"}, "y": {"axis": {"domain": false, "ticks": false}, "field": "label", "scale": {"domain": ["Precision", 0, 1]}, "type": "ordinal"}}, "transform": [{"calculate": "datum.proba <= Threshold ? 0 : 1", "as": "preds"}]}, {"data": {"name": "data-7ed971ff4d3660ce4dcaa3bef23164d9"}, "mark": {"type": "text", "baseline": "middle"}, "encoding": {"color": {"value": "black"}, "text": {"aggregate": "min", "field": "Precision", "format": ",.2f", "type": "quantitative"}, "x": {"axis": {"domain": false, "ticks": false, "title": "Predicted Class"}, "field": "one_lbl", "scale": {"domain": [0, 1, "Recall"]}, "type": "ordinal"}, "y": {"axis": {"domain": false, "ticks": false, "title": "True Class"}, "field": "prec_lbl", "scale": {"domain": ["Precision", 0, 1]}, "type": "ordinal"}}, "transform": [{"filter": "((datum['PR_Thresholds'] >= Threshold) && (datum['PR_Thresholds_Shift'] < Threshold))"}]}, {"data": {"name": "data-7ed971ff4d3660ce4dcaa3bef23164d9"}, "mark": {"type": "text", "baseline": "middle"}, "encoding": {"color": {"value": "black"}, "text": {"aggregate": "max", "field": "Recall", "format": ",.2f", "type": "quantitative"}, "x": {"axis": {"domain": false, "labelAlign": "center", "labelAngle": 0, "ticks": false, "title": "Predicted Class"}, "field": "rec_lbl", "scale": {"domain": [0, 1, "Recall"]}, "type": "ordinal"}, "y": {"axis": {"domain": false, "ticks": false, "title": "True Class"}, "field": "one_lbl", "scale": {"domain": ["Precision", 0, 1]}, "type": "ordinal"}}, "transform": [{"filter": "((datum['PR_Thresholds'] >= Threshold) && (datum['PR_Thresholds_Shift'] < Threshold))"}]}], "height": 160, "width": 160}]}], "params": [{"name": "Threshold", "bind": {"input": "range", "max": 1, "min": 0, "step": 0.02}, "value": 0.5}], "$schema": "https://vega.github.io/schema/vega-lite/v5.16.3.json", "datasets": {"data-2f06ebf5cdbb27232932afaf5a3440fe": [{"proba": 1e-06, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 1e-06, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 1e-06, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 1e-06, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.003567290710902671, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.0067742189723785096, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.012534270980203266, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.018092396934921096, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.03067521510129062, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.035046137970840996, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.037356504840554805, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.03918289986087914, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.04474159477315687, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.0465055345355071, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.049714204849664045, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.052200254523986245, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.05337491882241063, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.05495273719440713, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.056120880433010445, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.057441982477994036, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.060078046170816135, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.06618981834481902, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.0666989898191247, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.06748385394249451, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.07098511506422817, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.07208832621856903, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.0759950047701462, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.07670479786381607, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.0784002531777, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.08702712767394666, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.08808654151428252, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.0891437828431269, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.08973844323256436, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.0897989146302468, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.09026717508917725, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.09257126827378065, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.09263226581535416, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.09387200952611796, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.09565165067834824, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.09744340108421518, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.09778187924821591, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10030529142905298, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10043716976895761, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10195042798557069, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10206444672340315, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10207362210564347, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10248593408958051, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10331193376015446, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10422185656356836, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10563244013512929, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.106006265791048, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10795344759158648, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10824772257538201, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.10956036702745808, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.11093957088863055, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.11254395288510571, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.11305248806219337, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.11417335120038424, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.11858263078565529, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.11878687204598076, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.12023211297751007, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.12089833247801557, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.12332323637378878, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1242423204875876, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.12440994077713319, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.12584253862506756, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.12603056328308, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1275255679869114, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.13193807967756377, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.13196450803943227, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.13567894429920357, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.13747793624081833, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.13794913963557476, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1386130984890826, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.13990567704953977, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14142883179553528, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1418553109248223, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14276942873307258, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14366597974182038, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1450201634247515, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14536460311729837, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1462730070007962, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14687155651666983, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14700796025319607, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14736225751019616, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14776484444113686, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1481750720208233, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.14873037568142988, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15076050159384874, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15315508803931108, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15336523239583, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15345121481804483, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1540900481186566, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15435258237978122, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15437469606390697, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15470153078895732, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1549194124741918, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15542352811794213, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15606912742529566, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15706260147902634, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1574414925059815, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15753962255875892, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15795619776890404, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1589225028154036, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15900437043657994, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.15990585392457102, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16113336098504638, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16132386997725545, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16307837381145868, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16336937444749045, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1635946986375821, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16417470787446306, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16550918447834703, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16749338356813767, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16752847424419537, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16811789516478914, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1683535231269274, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.16878577142148976, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17119732950734137, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17123423467182378, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17203773502985825, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17238334610860417, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17263498062132732, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1746733715347067, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17484469335325592, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17574972814068449, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17650018867608533, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17661191043678362, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1768134254481156, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1780577843811935, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17810291908551032, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17827388408912684, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17890420198571502, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.17942576753131464, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18085854145584096, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18149373917946754, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18167646755193725, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1818788670673165, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18247868699530975, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18297078809060488, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1849125599451758, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1858413661747505, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18638230209549878, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18712206816055618, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18864477236258337, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1886871275080053, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18878202977927108, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1891941355035434, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18952535464235531, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18955347866406438, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.18998332642781776, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19069609547016664, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19125335227016224, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1913613952019102, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1918601056617275, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19204375145540786, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19207167089619065, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1929612979991664, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19306099002912558, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19328658518225794, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19395763730632823, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19453261960530807, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19502342230795155, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19507177490191097, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19519922603250778, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19558592607122582, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19583541709304944, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19645816494738835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19655593129671975, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19723855806056287, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1973770394809095, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19742956181968943, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19768150198873932, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19824913899843483, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19839052524668718, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.1987181262618469, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19877484457028935, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19895877084319027, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.19970566417822588, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2009230019402701, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2010606191154441, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2011076488916446, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20134691378581804, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20223337708726802, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2027853084638341, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20390254131378305, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20391957965542787, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2056049475029647, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20598701936072977, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2065891438013559, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20845628351274134, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20847456355003544, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2086566808630803, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20897471525216121, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20938438171870793, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.20941344614222135, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21092117939068109, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2112093114215041, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21140074984363666, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21175569423022914, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21188446628589486, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21189466709818813, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21197479714281173, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21204713507234946, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21214643228443186, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21347273310796613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2138674516149949, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2145356307359984, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21475095010320347, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21498433197230632, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2154933683857841, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2158458300708312, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21606880604477205, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21662810383569656, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21756014644017788, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2176596294208616, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21785345529146366, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21844261270314733, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21856245447317657, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21865502858186994, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2187873025914597, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21911690458912567, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21933142309617495, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21941596192301696, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21957680993738848, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21959158989605626, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.21974743519810216, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22061224694455797, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22081325259753484, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22082462363058256, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22113198975545767, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2213353742672385, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22195848046069136, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2224726211615294, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2238233282806616, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22434868726791493, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22483088781745292, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22512862891331942, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22515268453730317, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22552957868786347, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22654679590687657, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22735596771094363, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22807314132226716, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22823891660670292, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22859324842489784, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22880610618453268, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22882162295547234, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22892586438241166, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.229070770423246, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22920383418338705, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22988637319025135, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22990092784018423, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.22992309676482245, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2300429128187134, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23050035071407898, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23169659628371103, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23281208639226683, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23284718591442452, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2328930324684876, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2329461303035091, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23316019464567006, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23375587008818374, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23387972724884779, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23423772040222482, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23433593635839828, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2346040003421618, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2357804586810528, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23630683775449968, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23681741420374164, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2368356477154029, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23774906278367, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23780524189905655, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23791876210073745, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23852175319013985, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2385446640699122, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23895444086499712, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23930550240740311, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.23971345192145777, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2397616408367775, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2400533956194569, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2400786520541106, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24034880238622278, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24073778012017685, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24106217868525212, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24200612827664955, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2427194772955373, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24300539268610527, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24340127792169633, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24385064457269265, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2446106635752134, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24464475348423081, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24467531867469322, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2449601015796405, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.244971499925392, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24503306462348898, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24507276512101023, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24520597765573968, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24546825253942037, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2454888839070074, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2455957906984623, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24627431040796835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24631223691126444, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24663882766507889, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2468737793709513, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24688735883383237, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24690522559626063, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24714410390757735, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24719195401852526, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2474003570388138, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.248014779781595, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24913591501908697, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24954738847949307, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.24971940420101799, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25066095229996216, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2511416850429391, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2514655072635433, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2514697391722233, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25159555487360613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2516891401376379, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2518507938085224, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2522703342838906, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2524031326002896, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25247572221524794, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2529030260646962, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25379506259771467, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25394933169305556, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2540293682420116, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2542233678220298, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2545051383510357, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2550953850815586, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25633536395141565, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25670428692678926, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2569634233197295, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.257172003969766, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2578355013779974, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2581898379402799, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2583071558154203, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25848321499851445, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2593101445461832, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.25944832712626476, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2595116926600046, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2595928578928578, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.260352417346794, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26047163864900996, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26065328262107257, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2608281479546804, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2609130563061165, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26101363720627435, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.261811119054308, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.261845840698116, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26221741246849706, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26247217922330723, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2629292964606045, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2629829988410538, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26311173938723864, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26327756981362205, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2634707243427269, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2635011200026242, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2635948467621911, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.263974724232931, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2640853176815666, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26416391756833213, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26423667428525727, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2643759654929164, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26540406216592105, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2658075527876613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26581197302389953, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2658346080680196, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2661741372307594, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2666954809206773, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2669181429248142, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26712969538759485, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26716998152210525, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2672384502717972, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26736183505182853, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2674113764823, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2678087438254023, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26815620388761824, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.268319074099679, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26842183173566747, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2685481131559785, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2692007483649338, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.26929720331654394, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2694632062948188, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2695378713880008, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2697393889890751, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.269804799627304, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2699508564232199, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27036213238651297, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27051534103818525, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27125543750114844, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2721145798689918, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2721667975482997, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27251959050437685, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27263926566356894, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2728525214067866, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27316320415067163, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2733661874632163, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27389760829141907, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2741017616800423, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27411992995452306, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27435831484727613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2754141069049337, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2754342145546786, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2755506303259406, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2755828189320807, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27559942067558346, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27569189981269876, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27624989417771945, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27628964672086787, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2763280437184026, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27637824591036014, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27643704153877313, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27646230506366454, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2766929153486436, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2769549164028774, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27700787915394104, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.277161636293821, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2776241780365967, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2776328903251835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27800075044915884, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27828876281355874, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27833205310927955, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27865691870554127, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2788582411282078, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27890539139740034, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27898219586114276, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2792401519672849, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27953553478019233, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27977842605587366, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.27986279175353324, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2800928467578676, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2804479000299439, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.280478688160971, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28047894569744647, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28050004362825165, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2805222244841555, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2808500622164014, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28095058891707747, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2809727948773311, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2809895016338131, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2812234837234727, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2812348955604692, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2813226660603594, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2818306262966472, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2819099782343866, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28199679605908745, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28215634342296414, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2826462167966605, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2826678338985237, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2831291264033728, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2835751786661535, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2836388549470703, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28378685991272806, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28379077086008736, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28389898214875187, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.283952286025553, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28407094046316184, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.284173525812881, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28434282629573643, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.284425387894905, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28450101372134956, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28577300340738016, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.285988775662784, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2860234807513297, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2860827095656548, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.286677736440908, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2870935086691607, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2871599805729566, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28787370182400224, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28801748495368823, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2886862621955617, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2897335360311234, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28978433922737074, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.28983194636150056, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2898932917913855, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2899122634093746, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29018170774818147, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.290241796501877, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29039885587865943, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2909548985066613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2910289877888949, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.291268142700406, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2914277895266245, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29160213970558035, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.291620733230655, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29174244065977234, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29196677266554477, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2919701868716979, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2920849597741425, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2922102082682915, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2922718726340172, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29261226445028493, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2929940688045857, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2930498556759684, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2931851584640955, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2934052727697551, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2937652882889429, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2942168632784354, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2944291156868567, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29471046619366487, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2950338145161517, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29519869539491816, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2952294629301077, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29537633978808653, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29546179264947725, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2954649337865091, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2955908983876579, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29606600598975413, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2961382972871351, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2965221835724392, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29659699273109846, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29659860101576935, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29662509092872713, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2968121162715713, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2970169372851738, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29732920127367657, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29736862265401054, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2974413635155341, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2976450142704046, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2976964571740437, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2977303787944971, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.2991327213946491, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29937840848548064, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29959963132014894, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29977253178822294, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29977291727929534, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29985878796031634, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29986456420067015, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.29993278230632514, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3002776519849864, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30095246866859415, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30110804831489224, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3012227104450105, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30168501488207783, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30190689203322024, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3019138870882473, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3021542947380289, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3022225394024624, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3023542393596219, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3025534918273052, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3027496109120608, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30292186427867934, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3038567377211026, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3041856910779602, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30422580354235707, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30432110732533435, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3045990944946926, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3047167842184929, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30477417926738604, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30509326830708344, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30513859321524245, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30517594574454104, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.305216496455227, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3052506823176614, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3053407226572825, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3055269920301519, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.305681844565166, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3056829295530814, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3056945112676442, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30601830204655944, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30614703915527786, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3071423474376661, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30756877106537794, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30764153422583995, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3081673527001227, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3081970808141119, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30862840446116274, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3089811127561253, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3091840186748834, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30921219775246417, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30954665574290513, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30967778725642026, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30989101119322926, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.30990444393045624, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3104626053929927, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31048760054333824, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.311342269275175, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3115394327314404, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.311549493614968, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3117314244246839, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3117530496542083, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31194490795870217, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3120355878391231, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3123502684884068, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3126005339090943, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3126341311281069, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31283829656588813, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31293921847728046, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3134029625542675, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31347578377194757, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.313965992511247, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31399469193521484, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3142258665258352, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3143148684091411, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31482357453466114, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31535415020278296, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31580842054085334, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31591822706276895, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31606464474834467, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3162880070116536, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31631897546509824, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3163529638850956, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31642292550251083, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3165456573152847, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31655833364843744, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.316669429741137, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3169080897897057, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31702174215643764, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31711075178760906, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.317133645187428, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31713675335879365, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3171928131479662, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3175606103193545, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31763101021353995, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31775593032345517, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3179174436220974, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3179292781121608, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31800348318375676, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3181521552714005, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3189042489555175, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31908814856055623, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31924406611620815, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3194452529034094, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31963701865547894, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31977843177890786, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.31980391176448675, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3199596962867348, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3201387191798172, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3202862283289854, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32039553276300414, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32079425032696385, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32090179843177996, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32097236471616974, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3214932886469828, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3215703805256841, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3217338693542696, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3218717083199526, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32190826071508527, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32222329530174615, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3223247368027464, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32284433507173327, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3228801485632221, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32306068971300456, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3232820400355293, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32348854201528415, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3236282967678598, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3238065227027586, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3238721534023766, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32465709552448924, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32467749048357564, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.325062424660928, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32516849856280566, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32561997930046066, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.325863144750585, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32629595874230344, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3266414876938989, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32674462713050206, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32710530880079286, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3272651464033754, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32772385619714095, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3279647483468762, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3282770581459846, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32867829544654414, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32906842131324204, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3291932516705637, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32935242893485395, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32947423261282044, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.32978308513421306, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3307800967526628, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33087372290335504, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3318673577821741, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3321294063746213, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3330494725550726, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33386090577754235, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3343784703205407, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3344916006837624, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3356391545667621, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33598621962253095, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3360519431485639, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3362415163154393, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3363350817974283, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3365863648540571, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33659775989754626, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3368306795130772, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33684260841159075, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3370926000028529, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3372613456800939, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33732179714187144, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3374800999784171, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33759925722500134, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33760880935459764, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33775287894880834, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33910413666341843, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.339107262617154, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3392621584626062, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3392991481853057, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33936325752080454, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33957310228559767, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33960386435108936, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3397326733470314, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.33995784474668433, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34036988667152046, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34055426838580277, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34082751412882817, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3414642300989021, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34186414993789477, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3419743967714327, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3421610910227549, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34244016724533927, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3425519489784226, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3426497919877923, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3427393621801569, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3433384475603604, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34357477349354915, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3436277232672177, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34363726686122925, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3438915070516061, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34401075328209413, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3440928284314154, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34437591180550226, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3447991150366168, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3448400912753659, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34486932313995766, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3449570360200469, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3453264683143772, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34540685700250573, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3455266755020332, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34648940212379326, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34658741216482536, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34667929996958796, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34669105788433086, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3469479283928087, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34750960370097295, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34765455937607226, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34772753515700183, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.347898276711082, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34796254148446276, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3479935816504908, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34814282434791355, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34846364390277595, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34857419850278265, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3486301153849401, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34863125009253443, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3488400109978971, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3488668793926879, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3491411761780547, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3492989059196214, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34943593781734, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3496315305176798, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34974124120441663, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.34990024880880577, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3502348074078934, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.35023792399866754, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3504816075510803, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35063336437800374, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3511477063447424, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35127665339040853, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35132725658624914, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35147847324134374, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35175843766948983, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.351802887539474, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35211103846703395, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35232740889686864, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35244301006843476, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35250901302609633, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35253487550987656, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35296954853826984, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35300656644832834, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3530402822561406, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3530704425565341, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3535245577226608, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35395560467780207, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3540496950623906, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3541969901994453, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3543535881611186, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35452889674096677, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35478055588471813, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3549197993240718, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3549921791084204, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35543523434142477, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35552021115499316, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35559884742095244, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3562299840890724, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35669983653857174, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35680464548555624, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3570007870531316, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35719120203069044, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3572605330833106, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35762705666910083, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35779327755986806, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3580155077721839, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3580697394444911, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35867826012638654, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3587767644194704, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.35882478271714874, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3588955113021792, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3589033471142438, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3590012323444899, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36007161342137556, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36110862289874895, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3613506747619491, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36170946939806214, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3618916290788326, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36191129902681074, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3619874364911894, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36203501043491576, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3622737266260459, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3623110329112314, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3623329431120007, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3626337148282439, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3627615441941423, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.363018962268441, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3638910742168116, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3638990643622161, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36392696238562783, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36410966244408494, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3642808873824663, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36429088786426866, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3643623197026059, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36458807646096675, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36465347975561124, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3646725702643919, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.364989649483821, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3651353705541952, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.365190265116775, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36519814081086693, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3653786106317193, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36558741475302775, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36565941611881736, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36579576390212953, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3658112482574832, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36586597955211486, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36590866232746505, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36591684055016865, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.365946571834833, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36616046379277506, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3662589699934139, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36664443771658894, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3666523727538887, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36669354742187776, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3667657068818914, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36698265993925083, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3670161188443333, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3670683712770192, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36716520917183726, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3675140144622035, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36757725932688673, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3681141773172552, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3681459572228782, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3682593227514933, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3683596258744622, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36837538424099137, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36841729473599927, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3684923185586928, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.368621444744434, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3686887933730027, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3687986526754841, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3690672107978457, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3693317774121385, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36936588382287694, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3695360747839532, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3696626507600719, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.36971672135861744, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3698658100318733, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3702239138737697, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37038380465113835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.370858991889354, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37088877963400396, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37089793398105797, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37145159014039597, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3715729783805784, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3716949287404912, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37183252201535516, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37252983481993096, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37270166368133467, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3728236703661922, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3729676197324351, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37316424471132403, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3736436107606705, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37413232127791196, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3741611921810863, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3743824050638352, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3747183773893819, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37490966593339525, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37507638905513047, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37509124625287515, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37512429595136026, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3751447971100019, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3751735901761097, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3751948651639376, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3752861197486027, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.375474849904524, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37567211255632577, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37572217955002624, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3758471903848481, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3759606099369229, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.376139764067705, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3763237068902877, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3767711115166965, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37685104457440893, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37700675639007386, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3772194962374256, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3774730054848645, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3778367051018811, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3779521268690139, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3782598197201605, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3785168678828594, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37890702066030035, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37936874276819255, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3795189926913853, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37958123876501554, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.37959413087484073, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.380567951867189, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38061953429703643, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3807144570254626, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38097184974143433, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38118554993453624, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3817648939970132, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38213352398085254, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3822547098013548, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38240098173694054, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3824482922929736, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3830604860637175, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38346436060164535, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38451686900481286, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3846760238057966, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3847310477360882, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38497990789780884, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3851133738024376, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3852179691207758, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3860422707271004, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38637805545800835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38648582983962637, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3871767891125448, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38718706335263725, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.3872781791698722, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38736638752490515, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38740483942112297, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3874369523240167, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38747211997157105, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3874749508810783, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38765359948333117, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3878248295846031, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3881238758697445, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3881481891008173, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38837811092336055, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3886331455637008, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.38867283717774176, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.388737626272726, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3894193278902039, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3901407694116193, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3901953834924077, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3905763341814481, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3905918544547893, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3907758473542345, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3909602127474674, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3915224174247516, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3916163543023074, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3916887381039708, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3928409794797343, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3930650437506766, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3932121798988447, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39335464102347123, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3934101650971405, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39341806509590627, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39342351223050953, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3934780422352208, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39367129929258055, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39402264841531875, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39419165533973305, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39466143524166786, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.394699155142298, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39486115530153965, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39487500875795306, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3948935226075743, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39501838209761075, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39525407301941967, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39602689423664833, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39614427334076674, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3961618429011036, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39616294020900356, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39689995790613614, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3969387426990387, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39729186907693115, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39735503775297004, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3973940540297035, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3974083815669946, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3974275649151178, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39751800835830603, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3976471516467151, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3979157242363587, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39809975592674873, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3982295955238896, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39832912153017186, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3985463025505063, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3988897828264827, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3990153193607606, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39909431471581225, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.3997142148627357, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.399876699532753, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.39991351118839613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4000249648135885, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.400841734499991, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4008648365415655, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4011780839752705, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4017989934752565, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.40200665101799415, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4022152325828832, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40223630242981484, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.402262221636584, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4023395556926437, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40308515946463047, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40311792505327226, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4035993008042521, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4037671713037126, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.4044890273038665, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40449886801238827, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4050510713782099, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40518619091434127, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40529591831990097, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4054586320645436, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40548051808737623, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40551937393212895, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4056312896116383, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4060099392920245, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40606714063924076, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40610659167031676, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4064329588918757, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40644105963386945, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40649596010497946, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4066623836718127, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4066697045668659, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40695546256532544, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40704952160066676, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40710209944288056, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4073869900471934, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4074418479246119, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4074690451408941, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40766974385943106, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4077678366797264, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4079371773154083, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4079711918257922, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.408189622440753, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4085447459432682, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40930508185689474, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40947078968138145, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4097483113162535, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.40988107851077293, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41046690720022727, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4106001030820459, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41060528163434135, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41071583805413553, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4109744980181061, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41117493415215156, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4113390840302069, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4116975119092696, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4120434607609137, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41206667419240556, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.41212060687927726, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41217622308367274, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4127236834987108, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41301514458790917, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41306494490299006, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41308528683347123, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4134349966512459, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4140208086784598, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4141061335532957, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4141500965898492, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4142568765938364, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4143776872173654, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41468080959938064, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4148353405560194, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4149016502495101, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41490235883602056, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41493683760245903, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4150067962702723, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41519671826683185, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41531474073316405, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41576626544636724, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41594007896498914, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4162672439680152, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4164717575613301, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4165728521261367, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41696674925702654, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4173347277408667, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4176315270949872, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4179356094019919, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.418067901420149, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4181260509804569, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4181751815039259, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41837349044725336, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4183946094968444, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41884861254249756, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41899311281129537, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4190276425146557, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.419093223823544, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4191382731873209, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.419171523899356, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41925903355555577, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41966537260741643, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.41987191920755534, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4200195402755703, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4201147695098052, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4203717298076852, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42039035990862983, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42066160524762836, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42072658793653417, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4208689223167835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4211127476061782, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4215775717452297, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4216127101672942, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42176318465039214, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4220915292614281, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4221039887479895, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4225617082265875, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4229224429547368, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.423087142421378, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42334988203687196, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4234314285358758, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42370526344536336, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42392653174746286, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4239318143940494, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4240827105033592, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42412190287371315, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42428229514669835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.425066115236706, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4250921281424628, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42529343575270656, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4258064444517142, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42598560793098805, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4260486760150244, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4260901072312826, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4262772810366773, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4263733409901856, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42639505630648905, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4265397825414463, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42694823055000347, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4270427873939722, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42718087595512766, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4274369079971361, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4274753594246681, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.427512377113447, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42756608221252823, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.42776997995816063, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42779362319128056, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.428027373366535, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42804328082774296, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42860316252748004, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4286559176884488, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42868737312206634, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4286934854767806, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42911350719816443, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4292228464501508, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42940251110551053, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.42948421010183835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4298976190666337, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43007087700029323, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43008983592468364, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4303046483527512, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43032203308747324, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.430479878371846, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43050595558105453, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43057245981106057, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4308077176220431, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.431205522515836, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4317467532489543, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43178356177732397, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43194080252890943, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4319961590009843, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43210111638025034, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4322122536917006, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4327204075792808, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43302027639677004, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4330857805851831, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4331558352782962, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4332143802872395, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4332313785220206, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4334842050844954, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4336291386922298, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4337838704028486, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43425317341036573, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4343675531815065, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4344286579586598, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43444021534774385, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43445822993544003, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43471619752589796, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43534438435398, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43539792037788316, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4354223258356602, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4354376191045378, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43572867638127366, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43579928806846097, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4362390649179163, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43633387053618056, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43642020025326606, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43660647433430366, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43701242820742625, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4373152894319101, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43735811476536135, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4373586537820623, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43738627955313764, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43788125876952133, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.438155978063983, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4390690230951049, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.439156338480662, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4392025881873404, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43936678403520296, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43943269835354537, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.43963941109878096, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4398606877784584, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.439934558301501, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4401826409398387, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4402101219544699, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44024291790251496, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4404583337828386, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44072638112055956, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4407268556505994, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44089014077049976, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4410340976008303, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.441053878060887, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.441071599321217, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44148586940629647, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4415806222940289, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44205327647629716, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4422988186560686, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44289699041746294, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44318932316677656, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44344334012502423, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44373630852388724, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4438539414486432, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44398051012003187, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44399392854194386, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4442247928531454, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4448533909078946, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4449719167129544, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4450526484213783, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44509075684018007, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4451762049723546, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4452667687997924, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44528542241119673, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4454174031812694, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44553351133523206, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4460545764057914, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44622076550404977, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44634779334230656, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4464622773495231, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44686599795383836, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4472844166003761, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4473072473054628, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4477027045391174, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44808652608760835, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44823975449355113, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4484811243351486, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4487488292182958, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.44907775122307186, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4491721097649978, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4494025352732891, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4494356865115994, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45056758558558585, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4509955600484935, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45109281817860425, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4516083468744014, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.45162750241174326, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4516485494341062, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45166338238505516, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.451721204076428, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4518440753205825, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45190267865999884, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45191830055735893, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4521401558186813, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4525594115003979, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4529195539885583, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45294677854236925, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4530284804122741, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4531591445329278, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4531734863630595, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4536472248001142, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45378373562302887, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4538351384385808, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4540988959027266, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4544859489236581, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4550943789611465, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45539309762151803, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45561819179756846, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45564062466843525, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4556531452227214, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45586933073587704, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4559122785388507, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4562938066206662, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45631200067789696, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45673257414318175, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4570162246460635, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45710955801750874, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4571357920781948, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4571775711284017, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45720649233041893, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4572914179784424, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4573571954364059, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4574305426144775, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4577189635096459, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4577292412481059, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45802758368413876, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4582405371832991, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45833511402130234, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.45837293698110104, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45853161403584136, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4585461418170707, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45878517041558703, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45881267736665415, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45905077831302854, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45905161516189685, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4591084777314812, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.45913231862215664, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.4592625677857994, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4599862387438812, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4600723710801546, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4601956165238015, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4603046026960802, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4604526018389523, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46047459879177116, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46063172138234343, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4606927543179549, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46087135492601067, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4613269659693494, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46167946889843847, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4617128168558209, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46181448166935385, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.46255337421845444, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4626460957139919, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46277458831215, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46284502200064853, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4628645021993265, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4630636319471889, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4633898110317647, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46348326298072945, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4637406315539928, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4637454222363921, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46423732899138925, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46427114756629434, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46430059475283375, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4644595201693297, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46446163597727647, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4645331978124793, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46492385023684785, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4649503580401303, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46509312838138306, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46523288763200016, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46530561723565494, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4654511383658293, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46589300666629324, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46589429158007656, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46616200382511336, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46627046083964024, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4663889479425233, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4666253484545559, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46667459257528576, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46683124641468354, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46725084593756927, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46725857636602314, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46761383395528244, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4676199595436419, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4679108112755117, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4679597705909757, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46828806399793266, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46857642610243416, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46904883776372736, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.46915924603659137, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4695656392215784, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4702750899023219, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47054486939236984, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47097686494540036, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.470998955864834, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4711193155935246, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47134631902097807, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4717101111594343, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47183734949311557, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.471903103082738, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.471993825431256, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.472240899839823, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4724211513787194, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.472508793112805, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.47256782261978103, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47286372678330973, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4731681070495133, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47318514390682037, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47332642897638494, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47341742805647596, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47342918590033944, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4735134822459432, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4735224507893598, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47384292982392845, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4741631641778482, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47417599395001775, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47426182731146, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4743384610569915, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4747054453695882, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4752897798707436, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4754755348987202, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4756209098099065, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4757018874916608, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4759033631177959, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4760179394996613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4761237891241503, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4761872912898666, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47622648966372544, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47635627625672056, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4764822201468773, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47663918575874276, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4767800126718127, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4771129271091285, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4775343647091899, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4775904901474308, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4779129521497155, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47794383859096834, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4780161336770192, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47808834636706943, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4783631569489254, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47851109973556627, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47889017186648, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4791787858032101, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.479237401804646, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4794105370650742, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4795854111290315, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.47967021862071224, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4798006750110353, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4798304486493304, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.4800148581083249, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48031814225594543, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48058030062018053, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48072177609785, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48084330805902076, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4810294024270703, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4814529776423006, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4817155366880285, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.48173179436794966, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4832108462033742, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4839903175231957, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.4843177125986461, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48442299213512685, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4848077193619722, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4848219881177369, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48532502383589105, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4853870350812041, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4854627688486483, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4858549105670581, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4859183699349071, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4860812884382377, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4862702440948214, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4871984673661837, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48751902965244975, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48767235345076565, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48787690369676456, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48796862586201833, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48813478897508067, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4882301929367283, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4886509181151373, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4889957992216917, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48936801122990153, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48938081797871813, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4894319917380539, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.48993628699390157, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4901555882388523, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49053238682123634, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4906519388986588, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49160511418971814, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4917084300173086, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4917904824989987, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4918162407727447, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4922416806559052, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49242521930839467, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49243703479786394, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49278715376057214, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4932602586258882, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4934080750029213, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49382235812545044, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.493959323034976, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4939948215262284, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.4940631620323922, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49409052112929586, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4941078703835405, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.494239328154589, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4947031618893888, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49481816809429024, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4955177881043081, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49552989677023884, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49571748608480215, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49616697993850756, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4963187416597496, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49637412784227464, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49677536339408124, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4968903059247641, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49705206142765695, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4972616086729609, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4972780712140833, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49760614117806995, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4976805248162601, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4977173274937789, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4977554869080407, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4980844420281828, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49848954176942406, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4985040347931691, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49872927663469185, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.49906361185300346, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4993676438836473, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4993715423801077, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4996836785722733, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.4999374536421658, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5000747219729079, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5003534197470574, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5003882625721248, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5003906726851151, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5005484764099284, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5014279688553875, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5015733715470224, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.501841952575856, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5018538528973426, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5018625919124002, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5025475056234558, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5026589989058108, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5028686374388212, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5028954919089916, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.50330321572613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5033934872339692, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5038206383548482, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5042090128817727, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5044662176655237, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5044822050584304, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.504939788768273, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5049498012185089, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5049900918375073, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5052343909695638, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.505756193428402, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5061750419092855, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5062623522568424, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5065371741303591, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5067510295394269, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5072478932712785, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5075145152390499, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5078857006224866, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5086030289671524, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5086082363825832, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5086316123645237, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5087628451720297, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5088001253329067, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5090469874552532, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5090726819022988, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.509283169292309, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5095017508368747, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5096512747297406, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5097170120166298, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5098908952307436, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5101493996945426, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5101984227369188, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5102332663325513, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5102443715924547, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5104453079546054, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5109027354386102, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5110234906468447, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5112285225316511, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5113271046553877, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5113297412888097, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5116846617647419, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5118004100623033, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.511806897337013, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5120228276904455, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5121598120603175, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.512393251973078, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5128084150889669, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5128706798205447, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5130840528568755, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5134568437126616, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5135354376121812, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5136490696758785, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5139784924728381, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5140800735686794, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5143817136556612, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.514413377501422, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5147186072755905, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5147343728358458, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5148163946350337, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5148566242485031, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5148880497923065, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5151982751889475, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5153258152028879, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5156061342857363, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5157292389503559, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5157623743450479, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5157674323457679, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5158291511972002, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5160828927907307, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5161839205220682, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5176442696382496, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5179436454314521, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5184783308281173, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5185777056693536, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5189366613667787, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5192198192273823, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5193897543559926, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5193976285824192, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5197270804173956, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5200178007126997, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5201529037670167, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5203562243738946, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5204651233639821, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5206470089848763, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5207129952035385, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.520878742541534, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.520901427438621, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.52102160718459, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5215164071975753, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5217518659299791, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5217606366755906, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5224861136066468, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5226036070174221, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5228622307957352, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5230309780559057, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5240393716208053, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5242508628899861, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5245846923599773, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5253279327923024, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5254087454987579, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5256179801912703, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5259906132132135, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5267222980912034, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5269329145114882, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.527415135389503, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5280538333270222, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5284263952221016, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5287163322240255, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.528840783973011, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5289508635899524, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5291796660579171, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5291925877433232, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5292787874746314, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5293051369413526, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5295913723848975, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5297471485762555, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5299175712809587, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5301242815615953, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5304488845781247, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5304802710105235, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5312845494927971, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5314353247958565, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5318804734427311, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5319884415292367, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5320556126858745, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5321095490208728, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5324547900302204, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5324913005611004, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5328098136577204, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5328410277964275, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5330540313732599, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5331392150647333, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5331559798263401, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5331773375540989, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5336054998932538, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5338842935519593, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5340186990068337, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5342286290599665, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5343136068153496, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5352514490344911, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5353256933800908, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5354489140905208, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5355235714704596, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.535690666665409, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.53577772331143, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5362756954456196, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5365219694270271, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5369692564984052, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5370888348284228, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5372895579132612, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5373505798397491, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.537551650134879, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5379175452316506, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5380376677494079, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5380655042728173, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5381548066876466, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5386982011531668, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5387569064540573, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.539061936432343, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5391006938708856, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5393943093020921, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5400339113236888, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5400783458782376, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5401105409112252, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5401997009976907, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5406403720685329, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5407900409327177, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5409493906090485, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5424318257160718, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5425486218563168, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5425506686557571, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5433109376710965, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5435093091281232, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5435736173743587, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5439199927956585, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5444385619638871, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5452492009962784, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5454036076499886, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5457589710405437, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5458029788983029, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5459093233247019, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5463775824946744, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5465458502252887, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5466543146578213, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5467312927043727, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5467535780035886, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5471267150102488, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5471529635570151, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5472249394190876, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5472760791314675, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.547404890556732, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5477369484484966, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5479464342088751, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5480999364855111, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.548593758789267, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.548858511760476, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5491388801976405, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.549646792425448, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5496896797929782, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5498295209708186, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5500958764240199, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5501632411067845, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5502666433592609, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5503001821747646, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5504675390707389, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5505413698289486, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5507458490184205, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5508491641397198, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.550880130585057, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5512586802202679, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5516840556533182, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5523197367523364, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5524241772262578, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5528960085623309, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5532131597581476, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5534904031428242, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5535629045872081, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5544634695031837, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5545906043773277, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5546707139177686, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5548273872677357, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5550600467428669, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5553390681325374, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5553833797828027, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5553982618690273, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5554202835078657, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5556961403001335, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5561753766537229, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5564208129682799, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5567780337808268, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5567841624238794, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5574182908247487, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5580326705027081, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5580705381670888, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5581436362407428, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5584750039136345, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5587105918650344, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5589690018875659, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5590879385494016, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5591206187853603, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5592711903961902, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5593981841686221, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5594331955471943, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5599104110831883, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.559991584182746, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5601546474679897, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5601678978805784, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5604412587484893, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5605886044283144, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.561290751082502, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5614918928607965, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5619451486808265, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5620720335911009, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5622898110685808, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5623643987433502, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5624190507997173, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5624755195605494, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5625203447176962, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5627860546439991, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5638661189622727, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5642324668094609, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5642692098498252, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5644573158216041, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5644770558471498, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5644970503220252, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5646245905346906, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5651487793516139, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5656729572756604, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5656807003812658, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5667462210248113, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5670089313104723, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5671423585973858, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5676543603371326, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5679443875483061, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5682148455977049, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.56895804159976, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5691845429323532, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5701875845982342, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5705307431316367, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5709333989929274, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5709352552053742, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5712617425944186, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5713218683708123, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5716638839349508, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.571940194990712, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5721907934294622, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5724119184723867, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5724691811306244, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5726447476795878, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5726995408059514, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5731878808708158, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5734439275111005, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5738624387891716, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5740721891375292, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5744075908147296, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5745922050514338, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.574621373537658, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5746690565498749, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.574671940706529, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5747637961085375, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5754416546971797, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5754607238721762, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5754811087458356, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5756596498512376, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5764937011501465, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5768919479995552, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5776926155350697, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5784417608071368, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5784879436277198, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5786908342914868, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5792312281243427, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5793406418874398, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5794752129444094, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5795645406225058, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.579644721541763, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5797535496221556, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5803329938807218, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5805850916002013, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5807790532608943, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5807876266890235, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5808917428921123, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5817480391934753, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5818737434995638, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5820154165102165, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5821231629763839, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5821560083375461, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5825178008612276, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5826452871563088, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5835589757937321, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5836246464746508, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5841823534489763, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5845159135691514, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5846357118756996, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5850518497676727, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5853383690752172, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5853416956059405, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5853745395274643, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5854539726490953, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5859203909748054, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5865069572799256, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5865484957131121, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5867976942602885, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5868094537533242, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5868529533088074, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5869752639870025, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5873823454688769, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5884422136844633, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5888523798817287, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5895611506066958, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5895727517943976, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5908290002428074, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5910383696088415, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5913540114036415, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5913835189840844, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5918178197437243, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5918537166782223, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5922270182994016, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5923024768005318, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.59243101830792, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5927097680186098, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5930930182304958, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.593969781725883, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5942481210311785, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5945009004490022, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5945646675181714, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5956560750544764, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5960585654011982, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5966513265685635, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.596719641060469, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.598391668706398, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5987144100749682, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5993063799689109, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5993252246332547, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.5996754456925346, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5998059896536744, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.5998340881046117, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6001414100211424, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6006780650582775, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6008448283402397, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.60140406792017, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6014329470771287, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6014855780407213, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6016489186044128, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6022218100928264, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6022993625179296, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6034836386700073, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6036838637289685, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6037245101050008, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6038925279840363, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6044186269894403, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6047229372141796, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6053810942778257, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6054042795684893, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6056058115493919, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6056851813647653, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6061963956685508, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6068419777024634, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6076274069680034, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6076334672951682, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6076782508112317, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6084480452387864, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6095607697534067, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6098088327983698, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.609865271382726, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6104507821594658, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6106229401928613, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6119898445168483, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6131000700595218, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6137094012997568, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6139971219179028, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6140140388455333, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6140193471702842, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6140550501078346, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6143214870969372, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6149456363413875, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6150068047090679, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.615495763947399, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6157415287176415, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6158336139005407, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6160907790286043, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6163523752887619, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6164598467777586, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6166795891830407, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6170414815930677, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6170505551644918, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6173015732459276, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6174461703290013, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6177118867007598, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6184142467182444, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6186711210573045, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6186866523073197, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6191177852008183, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6194220406754715, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.61950710493347, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6196302502534962, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6200258941122792, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6207345797233831, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6209423045941502, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6221093120630006, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6230660792970453, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.624123250032579, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.624456955448561, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6257202894826144, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6259676739088433, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6260564622809655, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6261827004381488, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6263392688460657, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6285134071605508, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6294258236516664, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6294751712916771, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6296571375631517, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6302923968526822, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6303707221327244, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6306015509137887, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.631772793800346, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6332248705478849, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6337745568053743, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.634519827399234, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6346269434424655, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.63555754030758, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6366416830535766, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6368595153855269, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6369690214764328, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6369780478582678, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6372290943497158, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6375019723196682, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6376868998141707, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6379079137887957, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6381087700851542, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6382788548407723, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6382893697496637, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6385419058579822, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6388451219186874, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6390794887497677, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6394731547621646, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6395497039194509, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6403960950994383, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6404043370648024, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6407851668493074, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6408314512282215, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6409116173099025, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6438080876218751, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6439006246901633, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6440094892674921, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6441781200167103, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6460401131713112, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6461050497894801, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6470289816295898, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6470675075998095, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.647299662741479, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6479218494873256, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6480515686555675, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6482073091357996, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6501354180409191, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6504310655139857, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6516341809330506, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6516802170455089, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6517460818013399, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6533926037685389, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6534768912187586, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6540479334496986, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6541131698337993, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6549358442315354, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6552499552547361, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6562324223094087, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6576892457109877, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6578673196059632, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6592636973475127, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6593917387147417, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6600558943491782, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6608143126920307, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6610089820800884, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6627309793144276, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6627730734694413, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6628408086935249, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6630328653563491, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6631344426204305, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6632490382780248, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6633174001768882, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.663368237453251, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6645023289356217, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6647451839895396, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6649116613225876, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6657633418331379, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.665850672531449, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6658979924281234, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6659900818819342, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6680023552123702, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6682949730639234, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6683134806300404, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6686450496162564, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.668705984466253, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6694465601848265, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6709640525502297, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6711028354302491, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.671600179252954, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6716781289211151, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6736922058159479, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6752211284723924, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6755206984397951, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6763243974000961, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6765882437672726, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6766673067909394, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6773216332164222, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6784766205367248, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6788248110053092, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6794790697615807, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6810653894164197, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.681088478958914, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6822366223555942, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6823052360982527, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6828940736099436, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.684324437258235, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6844059982976898, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6870694883936136, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6874082372723426, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6876802351715594, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.68838965035375, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6890070560707938, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6891009960256288, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6892607549029515, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6894952616585989, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6896568298626133, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.690565735112405, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6908021856442939, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6949271425526893, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.6953816130013575, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6955333530059413, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.6957920758144401, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.697100524218348, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7005738416181253, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7013004668815156, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7014240131023398, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7019690984730408, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7020870614779238, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7025239894583362, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.70424676886535, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.704916337282004, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7054041207004632, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7062386388168971, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7064581810870554, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7070800528041495, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7091963679616993, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7093052228561193, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7093865738775194, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7106273454109289, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7115906395046118, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7122904331898308, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7128642550912854, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.714423304689756, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7145993782350618, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7149355038355669, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7154993742353803, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7157451089041933, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7160008798354001, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7171817751567552, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7173218670880315, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7173922145500511, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7174682819430225, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7201914769851084, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7206310519728859, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7208371462314291, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.72115442272089, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7217413090411005, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.721844346334458, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7226010761713295, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7227198516446763, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7229533507033076, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7234127884430004, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7235827011795429, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7242254171448967, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7252440038533894, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7260012354862247, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7264255479448343, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7278160778971725, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7290807161653076, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7290962530243931, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7307576416765187, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7314180249802879, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7314270667071776, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7321612322573141, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7321904447255759, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7325772906543201, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7328831779601288, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7336915040860486, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7340211507693338, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.734697012543854, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7351397262499481, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.735816240944232, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7361732814259369, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.736778987026994, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7372380851103719, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7383402385203184, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7391394785183707, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7394327202597205, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7395239210230505, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7409529305177958, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7411306477720923, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7413984474516907, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7414979730510156, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.742436319569479, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7427873954007956, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7429193936257499, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.743097932220889, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7433995235786155, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7452100601907172, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7456585328964799, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7457330147069036, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7468859295658611, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7475044090323137, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7477039523985521, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7478058641173247, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.748649162068683, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7527959408818659, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.752908798698894, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7533076279221518, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7535176206665196, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7549930877332157, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7557081475225098, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7557509598479946, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7563209217880354, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7576975604907115, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7577398786523384, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.758108836423651, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7585298762505439, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.75860636017778, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.759260377616793, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7594057911742632, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7598313974705659, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7600291354009411, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7602797609179801, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7611464640875377, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7625805786163945, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7636951539355732, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7637375514135747, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7639173348589483, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7641416008305106, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7647732319968701, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.765649507728034, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.765949340934392, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.767593236185277, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7678698657380977, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7680297045268509, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7682336937120187, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7683811202961844, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7695690368851692, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7695781483090884, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7717889215571653, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7724591841518231, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7729198427800242, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7739417197341629, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7751133421753299, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.776394039483127, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7768853837287147, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.777726132675854, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7777404202183904, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7788166048186522, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7792905736697642, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.779536409948901, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7795880445989972, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7802145202235734, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7806233868522005, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7814756747170207, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7823199507780509, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7834778083393812, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7835353751565594, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7838414836239944, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7846434779940497, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7864084528682759, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7864545326333839, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7866520818094582, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7870874894411527, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7881296645021354, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7883870581354819, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.7885316959904247, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7889793587103667, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7896627810062686, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7905654502513735, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7918444163753201, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7926486027256063, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.792974422080206, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.794585947447579, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7951654009427056, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7956163967743484, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7960875158376267, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7964902648267155, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7970281522230914, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.797232126617696, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.7981610891423399, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.800075367907344, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.8007499409858011, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.8016446440415499, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8016518544873689, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.801706816653373, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8037163310347121, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8039425597495025, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8041109034072045, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8049065609385238, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8055542906183162, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8057520398093148, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8059310360536158, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8060824404710438, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8084206308082986, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8092154843612009, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8096703940674866, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8101202236666096, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8109800294238354, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.814209197083378, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.817251090197609, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8173305962105034, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8176152877045986, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8190221936965086, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8214154384988374, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8227425524605556, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8234978399884345, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8237957423232563, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8251755199064313, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8259118269404662, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8264159786525522, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8304263550034506, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8315056189584892, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8327240482444658, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8329849649952815, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8332658252095922, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8341955255766726, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8343420753207138, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8354894691046052, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8360377720327562, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8379008393337967, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8399845407785556, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8404152322435414, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.8407917763705826, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8419290079308246, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8419343103870769, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8447190345855659, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8464581460478837, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8480132449173945, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8484985183159263, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8491994420787495, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8547235751366467, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8562712391871214, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8577302828968623, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8588579943781528, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8608223443625079, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8627401699317495, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8632249800296478, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.863695797106108, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8651607312449215, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8702819820205636, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8703956647408323, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8707702808062564, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8746366269376157, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8758020357819742, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8762149575446023, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8766336798138205, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8775722279833504, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8794718125659888, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8796572540012833, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8798775397960965, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8813177292989458, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8837266574854995, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8847812648610415, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8850004151807719, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8868338911427727, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8869827124011276, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8879834080876077, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8895300637319219, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8929995134434694, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8935318401552093, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.894306819441933, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8956923274026454, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8975437129171107, "label": 0, "label_left": "TN", "label_right": "FP"}, {"proba": 0.8984062595927886, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8984461582395239, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8986018167040625, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.8991844609252027, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9003873320405619, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9005162610186725, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9011171122563403, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9012648865322785, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9103643247956441, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9111153687960238, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.912780294680153, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9155653340858569, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9181898922521072, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9194910858464257, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9196679024233471, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9223151370129681, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9257275519565248, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9272991180446511, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9301680842073551, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9305368109967974, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9318622677595507, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9319034204458974, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9341180473602835, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9344824373885894, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9362811289251527, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9384431075866206, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9396648565198554, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9406645787340706, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.944587671803588, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9450622325144724, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9457598437658336, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9481300303875694, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9497339324496067, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9525039403917136, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9559343441437204, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9586301842893976, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9622031775135576, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9672054950674139, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9698122564110878, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9721417601540634, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.97459551266073, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9746015285273146, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9775800767560531, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9776428155555296, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9839275419141598, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9885514695575192, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9916899427151011, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9930918947140022, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.9998584477541026, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}, {"proba": 0.999999, "label": 1, "label_left": "FN", "label_right": "TP"}], "empty": [{}], "data-a41302de01f838faad7dc6f0dc229582": [{"TPR": 0.0, "FPR": 0.0, "ROC_Thresholds": 1.9999989999999999, "ROC_Thresholds_Shift": 0.999999, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.0425, "FPR": 0.0, "ROC_Thresholds": 0.999999, "ROC_Thresholds_Shift": 0.8984062595927886, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.165, "FPR": 0.0, "ROC_Thresholds": 0.8984062595927886, "ROC_Thresholds_Shift": 0.8975437129171107, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.165, "FPR": 0.0005, "ROC_Thresholds": 0.8975437129171107, "ROC_Thresholds_Shift": 0.8407917763705826, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.265, "FPR": 0.0005, "ROC_Thresholds": 0.8407917763705826, "ROC_Thresholds_Shift": 0.8404152322435414, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.265, "FPR": 0.001, "ROC_Thresholds": 0.8404152322435414, "ROC_Thresholds_Shift": 0.8016446440415499, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.3625, "FPR": 0.001, "ROC_Thresholds": 0.8016446440415499, "ROC_Thresholds_Shift": 0.7981610891423399, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.3625, "FPR": 0.0025, "ROC_Thresholds": 0.7981610891423399, "ROC_Thresholds_Shift": 0.792974422080206, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.3825, "FPR": 0.0025, "ROC_Thresholds": 0.792974422080206, "ROC_Thresholds_Shift": 0.7926486027256063, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.3825, "FPR": 0.003, "ROC_Thresholds": 0.7926486027256063, "ROC_Thresholds_Shift": 0.7885316959904247, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.395, "FPR": 0.003, "ROC_Thresholds": 0.7885316959904247, "ROC_Thresholds_Shift": 0.7883870581354819, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.395, "FPR": 0.0035, "ROC_Thresholds": 0.7883870581354819, "ROC_Thresholds_Shift": 0.7823199507780509, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.42, "FPR": 0.0035, "ROC_Thresholds": 0.7823199507780509, "ROC_Thresholds_Shift": 0.7814756747170207, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.42, "FPR": 0.004, "ROC_Thresholds": 0.7814756747170207, "ROC_Thresholds_Shift": 0.765649507728034, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.48, "FPR": 0.004, "ROC_Thresholds": 0.765649507728034, "ROC_Thresholds_Shift": 0.7636951539355732, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.49, "FPR": 0.0045, "ROC_Thresholds": 0.7636951539355732, "ROC_Thresholds_Shift": 0.7647732319968701, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.48, "FPR": 0.0045, "ROC_Thresholds": 0.7647732319968701, "ROC_Thresholds_Shift": 0.7625805786163945, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.49, "FPR": 0.005, "ROC_Thresholds": 0.7625805786163945, "ROC_Thresholds_Shift": 0.7611464640875377, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.4925, "FPR": 0.005, "ROC_Thresholds": 0.7611464640875377, "ROC_Thresholds_Shift": 0.7602797609179801, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.4925, "FPR": 0.0055, "ROC_Thresholds": 0.7602797609179801, "ROC_Thresholds_Shift": 0.7600291354009411, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.495, "FPR": 0.0055, "ROC_Thresholds": 0.7600291354009411, "ROC_Thresholds_Shift": 0.7598313974705659, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.495, "FPR": 0.006, "ROC_Thresholds": 0.7598313974705659, "ROC_Thresholds_Shift": 0.758108836423651, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5075, "FPR": 0.006, "ROC_Thresholds": 0.758108836423651, "ROC_Thresholds_Shift": 0.7557509598479946, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.515, "FPR": 0.0065, "ROC_Thresholds": 0.7557509598479946, "ROC_Thresholds_Shift": 0.7577398786523384, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5075, "FPR": 0.0065, "ROC_Thresholds": 0.7577398786523384, "ROC_Thresholds_Shift": 0.7557081475225098, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.515, "FPR": 0.007, "ROC_Thresholds": 0.7557081475225098, "ROC_Thresholds_Shift": 0.7549930877332157, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5175, "FPR": 0.007, "ROC_Thresholds": 0.7549930877332157, "ROC_Thresholds_Shift": 0.7535176206665196, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5175, "FPR": 0.0075, "ROC_Thresholds": 0.7535176206665196, "ROC_Thresholds_Shift": 0.752908798698894, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5225, "FPR": 0.0075, "ROC_Thresholds": 0.752908798698894, "ROC_Thresholds_Shift": 0.7527959408818659, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5225, "FPR": 0.008, "ROC_Thresholds": 0.7527959408818659, "ROC_Thresholds_Shift": 0.748649162068683, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.525, "FPR": 0.008, "ROC_Thresholds": 0.748649162068683, "ROC_Thresholds_Shift": 0.7456585328964799, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5375, "FPR": 0.0085, "ROC_Thresholds": 0.7456585328964799, "ROC_Thresholds_Shift": 0.7478058641173247, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.525, "FPR": 0.0085, "ROC_Thresholds": 0.7478058641173247, "ROC_Thresholds_Shift": 0.7429193936257499, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5425, "FPR": 0.0095, "ROC_Thresholds": 0.7429193936257499, "ROC_Thresholds_Shift": 0.7433995235786155, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5375, "FPR": 0.0095, "ROC_Thresholds": 0.7433995235786155, "ROC_Thresholds_Shift": 0.7414979730510156, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5425, "FPR": 0.011, "ROC_Thresholds": 0.7414979730510156, "ROC_Thresholds_Shift": 0.7413984474516907, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.545, "FPR": 0.011, "ROC_Thresholds": 0.7413984474516907, "ROC_Thresholds_Shift": 0.7409529305177958, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.545, "FPR": 0.012, "ROC_Thresholds": 0.7409529305177958, "ROC_Thresholds_Shift": 0.7394327202597205, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.55, "FPR": 0.012, "ROC_Thresholds": 0.7394327202597205, "ROC_Thresholds_Shift": 0.7391394785183707, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.55, "FPR": 0.0125, "ROC_Thresholds": 0.7391394785183707, "ROC_Thresholds_Shift": 0.7372380851103719, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.555, "FPR": 0.0125, "ROC_Thresholds": 0.7372380851103719, "ROC_Thresholds_Shift": 0.736778987026994, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.555, "FPR": 0.013, "ROC_Thresholds": 0.736778987026994, "ROC_Thresholds_Shift": 0.735816240944232, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.56, "FPR": 0.013, "ROC_Thresholds": 0.735816240944232, "ROC_Thresholds_Shift": 0.7351397262499481, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.56, "FPR": 0.0135, "ROC_Thresholds": 0.7351397262499481, "ROC_Thresholds_Shift": 0.7321612322573141, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5775, "FPR": 0.0135, "ROC_Thresholds": 0.7321612322573141, "ROC_Thresholds_Shift": 0.7314270667071776, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5775, "FPR": 0.014, "ROC_Thresholds": 0.7314270667071776, "ROC_Thresholds_Shift": 0.7260012354862247, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.595, "FPR": 0.014, "ROC_Thresholds": 0.7260012354862247, "ROC_Thresholds_Shift": 0.7252440038533894, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.595, "FPR": 0.0145, "ROC_Thresholds": 0.7252440038533894, "ROC_Thresholds_Shift": 0.7242254171448967, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5975, "FPR": 0.0145, "ROC_Thresholds": 0.7242254171448967, "ROC_Thresholds_Shift": 0.7234127884430004, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6, "FPR": 0.015, "ROC_Thresholds": 0.7234127884430004, "ROC_Thresholds_Shift": 0.7235827011795429, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.5975, "FPR": 0.015, "ROC_Thresholds": 0.7235827011795429, "ROC_Thresholds_Shift": 0.7229533507033076, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6, "FPR": 0.0155, "ROC_Thresholds": 0.7229533507033076, "ROC_Thresholds_Shift": 0.7227198516446763, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6025, "FPR": 0.0155, "ROC_Thresholds": 0.7227198516446763, "ROC_Thresholds_Shift": 0.7226010761713295, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6025, "FPR": 0.016, "ROC_Thresholds": 0.7226010761713295, "ROC_Thresholds_Shift": 0.72115442272089, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.61, "FPR": 0.016, "ROC_Thresholds": 0.72115442272089, "ROC_Thresholds_Shift": 0.7208371462314291, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.61, "FPR": 0.0165, "ROC_Thresholds": 0.7208371462314291, "ROC_Thresholds_Shift": 0.7201914769851084, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.615, "FPR": 0.0165, "ROC_Thresholds": 0.7201914769851084, "ROC_Thresholds_Shift": 0.7173218670880315, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6175, "FPR": 0.0175, "ROC_Thresholds": 0.7173218670880315, "ROC_Thresholds_Shift": 0.7173922145500511, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.615, "FPR": 0.0175, "ROC_Thresholds": 0.7173922145500511, "ROC_Thresholds_Shift": 0.7160008798354001, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6175, "FPR": 0.0185, "ROC_Thresholds": 0.7160008798354001, "ROC_Thresholds_Shift": 0.7149355038355669, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.625, "FPR": 0.0185, "ROC_Thresholds": 0.7149355038355669, "ROC_Thresholds_Shift": 0.7145993782350618, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.625, "FPR": 0.019, "ROC_Thresholds": 0.7145993782350618, "ROC_Thresholds_Shift": 0.714423304689756, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6275, "FPR": 0.019, "ROC_Thresholds": 0.714423304689756, "ROC_Thresholds_Shift": 0.7128642550912854, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6275, "FPR": 0.0195, "ROC_Thresholds": 0.7128642550912854, "ROC_Thresholds_Shift": 0.7106273454109289, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.635, "FPR": 0.0195, "ROC_Thresholds": 0.7106273454109289, "ROC_Thresholds_Shift": 0.7093865738775194, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.635, "FPR": 0.02, "ROC_Thresholds": 0.7093865738775194, "ROC_Thresholds_Shift": 0.7091963679616993, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.64, "FPR": 0.02, "ROC_Thresholds": 0.7091963679616993, "ROC_Thresholds_Shift": 0.7025239894583362, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.65, "FPR": 0.0215, "ROC_Thresholds": 0.7025239894583362, "ROC_Thresholds_Shift": 0.7062386388168971, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.64, "FPR": 0.0215, "ROC_Thresholds": 0.7062386388168971, "ROC_Thresholds_Shift": 0.7020870614779238, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.65, "FPR": 0.022, "ROC_Thresholds": 0.7020870614779238, "ROC_Thresholds_Shift": 0.7014240131023398, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.655, "FPR": 0.022, "ROC_Thresholds": 0.7014240131023398, "ROC_Thresholds_Shift": 0.7005738416181253, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.655, "FPR": 0.023, "ROC_Thresholds": 0.7005738416181253, "ROC_Thresholds_Shift": 0.6953816130013575, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.665, "FPR": 0.023, "ROC_Thresholds": 0.6953816130013575, "ROC_Thresholds_Shift": 0.6896568298626133, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.665, "FPR": 0.025, "ROC_Thresholds": 0.6896568298626133, "ROC_Thresholds_Shift": 0.6894952616585989, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6675, "FPR": 0.025, "ROC_Thresholds": 0.6894952616585989, "ROC_Thresholds_Shift": 0.6892607549029515, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6675, "FPR": 0.0255, "ROC_Thresholds": 0.6892607549029515, "ROC_Thresholds_Shift": 0.68838965035375, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.675, "FPR": 0.0255, "ROC_Thresholds": 0.68838965035375, "ROC_Thresholds_Shift": 0.6876802351715594, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.675, "FPR": 0.026, "ROC_Thresholds": 0.6876802351715594, "ROC_Thresholds_Shift": 0.6874082372723426, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6775, "FPR": 0.026, "ROC_Thresholds": 0.6874082372723426, "ROC_Thresholds_Shift": 0.6870694883936136, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6775, "FPR": 0.0265, "ROC_Thresholds": 0.6870694883936136, "ROC_Thresholds_Shift": 0.684324437258235, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6825, "FPR": 0.0265, "ROC_Thresholds": 0.684324437258235, "ROC_Thresholds_Shift": 0.6828940736099436, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6825, "FPR": 0.027, "ROC_Thresholds": 0.6828940736099436, "ROC_Thresholds_Shift": 0.6823052360982527, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.685, "FPR": 0.027, "ROC_Thresholds": 0.6823052360982527, "ROC_Thresholds_Shift": 0.681088478958914, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6875, "FPR": 0.0275, "ROC_Thresholds": 0.681088478958914, "ROC_Thresholds_Shift": 0.6822366223555942, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.685, "FPR": 0.0275, "ROC_Thresholds": 0.6822366223555942, "ROC_Thresholds_Shift": 0.6765882437672726, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6875, "FPR": 0.031, "ROC_Thresholds": 0.6765882437672726, "ROC_Thresholds_Shift": 0.6763243974000961, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.69, "FPR": 0.031, "ROC_Thresholds": 0.6763243974000961, "ROC_Thresholds_Shift": 0.6755206984397951, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.69, "FPR": 0.0315, "ROC_Thresholds": 0.6755206984397951, "ROC_Thresholds_Shift": 0.6716781289211151, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6975, "FPR": 0.0315, "ROC_Thresholds": 0.6716781289211151, "ROC_Thresholds_Shift": 0.671600179252954, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.6975, "FPR": 0.032, "ROC_Thresholds": 0.671600179252954, "ROC_Thresholds_Shift": 0.6711028354302491, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7, "FPR": 0.032, "ROC_Thresholds": 0.6711028354302491, "ROC_Thresholds_Shift": 0.668705984466253, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.705, "FPR": 0.0325, "ROC_Thresholds": 0.668705984466253, "ROC_Thresholds_Shift": 0.6709640525502297, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7, "FPR": 0.0325, "ROC_Thresholds": 0.6709640525502297, "ROC_Thresholds_Shift": 0.6686450496162564, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.705, "FPR": 0.033, "ROC_Thresholds": 0.6686450496162564, "ROC_Thresholds_Shift": 0.6682949730639234, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.71, "FPR": 0.033, "ROC_Thresholds": 0.6682949730639234, "ROC_Thresholds_Shift": 0.6680023552123702, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.71, "FPR": 0.0335, "ROC_Thresholds": 0.6680023552123702, "ROC_Thresholds_Shift": 0.6658979924281234, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.715, "FPR": 0.0335, "ROC_Thresholds": 0.6658979924281234, "ROC_Thresholds_Shift": 0.6649116613225876, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.715, "FPR": 0.035, "ROC_Thresholds": 0.6649116613225876, "ROC_Thresholds_Shift": 0.663368237453251, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7225, "FPR": 0.035, "ROC_Thresholds": 0.663368237453251, "ROC_Thresholds_Shift": 0.6631344426204305, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7275, "FPR": 0.0355, "ROC_Thresholds": 0.6631344426204305, "ROC_Thresholds_Shift": 0.6633174001768882, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7225, "FPR": 0.0355, "ROC_Thresholds": 0.6633174001768882, "ROC_Thresholds_Shift": 0.6610089820800884, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.73, "FPR": 0.0375, "ROC_Thresholds": 0.6610089820800884, "ROC_Thresholds_Shift": 0.6627309793144276, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7275, "FPR": 0.0375, "ROC_Thresholds": 0.6627309793144276, "ROC_Thresholds_Shift": 0.6593917387147417, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.73, "FPR": 0.039, "ROC_Thresholds": 0.6593917387147417, "ROC_Thresholds_Shift": 0.6592636973475127, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7325, "FPR": 0.039, "ROC_Thresholds": 0.6592636973475127, "ROC_Thresholds_Shift": 0.6578673196059632, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7325, "FPR": 0.0395, "ROC_Thresholds": 0.6578673196059632, "ROC_Thresholds_Shift": 0.6576892457109877, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.735, "FPR": 0.0395, "ROC_Thresholds": 0.6576892457109877, "ROC_Thresholds_Shift": 0.6562324223094087, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.735, "FPR": 0.04, "ROC_Thresholds": 0.6562324223094087, "ROC_Thresholds_Shift": 0.6552499552547361, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7375, "FPR": 0.04, "ROC_Thresholds": 0.6552499552547361, "ROC_Thresholds_Shift": 0.6549358442315354, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7375, "FPR": 0.0405, "ROC_Thresholds": 0.6549358442315354, "ROC_Thresholds_Shift": 0.6534768912187586, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.745, "FPR": 0.0405, "ROC_Thresholds": 0.6534768912187586, "ROC_Thresholds_Shift": 0.6517460818013399, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.745, "FPR": 0.0415, "ROC_Thresholds": 0.6517460818013399, "ROC_Thresholds_Shift": 0.6516341809330506, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.75, "FPR": 0.0415, "ROC_Thresholds": 0.6516341809330506, "ROC_Thresholds_Shift": 0.6504310655139857, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.75, "FPR": 0.042, "ROC_Thresholds": 0.6504310655139857, "ROC_Thresholds_Shift": 0.6501354180409191, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7525, "FPR": 0.042, "ROC_Thresholds": 0.6501354180409191, "ROC_Thresholds_Shift": 0.6482073091357996, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7525, "FPR": 0.0425, "ROC_Thresholds": 0.6482073091357996, "ROC_Thresholds_Shift": 0.647299662741479, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.76, "FPR": 0.0425, "ROC_Thresholds": 0.647299662741479, "ROC_Thresholds_Shift": 0.6460401131713112, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.765, "FPR": 0.0435, "ROC_Thresholds": 0.6460401131713112, "ROC_Thresholds_Shift": 0.6470289816295898, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.76, "FPR": 0.0435, "ROC_Thresholds": 0.6470289816295898, "ROC_Thresholds_Shift": 0.6439006246901633, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.765, "FPR": 0.045, "ROC_Thresholds": 0.6439006246901633, "ROC_Thresholds_Shift": 0.6409116173099025, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.77, "FPR": 0.045, "ROC_Thresholds": 0.6409116173099025, "ROC_Thresholds_Shift": 0.6403960950994383, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.77, "FPR": 0.047, "ROC_Thresholds": 0.6403960950994383, "ROC_Thresholds_Shift": 0.6395497039194509, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7725, "FPR": 0.047, "ROC_Thresholds": 0.6395497039194509, "ROC_Thresholds_Shift": 0.6394731547621646, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7725, "FPR": 0.0475, "ROC_Thresholds": 0.6394731547621646, "ROC_Thresholds_Shift": 0.6390794887497677, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.775, "FPR": 0.0475, "ROC_Thresholds": 0.6390794887497677, "ROC_Thresholds_Shift": 0.6379079137887957, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7775, "FPR": 0.05, "ROC_Thresholds": 0.6379079137887957, "ROC_Thresholds_Shift": 0.6381087700851542, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.775, "FPR": 0.05, "ROC_Thresholds": 0.6381087700851542, "ROC_Thresholds_Shift": 0.6376868998141707, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7775, "FPR": 0.0505, "ROC_Thresholds": 0.6376868998141707, "ROC_Thresholds_Shift": 0.6372290943497158, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7825, "FPR": 0.0505, "ROC_Thresholds": 0.6372290943497158, "ROC_Thresholds_Shift": 0.6369780478582678, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7825, "FPR": 0.051, "ROC_Thresholds": 0.6369780478582678, "ROC_Thresholds_Shift": 0.6368595153855269, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7875, "FPR": 0.051, "ROC_Thresholds": 0.6368595153855269, "ROC_Thresholds_Shift": 0.63555754030758, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.7875, "FPR": 0.052, "ROC_Thresholds": 0.63555754030758, "ROC_Thresholds_Shift": 0.6346269434424655, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.79, "FPR": 0.052, "ROC_Thresholds": 0.6346269434424655, "ROC_Thresholds_Shift": 0.6337745568053743, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.79, "FPR": 0.053, "ROC_Thresholds": 0.6337745568053743, "ROC_Thresholds_Shift": 0.631772793800346, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.795, "FPR": 0.053, "ROC_Thresholds": 0.631772793800346, "ROC_Thresholds_Shift": 0.6303707221327244, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.795, "FPR": 0.054, "ROC_Thresholds": 0.6303707221327244, "ROC_Thresholds_Shift": 0.6296571375631517, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8, "FPR": 0.054, "ROC_Thresholds": 0.6296571375631517, "ROC_Thresholds_Shift": 0.6263392688460657, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8025, "FPR": 0.0555, "ROC_Thresholds": 0.6263392688460657, "ROC_Thresholds_Shift": 0.6285134071605508, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8, "FPR": 0.0555, "ROC_Thresholds": 0.6285134071605508, "ROC_Thresholds_Shift": 0.6257202894826144, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8025, "FPR": 0.0575, "ROC_Thresholds": 0.6257202894826144, "ROC_Thresholds_Shift": 0.624456955448561, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.805, "FPR": 0.0575, "ROC_Thresholds": 0.624456955448561, "ROC_Thresholds_Shift": 0.61950710493347, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.805, "FPR": 0.0615, "ROC_Thresholds": 0.61950710493347, "ROC_Thresholds_Shift": 0.6194220406754715, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8075, "FPR": 0.0615, "ROC_Thresholds": 0.6194220406754715, "ROC_Thresholds_Shift": 0.6191177852008183, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8075, "FPR": 0.062, "ROC_Thresholds": 0.6191177852008183, "ROC_Thresholds_Shift": 0.6186711210573045, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8125, "FPR": 0.062, "ROC_Thresholds": 0.6186711210573045, "ROC_Thresholds_Shift": 0.6173015732459276, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8125, "FPR": 0.064, "ROC_Thresholds": 0.6173015732459276, "ROC_Thresholds_Shift": 0.6170505551644918, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.815, "FPR": 0.064, "ROC_Thresholds": 0.6170505551644918, "ROC_Thresholds_Shift": 0.6170414815930677, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.815, "FPR": 0.0645, "ROC_Thresholds": 0.6170414815930677, "ROC_Thresholds_Shift": 0.6166795891830407, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8175, "FPR": 0.0645, "ROC_Thresholds": 0.6166795891830407, "ROC_Thresholds_Shift": 0.6149456363413875, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8175, "FPR": 0.0685, "ROC_Thresholds": 0.6149456363413875, "ROC_Thresholds_Shift": 0.6140550501078346, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8225, "FPR": 0.0685, "ROC_Thresholds": 0.6140550501078346, "ROC_Thresholds_Shift": 0.6140193471702842, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8225, "FPR": 0.069, "ROC_Thresholds": 0.6140193471702842, "ROC_Thresholds_Shift": 0.6140140388455333, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.825, "FPR": 0.069, "ROC_Thresholds": 0.6140140388455333, "ROC_Thresholds_Shift": 0.6119898445168483, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8275, "FPR": 0.0705, "ROC_Thresholds": 0.6119898445168483, "ROC_Thresholds_Shift": 0.6131000700595218, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.825, "FPR": 0.0705, "ROC_Thresholds": 0.6131000700595218, "ROC_Thresholds_Shift": 0.6106229401928613, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8275, "FPR": 0.071, "ROC_Thresholds": 0.6106229401928613, "ROC_Thresholds_Shift": 0.6104507821594658, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.83, "FPR": 0.071, "ROC_Thresholds": 0.6104507821594658, "ROC_Thresholds_Shift": 0.6098088327983698, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.83, "FPR": 0.072, "ROC_Thresholds": 0.6098088327983698, "ROC_Thresholds_Shift": 0.6084480452387864, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.835, "FPR": 0.072, "ROC_Thresholds": 0.6084480452387864, "ROC_Thresholds_Shift": 0.6076334672951682, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.835, "FPR": 0.073, "ROC_Thresholds": 0.6076334672951682, "ROC_Thresholds_Shift": 0.6076274069680034, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8375, "FPR": 0.073, "ROC_Thresholds": 0.6076274069680034, "ROC_Thresholds_Shift": 0.6016489186044128, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.84, "FPR": 0.08, "ROC_Thresholds": 0.6016489186044128, "ROC_Thresholds_Shift": 0.6022218100928264, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8375, "FPR": 0.08, "ROC_Thresholds": 0.6022218100928264, "ROC_Thresholds_Shift": 0.60140406792017, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.84, "FPR": 0.0815, "ROC_Thresholds": 0.60140406792017, "ROC_Thresholds_Shift": 0.6008448283402397, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8425, "FPR": 0.0815, "ROC_Thresholds": 0.6008448283402397, "ROC_Thresholds_Shift": 0.5996754456925346, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8425, "FPR": 0.084, "ROC_Thresholds": 0.5996754456925346, "ROC_Thresholds_Shift": 0.5993252246332547, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.845, "FPR": 0.084, "ROC_Thresholds": 0.5993252246332547, "ROC_Thresholds_Shift": 0.5956560750544764, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.845, "FPR": 0.0875, "ROC_Thresholds": 0.5956560750544764, "ROC_Thresholds_Shift": 0.5945646675181714, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8475, "FPR": 0.0875, "ROC_Thresholds": 0.5945646675181714, "ROC_Thresholds_Shift": 0.5942481210311785, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8475, "FPR": 0.0885, "ROC_Thresholds": 0.5942481210311785, "ROC_Thresholds_Shift": 0.593969781725883, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.85, "FPR": 0.0885, "ROC_Thresholds": 0.593969781725883, "ROC_Thresholds_Shift": 0.5927097680186098, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8525, "FPR": 0.089, "ROC_Thresholds": 0.5927097680186098, "ROC_Thresholds_Shift": 0.5930930182304958, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.85, "FPR": 0.089, "ROC_Thresholds": 0.5930930182304958, "ROC_Thresholds_Shift": 0.5922270182994016, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8525, "FPR": 0.0905, "ROC_Thresholds": 0.5922270182994016, "ROC_Thresholds_Shift": 0.5918178197437243, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8575, "FPR": 0.0905, "ROC_Thresholds": 0.5918178197437243, "ROC_Thresholds_Shift": 0.5868529533088074, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8575, "FPR": 0.096, "ROC_Thresholds": 0.5868529533088074, "ROC_Thresholds_Shift": 0.5867976942602885, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8625, "FPR": 0.096, "ROC_Thresholds": 0.5867976942602885, "ROC_Thresholds_Shift": 0.5853416956059405, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8625, "FPR": 0.099, "ROC_Thresholds": 0.5853416956059405, "ROC_Thresholds_Shift": 0.5853383690752172, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.865, "FPR": 0.099, "ROC_Thresholds": 0.5853383690752172, "ROC_Thresholds_Shift": 0.5818737434995638, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8675, "FPR": 0.1045, "ROC_Thresholds": 0.5818737434995638, "ROC_Thresholds_Shift": 0.5820154165102165, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.865, "FPR": 0.1045, "ROC_Thresholds": 0.5820154165102165, "ROC_Thresholds_Shift": 0.5807790532608943, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8675, "FPR": 0.1065, "ROC_Thresholds": 0.5807790532608943, "ROC_Thresholds_Shift": 0.5805850916002013, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.87, "FPR": 0.1065, "ROC_Thresholds": 0.5805850916002013, "ROC_Thresholds_Shift": 0.5795645406225058, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.87, "FPR": 0.1085, "ROC_Thresholds": 0.5795645406225058, "ROC_Thresholds_Shift": 0.5794752129444094, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8725, "FPR": 0.1085, "ROC_Thresholds": 0.5794752129444094, "ROC_Thresholds_Shift": 0.5792312281243427, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8725, "FPR": 0.1095, "ROC_Thresholds": 0.5792312281243427, "ROC_Thresholds_Shift": 0.5786908342914868, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.875, "FPR": 0.1095, "ROC_Thresholds": 0.5786908342914868, "ROC_Thresholds_Shift": 0.5738624387891716, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.875, "FPR": 0.118, "ROC_Thresholds": 0.5738624387891716, "ROC_Thresholds_Shift": 0.5726995408059514, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8825, "FPR": 0.118, "ROC_Thresholds": 0.5726995408059514, "ROC_Thresholds_Shift": 0.56895804159976, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.885, "FPR": 0.1245, "ROC_Thresholds": 0.56895804159976, "ROC_Thresholds_Shift": 0.5691845429323532, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8825, "FPR": 0.1245, "ROC_Thresholds": 0.5691845429323532, "ROC_Thresholds_Shift": 0.5679443875483061, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.885, "FPR": 0.1255, "ROC_Thresholds": 0.5679443875483061, "ROC_Thresholds_Shift": 0.5671423585973858, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.89, "FPR": 0.1255, "ROC_Thresholds": 0.5671423585973858, "ROC_Thresholds_Shift": 0.5670089313104723, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.89, "FPR": 0.126, "ROC_Thresholds": 0.5670089313104723, "ROC_Thresholds_Shift": 0.5667462210248113, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8925, "FPR": 0.126, "ROC_Thresholds": 0.5667462210248113, "ROC_Thresholds_Shift": 0.5651487793516139, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.8925, "FPR": 0.1275, "ROC_Thresholds": 0.5651487793516139, "ROC_Thresholds_Shift": 0.5646245905346906, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.895, "FPR": 0.1275, "ROC_Thresholds": 0.5646245905346906, "ROC_Thresholds_Shift": 0.5614918928607965, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.895, "FPR": 0.135, "ROC_Thresholds": 0.5614918928607965, "ROC_Thresholds_Shift": 0.5605886044283144, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9, "FPR": 0.135, "ROC_Thresholds": 0.5605886044283144, "ROC_Thresholds_Shift": 0.5593981841686221, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9, "FPR": 0.1385, "ROC_Thresholds": 0.5593981841686221, "ROC_Thresholds_Shift": 0.5590879385494016, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9075, "FPR": 0.1385, "ROC_Thresholds": 0.5590879385494016, "ROC_Thresholds_Shift": 0.5580705381670888, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9075, "FPR": 0.141, "ROC_Thresholds": 0.5580705381670888, "ROC_Thresholds_Shift": 0.5580326705027081, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.91, "FPR": 0.141, "ROC_Thresholds": 0.5580326705027081, "ROC_Thresholds_Shift": 0.5574182908247487, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.91, "FPR": 0.1415, "ROC_Thresholds": 0.5574182908247487, "ROC_Thresholds_Shift": 0.5567841624238794, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9125, "FPR": 0.1415, "ROC_Thresholds": 0.5567841624238794, "ROC_Thresholds_Shift": 0.5496896797929782, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.915, "FPR": 0.157, "ROC_Thresholds": 0.5496896797929782, "ROC_Thresholds_Shift": 0.5498295209708186, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9125, "FPR": 0.157, "ROC_Thresholds": 0.5498295209708186, "ROC_Thresholds_Shift": 0.5452492009962784, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9175, "FPR": 0.1675, "ROC_Thresholds": 0.5452492009962784, "ROC_Thresholds_Shift": 0.5454036076499886, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.915, "FPR": 0.1675, "ROC_Thresholds": 0.5454036076499886, "ROC_Thresholds_Shift": 0.5400783458782376, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9175, "FPR": 0.1745, "ROC_Thresholds": 0.5400783458782376, "ROC_Thresholds_Shift": 0.5400339113236888, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.92, "FPR": 0.1745, "ROC_Thresholds": 0.5400339113236888, "ROC_Thresholds_Shift": 0.539061936432343, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.92, "FPR": 0.176, "ROC_Thresholds": 0.539061936432343, "ROC_Thresholds_Shift": 0.5387569064540573, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9225, "FPR": 0.176, "ROC_Thresholds": 0.5387569064540573, "ROC_Thresholds_Shift": 0.5386982011531668, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9225, "FPR": 0.1765, "ROC_Thresholds": 0.5386982011531668, "ROC_Thresholds_Shift": 0.5381548066876466, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.925, "FPR": 0.1765, "ROC_Thresholds": 0.5381548066876466, "ROC_Thresholds_Shift": 0.5380655042728173, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.925, "FPR": 0.177, "ROC_Thresholds": 0.5380655042728173, "ROC_Thresholds_Shift": 0.5380376677494079, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9275, "FPR": 0.177, "ROC_Thresholds": 0.5380376677494079, "ROC_Thresholds_Shift": 0.5321095490208728, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.93, "FPR": 0.1905, "ROC_Thresholds": 0.5321095490208728, "ROC_Thresholds_Shift": 0.5324547900302204, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9275, "FPR": 0.1905, "ROC_Thresholds": 0.5324547900302204, "ROC_Thresholds_Shift": 0.5245846923599773, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.93, "FPR": 0.2045, "ROC_Thresholds": 0.5245846923599773, "ROC_Thresholds_Shift": 0.5242508628899861, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9325, "FPR": 0.2045, "ROC_Thresholds": 0.5242508628899861, "ROC_Thresholds_Shift": 0.5217518659299791, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9325, "FPR": 0.208, "ROC_Thresholds": 0.5217518659299791, "ROC_Thresholds_Shift": 0.5215164071975753, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.935, "FPR": 0.208, "ROC_Thresholds": 0.5215164071975753, "ROC_Thresholds_Shift": 0.5206470089848763, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.935, "FPR": 0.2105, "ROC_Thresholds": 0.5206470089848763, "ROC_Thresholds_Shift": 0.5204651233639821, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9375, "FPR": 0.2105, "ROC_Thresholds": 0.5204651233639821, "ROC_Thresholds_Shift": 0.5179436454314521, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.94, "FPR": 0.2155, "ROC_Thresholds": 0.5179436454314521, "ROC_Thresholds_Shift": 0.5184783308281173, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9375, "FPR": 0.2155, "ROC_Thresholds": 0.5184783308281173, "ROC_Thresholds_Shift": 0.5160828927907307, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.94, "FPR": 0.217, "ROC_Thresholds": 0.5160828927907307, "ROC_Thresholds_Shift": 0.5158291511972002, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9425, "FPR": 0.217, "ROC_Thresholds": 0.5158291511972002, "ROC_Thresholds_Shift": 0.5153258152028879, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9425, "FPR": 0.2195, "ROC_Thresholds": 0.5153258152028879, "ROC_Thresholds_Shift": 0.5151982751889475, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.945, "FPR": 0.2195, "ROC_Thresholds": 0.5151982751889475, "ROC_Thresholds_Shift": 0.5148566242485031, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.945, "FPR": 0.2205, "ROC_Thresholds": 0.5148566242485031, "ROC_Thresholds_Shift": 0.5148163946350337, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9475, "FPR": 0.2205, "ROC_Thresholds": 0.5148163946350337, "ROC_Thresholds_Shift": 0.5118004100623033, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9475, "FPR": 0.229, "ROC_Thresholds": 0.5118004100623033, "ROC_Thresholds_Shift": 0.5116846617647419, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.95, "FPR": 0.229, "ROC_Thresholds": 0.5116846617647419, "ROC_Thresholds_Shift": 0.5112285225316511, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.95, "FPR": 0.2305, "ROC_Thresholds": 0.5112285225316511, "ROC_Thresholds_Shift": 0.5110234906468447, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9525, "FPR": 0.2305, "ROC_Thresholds": 0.5110234906468447, "ROC_Thresholds_Shift": 0.5104453079546054, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9525, "FPR": 0.2315, "ROC_Thresholds": 0.5104453079546054, "ROC_Thresholds_Shift": 0.5102443715924547, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.955, "FPR": 0.2315, "ROC_Thresholds": 0.5102443715924547, "ROC_Thresholds_Shift": 0.509283169292309, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.955, "FPR": 0.2355, "ROC_Thresholds": 0.509283169292309, "ROC_Thresholds_Shift": 0.5090726819022988, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9575, "FPR": 0.2355, "ROC_Thresholds": 0.5090726819022988, "ROC_Thresholds_Shift": 0.5075145152390499, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.96, "FPR": 0.239, "ROC_Thresholds": 0.5075145152390499, "ROC_Thresholds_Shift": 0.5078857006224866, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9575, "FPR": 0.239, "ROC_Thresholds": 0.5078857006224866, "ROC_Thresholds_Shift": 0.5026589989058108, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.96, "FPR": 0.2485, "ROC_Thresholds": 0.5026589989058108, "ROC_Thresholds_Shift": 0.5025475056234558, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9625, "FPR": 0.2485, "ROC_Thresholds": 0.5025475056234558, "ROC_Thresholds_Shift": 0.4940631620323922, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9625, "FPR": 0.2685, "ROC_Thresholds": 0.4940631620323922, "ROC_Thresholds_Shift": 0.4939948215262284, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.965, "FPR": 0.2685, "ROC_Thresholds": 0.4939948215262284, "ROC_Thresholds_Shift": 0.4843177125986461, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.965, "FPR": 0.288, "ROC_Thresholds": 0.4843177125986461, "ROC_Thresholds_Shift": 0.4839903175231957, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9675, "FPR": 0.288, "ROC_Thresholds": 0.4839903175231957, "ROC_Thresholds_Shift": 0.48173179436794966, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9675, "FPR": 0.289, "ROC_Thresholds": 0.48173179436794966, "ROC_Thresholds_Shift": 0.4817155366880285, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.97, "FPR": 0.289, "ROC_Thresholds": 0.4817155366880285, "ROC_Thresholds_Shift": 0.4800148581083249, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.97, "FPR": 0.2925, "ROC_Thresholds": 0.4800148581083249, "ROC_Thresholds_Shift": 0.4798304486493304, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9725, "FPR": 0.2925, "ROC_Thresholds": 0.4798304486493304, "ROC_Thresholds_Shift": 0.47256782261978103, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9725, "FPR": 0.3145, "ROC_Thresholds": 0.47256782261978103, "ROC_Thresholds_Shift": 0.472508793112805, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.975, "FPR": 0.3145, "ROC_Thresholds": 0.472508793112805, "ROC_Thresholds_Shift": 0.46255337421845444, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.975, "FPR": 0.341, "ROC_Thresholds": 0.46255337421845444, "ROC_Thresholds_Shift": 0.46181448166935385, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9775, "FPR": 0.341, "ROC_Thresholds": 0.46181448166935385, "ROC_Thresholds_Shift": 0.45913231862215664, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.98, "FPR": 0.3475, "ROC_Thresholds": 0.45913231862215664, "ROC_Thresholds_Shift": 0.4592625677857994, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9775, "FPR": 0.3475, "ROC_Thresholds": 0.4592625677857994, "ROC_Thresholds_Shift": 0.45837293698110104, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.98, "FPR": 0.3515, "ROC_Thresholds": 0.45837293698110104, "ROC_Thresholds_Shift": 0.45833511402130234, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9825, "FPR": 0.3515, "ROC_Thresholds": 0.45833511402130234, "ROC_Thresholds_Shift": 0.45162750241174326, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9825, "FPR": 0.372, "ROC_Thresholds": 0.45162750241174326, "ROC_Thresholds_Shift": 0.4516083468744014, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.985, "FPR": 0.372, "ROC_Thresholds": 0.4516083468744014, "ROC_Thresholds_Shift": 0.42776997995816063, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.985, "FPR": 0.431, "ROC_Thresholds": 0.42776997995816063, "ROC_Thresholds_Shift": 0.42756608221252823, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9875, "FPR": 0.431, "ROC_Thresholds": 0.42756608221252823, "ROC_Thresholds_Shift": 0.41206667419240556, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.99, "FPR": 0.473, "ROC_Thresholds": 0.41206667419240556, "ROC_Thresholds_Shift": 0.41212060687927726, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9875, "FPR": 0.473, "ROC_Thresholds": 0.41212060687927726, "ROC_Thresholds_Shift": 0.4044890273038665, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.99, "FPR": 0.494, "ROC_Thresholds": 0.4044890273038665, "ROC_Thresholds_Shift": 0.4037671713037126, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9925, "FPR": 0.494, "ROC_Thresholds": 0.4037671713037126, "ROC_Thresholds_Shift": 0.40200665101799415, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9925, "FPR": 0.498, "ROC_Thresholds": 0.40200665101799415, "ROC_Thresholds_Shift": 0.4017989934752565, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.995, "FPR": 0.498, "ROC_Thresholds": 0.4017989934752565, "ROC_Thresholds_Shift": 0.3872781791698722, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.995, "FPR": 0.533, "ROC_Thresholds": 0.3872781791698722, "ROC_Thresholds_Shift": 0.38718706335263725, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9975, "FPR": 0.533, "ROC_Thresholds": 0.38718706335263725, "ROC_Thresholds_Shift": 0.35023792399866754, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 0.9975, "FPR": 0.624, "ROC_Thresholds": 0.35023792399866754, "ROC_Thresholds_Shift": 0.3502348074078934, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 1.0, "FPR": 0.624, "ROC_Thresholds": 0.3502348074078934, "ROC_Thresholds_Shift": 0.003567290710902671, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 1.0, "FPR": 0.998, "ROC_Thresholds": 0.003567290710902671, "ROC_Thresholds_Shift": 1e-06, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}, {"TPR": 1.0, "FPR": 1.0, "ROC_Thresholds": 1e-06, "ROC_Thresholds_Shift": 0.0, "one_lbl": 1, "fpr_lbl": "FPR", "tpr_lbl": "TPR"}], "data-7ed971ff4d3660ce4dcaa3bef23164d9": [{"Precision": 1.0, "Recall": 0.0, "F1 score": 0.0, "PR_Thresholds": 1.0, "PR_Thresholds_Shift": 0.999999, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0425, "F1 score": 0.0815347721822542, "PR_Thresholds": 0.999999, "PR_Thresholds_Shift": 0.9998584477541026, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.045, "F1 score": 0.0861244019138756, "PR_Thresholds": 0.9998584477541026, "PR_Thresholds_Shift": 0.9930918947140022, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0475, "F1 score": 0.09069212410501193, "PR_Thresholds": 0.9930918947140022, "PR_Thresholds_Shift": 0.9916899427151011, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.05, "F1 score": 0.09523809523809523, "PR_Thresholds": 0.9916899427151011, "PR_Thresholds_Shift": 0.9885514695575192, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0525, "F1 score": 0.0997624703087886, "PR_Thresholds": 0.9885514695575192, "PR_Thresholds_Shift": 0.9839275419141598, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.055, "F1 score": 0.1042654028436019, "PR_Thresholds": 0.9839275419141598, "PR_Thresholds_Shift": 0.9776428155555296, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0575, "F1 score": 0.10874704491725767, "PR_Thresholds": 0.9776428155555296, "PR_Thresholds_Shift": 0.9775800767560531, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.06, "F1 score": 0.11320754716981131, "PR_Thresholds": 0.9775800767560531, "PR_Thresholds_Shift": 0.9746015285273146, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0625, "F1 score": 0.11764705882352941, "PR_Thresholds": 0.9746015285273146, "PR_Thresholds_Shift": 0.97459551266073, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.065, "F1 score": 0.12206572769953053, "PR_Thresholds": 0.97459551266073, "PR_Thresholds_Shift": 0.9721417601540634, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0675, "F1 score": 0.12646370023419207, "PR_Thresholds": 0.9721417601540634, "PR_Thresholds_Shift": 0.9698122564110878, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.07, "F1 score": 0.13084112149532712, "PR_Thresholds": 0.9698122564110878, "PR_Thresholds_Shift": 0.9672054950674139, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0725, "F1 score": 0.1351981351981352, "PR_Thresholds": 0.9672054950674139, "PR_Thresholds_Shift": 0.9622031775135576, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.075, "F1 score": 0.13953488372093023, "PR_Thresholds": 0.9622031775135576, "PR_Thresholds_Shift": 0.9586301842893976, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0775, "F1 score": 0.14385150812064967, "PR_Thresholds": 0.9586301842893976, "PR_Thresholds_Shift": 0.9559343441437204, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.08, "F1 score": 0.14814814814814814, "PR_Thresholds": 0.9559343441437204, "PR_Thresholds_Shift": 0.9525039403917136, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0825, "F1 score": 0.15242494226327946, "PR_Thresholds": 0.9525039403917136, "PR_Thresholds_Shift": 0.9497339324496067, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.085, "F1 score": 0.1566820276497696, "PR_Thresholds": 0.9497339324496067, "PR_Thresholds_Shift": 0.9481300303875694, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0875, "F1 score": 0.16091954022988506, "PR_Thresholds": 0.9481300303875694, "PR_Thresholds_Shift": 0.9457598437658336, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.09, "F1 score": 0.16513761467889906, "PR_Thresholds": 0.9457598437658336, "PR_Thresholds_Shift": 0.9450622325144724, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0925, "F1 score": 0.16933638443935925, "PR_Thresholds": 0.9450622325144724, "PR_Thresholds_Shift": 0.944587671803588, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.095, "F1 score": 0.17351598173515984, "PR_Thresholds": 0.944587671803588, "PR_Thresholds_Shift": 0.9406645787340706, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.0975, "F1 score": 0.17767653758542143, "PR_Thresholds": 0.9406645787340706, "PR_Thresholds_Shift": 0.9396648565198554, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1, "F1 score": 0.18181818181818182, "PR_Thresholds": 0.9396648565198554, "PR_Thresholds_Shift": 0.9384431075866206, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1025, "F1 score": 0.18594104308390022, "PR_Thresholds": 0.9384431075866206, "PR_Thresholds_Shift": 0.9362811289251527, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.105, "F1 score": 0.19004524886877827, "PR_Thresholds": 0.9362811289251527, "PR_Thresholds_Shift": 0.9344824373885894, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1075, "F1 score": 0.19413092550790068, "PR_Thresholds": 0.9344824373885894, "PR_Thresholds_Shift": 0.9341180473602835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.11, "F1 score": 0.19819819819819817, "PR_Thresholds": 0.9341180473602835, "PR_Thresholds_Shift": 0.9319034204458974, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1125, "F1 score": 0.20224719101123595, "PR_Thresholds": 0.9319034204458974, "PR_Thresholds_Shift": 0.9318622677595507, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.115, "F1 score": 0.2062780269058296, "PR_Thresholds": 0.9318622677595507, "PR_Thresholds_Shift": 0.9305368109967974, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1175, "F1 score": 0.21029082774049218, "PR_Thresholds": 0.9305368109967974, "PR_Thresholds_Shift": 0.9301680842073551, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.12, "F1 score": 0.21428571428571425, "PR_Thresholds": 0.9301680842073551, "PR_Thresholds_Shift": 0.9272991180446511, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1225, "F1 score": 0.21826280623608016, "PR_Thresholds": 0.9272991180446511, "PR_Thresholds_Shift": 0.9257275519565248, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.125, "F1 score": 0.2222222222222222, "PR_Thresholds": 0.9257275519565248, "PR_Thresholds_Shift": 0.9223151370129681, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1275, "F1 score": 0.2261640798226164, "PR_Thresholds": 0.9223151370129681, "PR_Thresholds_Shift": 0.9196679024233471, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.13, "F1 score": 0.23008849557522126, "PR_Thresholds": 0.9196679024233471, "PR_Thresholds_Shift": 0.9194910858464257, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1325, "F1 score": 0.23399558498896247, "PR_Thresholds": 0.9194910858464257, "PR_Thresholds_Shift": 0.9181898922521072, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.135, "F1 score": 0.2378854625550661, "PR_Thresholds": 0.9181898922521072, "PR_Thresholds_Shift": 0.9155653340858569, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1375, "F1 score": 0.2417582417582418, "PR_Thresholds": 0.9155653340858569, "PR_Thresholds_Shift": 0.912780294680153, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.14, "F1 score": 0.24561403508771928, "PR_Thresholds": 0.912780294680153, "PR_Thresholds_Shift": 0.9111153687960238, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1425, "F1 score": 0.24945295404814, "PR_Thresholds": 0.9111153687960238, "PR_Thresholds_Shift": 0.9103643247956441, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.145, "F1 score": 0.25327510917030566, "PR_Thresholds": 0.9103643247956441, "PR_Thresholds_Shift": 0.9012648865322785, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1475, "F1 score": 0.2570806100217865, "PR_Thresholds": 0.9012648865322785, "PR_Thresholds_Shift": 0.9011171122563403, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.15, "F1 score": 0.2608695652173913, "PR_Thresholds": 0.9011171122563403, "PR_Thresholds_Shift": 0.9005162610186725, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1525, "F1 score": 0.26464208242950105, "PR_Thresholds": 0.9005162610186725, "PR_Thresholds_Shift": 0.9003873320405619, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.155, "F1 score": 0.2683982683982684, "PR_Thresholds": 0.9003873320405619, "PR_Thresholds_Shift": 0.8991844609252027, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1575, "F1 score": 0.27213822894168466, "PR_Thresholds": 0.8991844609252027, "PR_Thresholds_Shift": 0.8986018167040625, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.16, "F1 score": 0.2758620689655173, "PR_Thresholds": 0.8986018167040625, "PR_Thresholds_Shift": 0.8984461582395239, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.1625, "F1 score": 0.27956989247311825, "PR_Thresholds": 0.8984461582395239, "PR_Thresholds_Shift": 0.8984062595927886, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 1.0, "Recall": 0.165, "F1 score": 0.2832618025751073, "PR_Thresholds": 0.8984062595927886, "PR_Thresholds_Shift": 0.8975437129171107, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9850746268656716, "Recall": 0.165, "F1 score": 0.28265524625267663, "PR_Thresholds": 0.8975437129171107, "PR_Thresholds_Shift": 0.8956923274026454, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9852941176470589, "Recall": 0.1675, "F1 score": 0.28632478632478636, "PR_Thresholds": 0.8956923274026454, "PR_Thresholds_Shift": 0.894306819441933, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9855072463768116, "Recall": 0.17, "F1 score": 0.28997867803837957, "PR_Thresholds": 0.894306819441933, "PR_Thresholds_Shift": 0.8935318401552093, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9857142857142858, "Recall": 0.1725, "F1 score": 0.2936170212765958, "PR_Thresholds": 0.8935318401552093, "PR_Thresholds_Shift": 0.8929995134434694, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9859154929577465, "Recall": 0.175, "F1 score": 0.29723991507430997, "PR_Thresholds": 0.8929995134434694, "PR_Thresholds_Shift": 0.8895300637319219, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9861111111111112, "Recall": 0.1775, "F1 score": 0.3008474576271186, "PR_Thresholds": 0.8895300637319219, "PR_Thresholds_Shift": 0.8879834080876077, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9863013698630136, "Recall": 0.18, "F1 score": 0.3044397463002114, "PR_Thresholds": 0.8879834080876077, "PR_Thresholds_Shift": 0.8869827124011276, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9864864864864865, "Recall": 0.1825, "F1 score": 0.3080168776371308, "PR_Thresholds": 0.8869827124011276, "PR_Thresholds_Shift": 0.8868338911427727, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9866666666666667, "Recall": 0.185, "F1 score": 0.31157894736842107, "PR_Thresholds": 0.8868338911427727, "PR_Thresholds_Shift": 0.8850004151807719, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9868421052631579, "Recall": 0.1875, "F1 score": 0.315126050420168, "PR_Thresholds": 0.8850004151807719, "PR_Thresholds_Shift": 0.8847812648610415, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.987012987012987, "Recall": 0.19, "F1 score": 0.3186582809224318, "PR_Thresholds": 0.8847812648610415, "PR_Thresholds_Shift": 0.8837266574854995, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9871794871794872, "Recall": 0.1925, "F1 score": 0.3221757322175733, "PR_Thresholds": 0.8837266574854995, "PR_Thresholds_Shift": 0.8813177292989458, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9873417721518988, "Recall": 0.195, "F1 score": 0.325678496868476, "PR_Thresholds": 0.8813177292989458, "PR_Thresholds_Shift": 0.8798775397960965, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9875, "Recall": 0.1975, "F1 score": 0.32916666666666666, "PR_Thresholds": 0.8798775397960965, "PR_Thresholds_Shift": 0.8796572540012833, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9876543209876543, "Recall": 0.2, "F1 score": 0.33264033264033266, "PR_Thresholds": 0.8796572540012833, "PR_Thresholds_Shift": 0.8794718125659888, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9878048780487805, "Recall": 0.2025, "F1 score": 0.33609958506224064, "PR_Thresholds": 0.8794718125659888, "PR_Thresholds_Shift": 0.8775722279833504, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9879518072289156, "Recall": 0.205, "F1 score": 0.33954451345755693, "PR_Thresholds": 0.8775722279833504, "PR_Thresholds_Shift": 0.8766336798138205, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9880952380952381, "Recall": 0.2075, "F1 score": 0.3429752066115702, "PR_Thresholds": 0.8766336798138205, "PR_Thresholds_Shift": 0.8762149575446023, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9882352941176471, "Recall": 0.21, "F1 score": 0.3463917525773196, "PR_Thresholds": 0.8762149575446023, "PR_Thresholds_Shift": 0.8758020357819742, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9883720930232558, "Recall": 0.2125, "F1 score": 0.3497942386831276, "PR_Thresholds": 0.8758020357819742, "PR_Thresholds_Shift": 0.8746366269376157, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9885057471264368, "Recall": 0.215, "F1 score": 0.3531827515400411, "PR_Thresholds": 0.8746366269376157, "PR_Thresholds_Shift": 0.8707702808062564, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9886363636363636, "Recall": 0.2175, "F1 score": 0.35655737704918034, "PR_Thresholds": 0.8707702808062564, "PR_Thresholds_Shift": 0.8703956647408323, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9887640449438202, "Recall": 0.22, "F1 score": 0.35991820040899797, "PR_Thresholds": 0.8703956647408323, "PR_Thresholds_Shift": 0.8702819820205636, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9888888888888889, "Recall": 0.2225, "F1 score": 0.363265306122449, "PR_Thresholds": 0.8702819820205636, "PR_Thresholds_Shift": 0.8651607312449215, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.989010989010989, "Recall": 0.225, "F1 score": 0.3665987780040733, "PR_Thresholds": 0.8651607312449215, "PR_Thresholds_Shift": 0.863695797106108, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9891304347826086, "Recall": 0.2275, "F1 score": 0.3699186991869919, "PR_Thresholds": 0.863695797106108, "PR_Thresholds_Shift": 0.8632249800296478, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.989247311827957, "Recall": 0.23, "F1 score": 0.37322515212981744, "PR_Thresholds": 0.8632249800296478, "PR_Thresholds_Shift": 0.8627401699317495, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9893617021276596, "Recall": 0.2325, "F1 score": 0.3765182186234818, "PR_Thresholds": 0.8627401699317495, "PR_Thresholds_Shift": 0.8608223443625079, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9894736842105263, "Recall": 0.235, "F1 score": 0.3797979797979798, "PR_Thresholds": 0.8608223443625079, "PR_Thresholds_Shift": 0.8588579943781528, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9895833333333334, "Recall": 0.2375, "F1 score": 0.38306451612903225, "PR_Thresholds": 0.8588579943781528, "PR_Thresholds_Shift": 0.8577302828968623, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9896907216494846, "Recall": 0.24, "F1 score": 0.386317907444668, "PR_Thresholds": 0.8577302828968623, "PR_Thresholds_Shift": 0.8562712391871214, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9897959183673469, "Recall": 0.2425, "F1 score": 0.38955823293172687, "PR_Thresholds": 0.8562712391871214, "PR_Thresholds_Shift": 0.8547235751366467, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.98989898989899, "Recall": 0.245, "F1 score": 0.3927855711422846, "PR_Thresholds": 0.8547235751366467, "PR_Thresholds_Shift": 0.8491994420787495, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.99, "Recall": 0.2475, "F1 score": 0.39599999999999996, "PR_Thresholds": 0.8491994420787495, "PR_Thresholds_Shift": 0.8484985183159263, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9900990099009901, "Recall": 0.25, "F1 score": 0.3992015968063872, "PR_Thresholds": 0.8484985183159263, "PR_Thresholds_Shift": 0.8480132449173945, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9901960784313726, "Recall": 0.2525, "F1 score": 0.40239043824701204, "PR_Thresholds": 0.8480132449173945, "PR_Thresholds_Shift": 0.8464581460478837, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9902912621359223, "Recall": 0.255, "F1 score": 0.40556660039761433, "PR_Thresholds": 0.8464581460478837, "PR_Thresholds_Shift": 0.8447190345855659, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9903846153846154, "Recall": 0.2575, "F1 score": 0.4087301587301587, "PR_Thresholds": 0.8447190345855659, "PR_Thresholds_Shift": 0.8419343103870769, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9904761904761905, "Recall": 0.26, "F1 score": 0.4118811881188119, "PR_Thresholds": 0.8419343103870769, "PR_Thresholds_Shift": 0.8419290079308246, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9905660377358491, "Recall": 0.2625, "F1 score": 0.41501976284584985, "PR_Thresholds": 0.8419290079308246, "PR_Thresholds_Shift": 0.8407917763705826, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9906542056074766, "Recall": 0.265, "F1 score": 0.41814595660749515, "PR_Thresholds": 0.8407917763705826, "PR_Thresholds_Shift": 0.8404152322435414, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9814814814814815, "Recall": 0.265, "F1 score": 0.41732283464566927, "PR_Thresholds": 0.8404152322435414, "PR_Thresholds_Shift": 0.8399845407785556, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.981651376146789, "Recall": 0.2675, "F1 score": 0.4204322200392928, "PR_Thresholds": 0.8399845407785556, "PR_Thresholds_Shift": 0.8379008393337967, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9818181818181818, "Recall": 0.27, "F1 score": 0.4235294117647059, "PR_Thresholds": 0.8379008393337967, "PR_Thresholds_Shift": 0.8360377720327562, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9819819819819819, "Recall": 0.2725, "F1 score": 0.426614481409002, "PR_Thresholds": 0.8360377720327562, "PR_Thresholds_Shift": 0.8354894691046052, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9821428571428571, "Recall": 0.275, "F1 score": 0.4296875, "PR_Thresholds": 0.8354894691046052, "PR_Thresholds_Shift": 0.8343420753207138, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9823008849557522, "Recall": 0.2775, "F1 score": 0.4327485380116959, "PR_Thresholds": 0.8343420753207138, "PR_Thresholds_Shift": 0.8341955255766726, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9824561403508771, "Recall": 0.28, "F1 score": 0.4357976653696498, "PR_Thresholds": 0.8341955255766726, "PR_Thresholds_Shift": 0.8332658252095922, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9826086956521739, "Recall": 0.2825, "F1 score": 0.4388349514563107, "PR_Thresholds": 0.8332658252095922, "PR_Thresholds_Shift": 0.8329849649952815, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9827586206896551, "Recall": 0.285, "F1 score": 0.44186046511627897, "PR_Thresholds": 0.8329849649952815, "PR_Thresholds_Shift": 0.8327240482444658, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9829059829059829, "Recall": 0.2875, "F1 score": 0.44487427466150864, "PR_Thresholds": 0.8327240482444658, "PR_Thresholds_Shift": 0.8315056189584892, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9830508474576272, "Recall": 0.29, "F1 score": 0.44787644787644787, "PR_Thresholds": 0.8315056189584892, "PR_Thresholds_Shift": 0.8304263550034506, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9831932773109243, "Recall": 0.2925, "F1 score": 0.45086705202312133, "PR_Thresholds": 0.8304263550034506, "PR_Thresholds_Shift": 0.8264159786525522, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9833333333333333, "Recall": 0.295, "F1 score": 0.4538461538461538, "PR_Thresholds": 0.8264159786525522, "PR_Thresholds_Shift": 0.8259118269404662, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9834710743801653, "Recall": 0.2975, "F1 score": 0.45681381957773515, "PR_Thresholds": 0.8259118269404662, "PR_Thresholds_Shift": 0.8251755199064313, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9836065573770492, "Recall": 0.3, "F1 score": 0.45977011494252873, "PR_Thresholds": 0.8251755199064313, "PR_Thresholds_Shift": 0.8237957423232563, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.983739837398374, "Recall": 0.3025, "F1 score": 0.46271510516252395, "PR_Thresholds": 0.8237957423232563, "PR_Thresholds_Shift": 0.8234978399884345, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9838709677419355, "Recall": 0.305, "F1 score": 0.46564885496183206, "PR_Thresholds": 0.8234978399884345, "PR_Thresholds_Shift": 0.8227425524605556, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.984, "Recall": 0.3075, "F1 score": 0.4685714285714286, "PR_Thresholds": 0.8227425524605556, "PR_Thresholds_Shift": 0.8214154384988374, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9841269841269841, "Recall": 0.31, "F1 score": 0.47148288973384034, "PR_Thresholds": 0.8214154384988374, "PR_Thresholds_Shift": 0.8190221936965086, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.984251968503937, "Recall": 0.3125, "F1 score": 0.47438330170777987, "PR_Thresholds": 0.8190221936965086, "PR_Thresholds_Shift": 0.8176152877045986, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.984375, "Recall": 0.315, "F1 score": 0.47727272727272724, "PR_Thresholds": 0.8176152877045986, "PR_Thresholds_Shift": 0.8173305962105034, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9844961240310077, "Recall": 0.3175, "F1 score": 0.4801512287334594, "PR_Thresholds": 0.8173305962105034, "PR_Thresholds_Shift": 0.817251090197609, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9846153846153847, "Recall": 0.32, "F1 score": 0.48301886792452825, "PR_Thresholds": 0.817251090197609, "PR_Thresholds_Shift": 0.814209197083378, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9847328244274809, "Recall": 0.3225, "F1 score": 0.4858757062146893, "PR_Thresholds": 0.814209197083378, "PR_Thresholds_Shift": 0.8109800294238354, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9848484848484849, "Recall": 0.325, "F1 score": 0.4887218045112782, "PR_Thresholds": 0.8109800294238354, "PR_Thresholds_Shift": 0.8101202236666096, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9849624060150376, "Recall": 0.3275, "F1 score": 0.4915572232645404, "PR_Thresholds": 0.8101202236666096, "PR_Thresholds_Shift": 0.8096703940674866, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9850746268656716, "Recall": 0.33, "F1 score": 0.4943820224719101, "PR_Thresholds": 0.8096703940674866, "PR_Thresholds_Shift": 0.8092154843612009, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9851851851851852, "Recall": 0.3325, "F1 score": 0.497196261682243, "PR_Thresholds": 0.8092154843612009, "PR_Thresholds_Shift": 0.8084206308082986, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9852941176470589, "Recall": 0.335, "F1 score": 0.5000000000000001, "PR_Thresholds": 0.8084206308082986, "PR_Thresholds_Shift": 0.8060824404710438, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9854014598540146, "Recall": 0.3375, "F1 score": 0.5027932960893854, "PR_Thresholds": 0.8060824404710438, "PR_Thresholds_Shift": 0.8059310360536158, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9855072463768116, "Recall": 0.34, "F1 score": 0.5055762081784387, "PR_Thresholds": 0.8059310360536158, "PR_Thresholds_Shift": 0.8057520398093148, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9856115107913669, "Recall": 0.3425, "F1 score": 0.5083487940630798, "PR_Thresholds": 0.8057520398093148, "PR_Thresholds_Shift": 0.8055542906183162, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9857142857142858, "Recall": 0.345, "F1 score": 0.5111111111111111, "PR_Thresholds": 0.8055542906183162, "PR_Thresholds_Shift": 0.8049065609385238, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9858156028368794, "Recall": 0.3475, "F1 score": 0.5138632162661737, "PR_Thresholds": 0.8049065609385238, "PR_Thresholds_Shift": 0.8041109034072045, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9859154929577465, "Recall": 0.35, "F1 score": 0.5166051660516604, "PR_Thresholds": 0.8041109034072045, "PR_Thresholds_Shift": 0.8039425597495025, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.986013986013986, "Recall": 0.3525, "F1 score": 0.5193370165745855, "PR_Thresholds": 0.8039425597495025, "PR_Thresholds_Shift": 0.8037163310347121, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9861111111111112, "Recall": 0.355, "F1 score": 0.5220588235294117, "PR_Thresholds": 0.8037163310347121, "PR_Thresholds_Shift": 0.801706816653373, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9862068965517241, "Recall": 0.3575, "F1 score": 0.5247706422018349, "PR_Thresholds": 0.801706816653373, "PR_Thresholds_Shift": 0.8016518544873689, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9863013698630136, "Recall": 0.36, "F1 score": 0.5274725274725275, "PR_Thresholds": 0.8016518544873689, "PR_Thresholds_Shift": 0.7981610891423399, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9666666666666667, "Recall": 0.3625, "F1 score": 0.5272727272727272, "PR_Thresholds": 0.7981610891423399, "PR_Thresholds_Shift": 0.800075367907344, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9731543624161074, "Recall": 0.3625, "F1 score": 0.5282331511839709, "PR_Thresholds": 0.800075367907344, "PR_Thresholds_Shift": 0.8016446440415499, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9863945578231292, "Recall": 0.3625, "F1 score": 0.5301645338208409, "PR_Thresholds": 0.8016446440415499, "PR_Thresholds_Shift": 0.8007499409858011, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9797297297297297, "Recall": 0.3625, "F1 score": 0.5291970802919709, "PR_Thresholds": 0.8007499409858011, "PR_Thresholds_Shift": 0.797232126617696, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9668874172185431, "Recall": 0.365, "F1 score": 0.52994555353902, "PR_Thresholds": 0.797232126617696, "PR_Thresholds_Shift": 0.7970281522230914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9671052631578947, "Recall": 0.3675, "F1 score": 0.532608695652174, "PR_Thresholds": 0.7970281522230914, "PR_Thresholds_Shift": 0.7964902648267155, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9673202614379085, "Recall": 0.37, "F1 score": 0.5352622061482821, "PR_Thresholds": 0.7964902648267155, "PR_Thresholds_Shift": 0.7960875158376267, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9675324675324676, "Recall": 0.3725, "F1 score": 0.5379061371841155, "PR_Thresholds": 0.7960875158376267, "PR_Thresholds_Shift": 0.7956163967743484, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.967741935483871, "Recall": 0.375, "F1 score": 0.5405405405405406, "PR_Thresholds": 0.7956163967743484, "PR_Thresholds_Shift": 0.7951654009427056, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.967948717948718, "Recall": 0.3775, "F1 score": 0.5431654676258992, "PR_Thresholds": 0.7951654009427056, "PR_Thresholds_Shift": 0.794585947447579, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9681528662420382, "Recall": 0.38, "F1 score": 0.5457809694793536, "PR_Thresholds": 0.794585947447579, "PR_Thresholds_Shift": 0.7926486027256063, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9622641509433962, "Recall": 0.3825, "F1 score": 0.5474060822898033, "PR_Thresholds": 0.7926486027256063, "PR_Thresholds_Shift": 0.792974422080206, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9683544303797469, "Recall": 0.3825, "F1 score": 0.5483870967741936, "PR_Thresholds": 0.792974422080206, "PR_Thresholds_Shift": 0.7918444163753201, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9625, "Recall": 0.385, "F1 score": 0.5499999999999999, "PR_Thresholds": 0.7918444163753201, "PR_Thresholds_Shift": 0.7905654502513735, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9627329192546584, "Recall": 0.3875, "F1 score": 0.5525846702317291, "PR_Thresholds": 0.7905654502513735, "PR_Thresholds_Shift": 0.7896627810062686, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9629629629629629, "Recall": 0.39, "F1 score": 0.5551601423487544, "PR_Thresholds": 0.7896627810062686, "PR_Thresholds_Shift": 0.7889793587103667, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9631901840490797, "Recall": 0.3925, "F1 score": 0.5577264653641208, "PR_Thresholds": 0.7889793587103667, "PR_Thresholds_Shift": 0.7885316959904247, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9634146341463414, "Recall": 0.395, "F1 score": 0.5602836879432624, "PR_Thresholds": 0.7885316959904247, "PR_Thresholds_Shift": 0.7883870581354819, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9575757575757575, "Recall": 0.395, "F1 score": 0.55929203539823, "PR_Thresholds": 0.7883870581354819, "PR_Thresholds_Shift": 0.7881296645021354, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9578313253012049, "Recall": 0.3975, "F1 score": 0.5618374558303887, "PR_Thresholds": 0.7881296645021354, "PR_Thresholds_Shift": 0.7870874894411527, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9580838323353293, "Recall": 0.4, "F1 score": 0.5643738977072311, "PR_Thresholds": 0.7870874894411527, "PR_Thresholds_Shift": 0.7866520818094582, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9583333333333334, "Recall": 0.4025, "F1 score": 0.5669014084507042, "PR_Thresholds": 0.7866520818094582, "PR_Thresholds_Shift": 0.7864545326333839, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9585798816568047, "Recall": 0.405, "F1 score": 0.5694200351493849, "PR_Thresholds": 0.7864545326333839, "PR_Thresholds_Shift": 0.7864084528682759, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9588235294117647, "Recall": 0.4075, "F1 score": 0.5719298245614035, "PR_Thresholds": 0.7864084528682759, "PR_Thresholds_Shift": 0.7846434779940497, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9590643274853801, "Recall": 0.41, "F1 score": 0.574430823117338, "PR_Thresholds": 0.7846434779940497, "PR_Thresholds_Shift": 0.7838414836239944, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9593023255813954, "Recall": 0.4125, "F1 score": 0.576923076923077, "PR_Thresholds": 0.7838414836239944, "PR_Thresholds_Shift": 0.7835353751565594, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9595375722543352, "Recall": 0.415, "F1 score": 0.5794066317626527, "PR_Thresholds": 0.7835353751565594, "PR_Thresholds_Shift": 0.7834778083393812, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9597701149425287, "Recall": 0.4175, "F1 score": 0.5818815331010453, "PR_Thresholds": 0.7834778083393812, "PR_Thresholds_Shift": 0.7823199507780509, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.96, "Recall": 0.42, "F1 score": 0.5843478260869565, "PR_Thresholds": 0.7823199507780509, "PR_Thresholds_Shift": 0.7814756747170207, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9545454545454546, "Recall": 0.42, "F1 score": 0.5833333333333334, "PR_Thresholds": 0.7814756747170207, "PR_Thresholds_Shift": 0.7806233868522005, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9548022598870056, "Recall": 0.4225, "F1 score": 0.58578856152513, "PR_Thresholds": 0.7806233868522005, "PR_Thresholds_Shift": 0.7802145202235734, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9550561797752809, "Recall": 0.425, "F1 score": 0.5882352941176471, "PR_Thresholds": 0.7802145202235734, "PR_Thresholds_Shift": 0.7795880445989972, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9553072625698324, "Recall": 0.4275, "F1 score": 0.5906735751295337, "PR_Thresholds": 0.7795880445989972, "PR_Thresholds_Shift": 0.779536409948901, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9555555555555556, "Recall": 0.43, "F1 score": 0.593103448275862, "PR_Thresholds": 0.779536409948901, "PR_Thresholds_Shift": 0.7792905736697642, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9558011049723757, "Recall": 0.4325, "F1 score": 0.5955249569707401, "PR_Thresholds": 0.7792905736697642, "PR_Thresholds_Shift": 0.7788166048186522, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9560439560439561, "Recall": 0.435, "F1 score": 0.5979381443298969, "PR_Thresholds": 0.7788166048186522, "PR_Thresholds_Shift": 0.7777404202183904, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9562841530054644, "Recall": 0.4375, "F1 score": 0.6003430531732419, "PR_Thresholds": 0.7777404202183904, "PR_Thresholds_Shift": 0.777726132675854, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9565217391304348, "Recall": 0.44, "F1 score": 0.6027397260273973, "PR_Thresholds": 0.777726132675854, "PR_Thresholds_Shift": 0.7768853837287147, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9567567567567568, "Recall": 0.4425, "F1 score": 0.6051282051282052, "PR_Thresholds": 0.7768853837287147, "PR_Thresholds_Shift": 0.776394039483127, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.956989247311828, "Recall": 0.445, "F1 score": 0.6075085324232082, "PR_Thresholds": 0.776394039483127, "PR_Thresholds_Shift": 0.7751133421753299, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9572192513368984, "Recall": 0.4475, "F1 score": 0.6098807495741057, "PR_Thresholds": 0.7751133421753299, "PR_Thresholds_Shift": 0.7739417197341629, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9574468085106383, "Recall": 0.45, "F1 score": 0.6122448979591837, "PR_Thresholds": 0.7739417197341629, "PR_Thresholds_Shift": 0.7729198427800242, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9576719576719577, "Recall": 0.4525, "F1 score": 0.6146010186757216, "PR_Thresholds": 0.7729198427800242, "PR_Thresholds_Shift": 0.7724591841518231, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9578947368421052, "Recall": 0.455, "F1 score": 0.6169491525423729, "PR_Thresholds": 0.7724591841518231, "PR_Thresholds_Shift": 0.7717889215571653, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9581151832460733, "Recall": 0.4575, "F1 score": 0.6192893401015228, "PR_Thresholds": 0.7717889215571653, "PR_Thresholds_Shift": 0.7695781483090884, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9583333333333334, "Recall": 0.46, "F1 score": 0.6216216216216216, "PR_Thresholds": 0.7695781483090884, "PR_Thresholds_Shift": 0.7695690368851692, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9585492227979274, "Recall": 0.4625, "F1 score": 0.6239460370994941, "PR_Thresholds": 0.7695690368851692, "PR_Thresholds_Shift": 0.7683811202961844, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9587628865979382, "Recall": 0.465, "F1 score": 0.6262626262626263, "PR_Thresholds": 0.7683811202961844, "PR_Thresholds_Shift": 0.7682336937120187, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.958974358974359, "Recall": 0.4675, "F1 score": 0.6285714285714287, "PR_Thresholds": 0.7682336937120187, "PR_Thresholds_Shift": 0.7680297045268509, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9591836734693877, "Recall": 0.47, "F1 score": 0.6308724832214765, "PR_Thresholds": 0.7680297045268509, "PR_Thresholds_Shift": 0.7678698657380977, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9593908629441624, "Recall": 0.4725, "F1 score": 0.6331658291457286, "PR_Thresholds": 0.7678698657380977, "PR_Thresholds_Shift": 0.767593236185277, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9595959595959596, "Recall": 0.475, "F1 score": 0.6354515050167224, "PR_Thresholds": 0.767593236185277, "PR_Thresholds_Shift": 0.765949340934392, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9597989949748744, "Recall": 0.4775, "F1 score": 0.6377295492487479, "PR_Thresholds": 0.765949340934392, "PR_Thresholds_Shift": 0.765649507728034, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.96, "Recall": 0.48, "F1 score": 0.64, "PR_Thresholds": 0.765649507728034, "PR_Thresholds_Shift": 0.7647732319968701, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9552238805970149, "Recall": 0.48, "F1 score": 0.6389351081530781, "PR_Thresholds": 0.7647732319968701, "PR_Thresholds_Shift": 0.7641416008305106, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9554455445544554, "Recall": 0.4825, "F1 score": 0.6411960132890366, "PR_Thresholds": 0.7641416008305106, "PR_Thresholds_Shift": 0.7639173348589483, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9556650246305419, "Recall": 0.485, "F1 score": 0.6434494195688225, "PR_Thresholds": 0.7639173348589483, "PR_Thresholds_Shift": 0.7637375514135747, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9558823529411765, "Recall": 0.4875, "F1 score": 0.6456953642384107, "PR_Thresholds": 0.7637375514135747, "PR_Thresholds_Shift": 0.7625805786163945, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9514563106796117, "Recall": 0.49, "F1 score": 0.6468646864686469, "PR_Thresholds": 0.7625805786163945, "PR_Thresholds_Shift": 0.7636951539355732, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9560975609756097, "Recall": 0.49, "F1 score": 0.6479338842975206, "PR_Thresholds": 0.7636951539355732, "PR_Thresholds_Shift": 0.7611464640875377, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9516908212560387, "Recall": 0.4925, "F1 score": 0.6490939044481054, "PR_Thresholds": 0.7611464640875377, "PR_Thresholds_Shift": 0.7602797609179801, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9471153846153846, "Recall": 0.4925, "F1 score": 0.6480263157894737, "PR_Thresholds": 0.7602797609179801, "PR_Thresholds_Shift": 0.7600291354009411, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9473684210526315, "Recall": 0.495, "F1 score": 0.6502463054187192, "PR_Thresholds": 0.7600291354009411, "PR_Thresholds_Shift": 0.7598313974705659, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9428571428571428, "Recall": 0.495, "F1 score": 0.6491803278688525, "PR_Thresholds": 0.7598313974705659, "PR_Thresholds_Shift": 0.7594057911742632, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.943127962085308, "Recall": 0.4975, "F1 score": 0.6513911620294599, "PR_Thresholds": 0.7594057911742632, "PR_Thresholds_Shift": 0.759260377616793, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9433962264150944, "Recall": 0.5, "F1 score": 0.6535947712418301, "PR_Thresholds": 0.759260377616793, "PR_Thresholds_Shift": 0.75860636017778, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9436619718309859, "Recall": 0.5025, "F1 score": 0.6557911908646001, "PR_Thresholds": 0.75860636017778, "PR_Thresholds_Shift": 0.7585298762505439, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9439252336448598, "Recall": 0.505, "F1 score": 0.6579804560260586, "PR_Thresholds": 0.7585298762505439, "PR_Thresholds_Shift": 0.758108836423651, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9441860465116279, "Recall": 0.5075, "F1 score": 0.6601626016260161, "PR_Thresholds": 0.758108836423651, "PR_Thresholds_Shift": 0.7577398786523384, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9398148148148148, "Recall": 0.5075, "F1 score": 0.6590909090909091, "PR_Thresholds": 0.7577398786523384, "PR_Thresholds_Shift": 0.7576975604907115, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9400921658986175, "Recall": 0.51, "F1 score": 0.6612641815235009, "PR_Thresholds": 0.7576975604907115, "PR_Thresholds_Shift": 0.7563209217880354, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9403669724770642, "Recall": 0.5125, "F1 score": 0.6634304207119741, "PR_Thresholds": 0.7563209217880354, "PR_Thresholds_Shift": 0.7557509598479946, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9406392694063926, "Recall": 0.515, "F1 score": 0.6655896607431341, "PR_Thresholds": 0.7557509598479946, "PR_Thresholds_Shift": 0.7557081475225098, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9363636363636364, "Recall": 0.515, "F1 score": 0.6645161290322581, "PR_Thresholds": 0.7557081475225098, "PR_Thresholds_Shift": 0.7549930877332157, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9366515837104072, "Recall": 0.5175, "F1 score": 0.6666666666666667, "PR_Thresholds": 0.7549930877332157, "PR_Thresholds_Shift": 0.7535176206665196, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9324324324324325, "Recall": 0.5175, "F1 score": 0.6655948553054661, "PR_Thresholds": 0.7535176206665196, "PR_Thresholds_Shift": 0.7533076279221518, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9327354260089686, "Recall": 0.52, "F1 score": 0.6677367576243981, "PR_Thresholds": 0.7533076279221518, "PR_Thresholds_Shift": 0.7527959408818659, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9288888888888889, "Recall": 0.5225, "F1 score": 0.6688, "PR_Thresholds": 0.7527959408818659, "PR_Thresholds_Shift": 0.752908798698894, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9330357142857143, "Recall": 0.5225, "F1 score": 0.6698717948717948, "PR_Thresholds": 0.752908798698894, "PR_Thresholds_Shift": 0.748649162068683, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9292035398230089, "Recall": 0.525, "F1 score": 0.670926517571885, "PR_Thresholds": 0.748649162068683, "PR_Thresholds_Shift": 0.7478058641173247, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9251101321585903, "Recall": 0.525, "F1 score": 0.6698564593301436, "PR_Thresholds": 0.7478058641173247, "PR_Thresholds_Shift": 0.7477039523985521, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9254385964912281, "Recall": 0.5275, "F1 score": 0.6719745222929936, "PR_Thresholds": 0.7477039523985521, "PR_Thresholds_Shift": 0.7475044090323137, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.925764192139738, "Recall": 0.53, "F1 score": 0.6740858505564388, "PR_Thresholds": 0.7475044090323137, "PR_Thresholds_Shift": 0.7468859295658611, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9260869565217391, "Recall": 0.5325, "F1 score": 0.6761904761904761, "PR_Thresholds": 0.7468859295658611, "PR_Thresholds_Shift": 0.7457330147069036, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9264069264069265, "Recall": 0.535, "F1 score": 0.6782884310618067, "PR_Thresholds": 0.7457330147069036, "PR_Thresholds_Shift": 0.7456585328964799, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9267241379310345, "Recall": 0.5375, "F1 score": 0.680379746835443, "PR_Thresholds": 0.7456585328964799, "PR_Thresholds_Shift": 0.7452100601907172, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9227467811158798, "Recall": 0.5375, "F1 score": 0.679304897314376, "PR_Thresholds": 0.7452100601907172, "PR_Thresholds_Shift": 0.7433995235786155, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9188034188034188, "Recall": 0.5375, "F1 score": 0.6782334384858044, "PR_Thresholds": 0.7433995235786155, "PR_Thresholds_Shift": 0.743097932220889, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9191489361702128, "Recall": 0.54, "F1 score": 0.6803149606299213, "PR_Thresholds": 0.743097932220889, "PR_Thresholds_Shift": 0.7429193936257499, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9194915254237288, "Recall": 0.5425, "F1 score": 0.6823899371069182, "PR_Thresholds": 0.7429193936257499, "PR_Thresholds_Shift": 0.7427873954007956, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9156118143459916, "Recall": 0.5425, "F1 score": 0.6813186813186812, "PR_Thresholds": 0.7427873954007956, "PR_Thresholds_Shift": 0.742436319569479, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9117647058823529, "Recall": 0.5425, "F1 score": 0.6802507836990597, "PR_Thresholds": 0.742436319569479, "PR_Thresholds_Shift": 0.7414979730510156, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9079497907949791, "Recall": 0.5425, "F1 score": 0.679186228482003, "PR_Thresholds": 0.7414979730510156, "PR_Thresholds_Shift": 0.7409529305177958, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9008264462809917, "Recall": 0.545, "F1 score": 0.6791277258566979, "PR_Thresholds": 0.7409529305177958, "PR_Thresholds_Shift": 0.7413984474516907, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9083333333333333, "Recall": 0.545, "F1 score": 0.68125, "PR_Thresholds": 0.7413984474516907, "PR_Thresholds_Shift": 0.7411306477720923, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9045643153526971, "Recall": 0.545, "F1 score": 0.6801872074882995, "PR_Thresholds": 0.7411306477720923, "PR_Thresholds_Shift": 0.7395239210230505, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9012345679012346, "Recall": 0.5475, "F1 score": 0.6811819595645413, "PR_Thresholds": 0.7395239210230505, "PR_Thresholds_Shift": 0.7394327202597205, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.9016393442622951, "Recall": 0.55, "F1 score": 0.6832298136645962, "PR_Thresholds": 0.7394327202597205, "PR_Thresholds_Shift": 0.7391394785183707, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8979591836734694, "Recall": 0.55, "F1 score": 0.682170542635659, "PR_Thresholds": 0.7391394785183707, "PR_Thresholds_Shift": 0.7383402385203184, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8983739837398373, "Recall": 0.5525, "F1 score": 0.6842105263157895, "PR_Thresholds": 0.7383402385203184, "PR_Thresholds_Shift": 0.7372380851103719, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8987854251012146, "Recall": 0.555, "F1 score": 0.6862442040185472, "PR_Thresholds": 0.7372380851103719, "PR_Thresholds_Shift": 0.736778987026994, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8951612903225806, "Recall": 0.555, "F1 score": 0.6851851851851852, "PR_Thresholds": 0.736778987026994, "PR_Thresholds_Shift": 0.7361732814259369, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8955823293172691, "Recall": 0.5575, "F1 score": 0.687211093990755, "PR_Thresholds": 0.7361732814259369, "PR_Thresholds_Shift": 0.735816240944232, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.896, "Recall": 0.56, "F1 score": 0.6892307692307694, "PR_Thresholds": 0.735816240944232, "PR_Thresholds_Shift": 0.7351397262499481, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8924302788844621, "Recall": 0.56, "F1 score": 0.6881720430107527, "PR_Thresholds": 0.7351397262499481, "PR_Thresholds_Shift": 0.734697012543854, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8928571428571429, "Recall": 0.5625, "F1 score": 0.6901840490797547, "PR_Thresholds": 0.734697012543854, "PR_Thresholds_Shift": 0.7340211507693338, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8932806324110671, "Recall": 0.565, "F1 score": 0.6921898928024502, "PR_Thresholds": 0.7340211507693338, "PR_Thresholds_Shift": 0.7336915040860486, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8937007874015748, "Recall": 0.5675, "F1 score": 0.6941896024464831, "PR_Thresholds": 0.7336915040860486, "PR_Thresholds_Shift": 0.7328831779601288, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8941176470588236, "Recall": 0.57, "F1 score": 0.6961832061068701, "PR_Thresholds": 0.7328831779601288, "PR_Thresholds_Shift": 0.7325772906543201, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.89453125, "Recall": 0.5725, "F1 score": 0.698170731707317, "PR_Thresholds": 0.7325772906543201, "PR_Thresholds_Shift": 0.7321904447255759, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8949416342412452, "Recall": 0.575, "F1 score": 0.7001522070015219, "PR_Thresholds": 0.7321904447255759, "PR_Thresholds_Shift": 0.7321612322573141, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8953488372093024, "Recall": 0.5775, "F1 score": 0.7021276595744681, "PR_Thresholds": 0.7321612322573141, "PR_Thresholds_Shift": 0.7314270667071776, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8918918918918919, "Recall": 0.5775, "F1 score": 0.701062215477997, "PR_Thresholds": 0.7314270667071776, "PR_Thresholds_Shift": 0.7314180249802879, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8923076923076924, "Recall": 0.58, "F1 score": 0.703030303030303, "PR_Thresholds": 0.7314180249802879, "PR_Thresholds_Shift": 0.7307576416765187, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.89272030651341, "Recall": 0.5825, "F1 score": 0.7049924357034796, "PR_Thresholds": 0.7307576416765187, "PR_Thresholds_Shift": 0.7290962530243931, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8931297709923665, "Recall": 0.585, "F1 score": 0.7069486404833837, "PR_Thresholds": 0.7290962530243931, "PR_Thresholds_Shift": 0.7290807161653076, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8935361216730038, "Recall": 0.5875, "F1 score": 0.7088989441930619, "PR_Thresholds": 0.7290807161653076, "PR_Thresholds_Shift": 0.7278160778971725, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8939393939393939, "Recall": 0.59, "F1 score": 0.7108433734939759, "PR_Thresholds": 0.7278160778971725, "PR_Thresholds_Shift": 0.7264255479448343, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8943396226415095, "Recall": 0.5925, "F1 score": 0.7127819548872181, "PR_Thresholds": 0.7264255479448343, "PR_Thresholds_Shift": 0.7260012354862247, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8947368421052632, "Recall": 0.595, "F1 score": 0.7147147147147148, "PR_Thresholds": 0.7260012354862247, "PR_Thresholds_Shift": 0.7252440038533894, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8913857677902621, "Recall": 0.595, "F1 score": 0.7136431784107946, "PR_Thresholds": 0.7252440038533894, "PR_Thresholds_Shift": 0.7242254171448967, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8917910447761194, "Recall": 0.5975, "F1 score": 0.7155688622754491, "PR_Thresholds": 0.7242254171448967, "PR_Thresholds_Shift": 0.7235827011795429, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8884758364312267, "Recall": 0.5975, "F1 score": 0.7144992526158445, "PR_Thresholds": 0.7235827011795429, "PR_Thresholds_Shift": 0.7234127884430004, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8888888888888888, "Recall": 0.6, "F1 score": 0.7164179104477612, "PR_Thresholds": 0.7234127884430004, "PR_Thresholds_Shift": 0.7229533507033076, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8856088560885609, "Recall": 0.6, "F1 score": 0.7153502235469449, "PR_Thresholds": 0.7229533507033076, "PR_Thresholds_Shift": 0.7227198516446763, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8860294117647058, "Recall": 0.6025, "F1 score": 0.7172619047619048, "PR_Thresholds": 0.7227198516446763, "PR_Thresholds_Shift": 0.7226010761713295, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8827838827838828, "Recall": 0.6025, "F1 score": 0.7161961367013373, "PR_Thresholds": 0.7226010761713295, "PR_Thresholds_Shift": 0.721844346334458, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8832116788321168, "Recall": 0.605, "F1 score": 0.7181008902077152, "PR_Thresholds": 0.721844346334458, "PR_Thresholds_Shift": 0.7217413090411005, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8836363636363637, "Recall": 0.6075, "F1 score": 0.7200000000000001, "PR_Thresholds": 0.7217413090411005, "PR_Thresholds_Shift": 0.72115442272089, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8840579710144928, "Recall": 0.61, "F1 score": 0.7218934911242603, "PR_Thresholds": 0.72115442272089, "PR_Thresholds_Shift": 0.7208371462314291, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8808664259927798, "Recall": 0.61, "F1 score": 0.7208271787296897, "PR_Thresholds": 0.7208371462314291, "PR_Thresholds_Shift": 0.7206310519728859, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8812949640287769, "Recall": 0.6125, "F1 score": 0.7227138643067846, "PR_Thresholds": 0.7206310519728859, "PR_Thresholds_Shift": 0.7174682819430225, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8785714285714286, "Recall": 0.615, "F1 score": 0.7235294117647058, "PR_Thresholds": 0.7174682819430225, "PR_Thresholds_Shift": 0.7201914769851084, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8817204301075269, "Recall": 0.615, "F1 score": 0.7245949926362297, "PR_Thresholds": 0.7201914769851084, "PR_Thresholds_Shift": 0.7173922145500511, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8754448398576512, "Recall": 0.615, "F1 score": 0.722466960352423, "PR_Thresholds": 0.7173922145500511, "PR_Thresholds_Shift": 0.7173218670880315, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.875886524822695, "Recall": 0.6175, "F1 score": 0.7243401759530791, "PR_Thresholds": 0.7173218670880315, "PR_Thresholds_Shift": 0.7171817751567552, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.872791519434629, "Recall": 0.6175, "F1 score": 0.7232796486090777, "PR_Thresholds": 0.7171817751567552, "PR_Thresholds_Shift": 0.7160008798354001, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8697183098591549, "Recall": 0.6175, "F1 score": 0.7222222222222222, "PR_Thresholds": 0.7160008798354001, "PR_Thresholds_Shift": 0.7157451089041933, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8701754385964913, "Recall": 0.62, "F1 score": 0.7240875912408758, "PR_Thresholds": 0.7157451089041933, "PR_Thresholds_Shift": 0.7154993742353803, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8706293706293706, "Recall": 0.6225, "F1 score": 0.7259475218658893, "PR_Thresholds": 0.7154993742353803, "PR_Thresholds_Shift": 0.7149355038355669, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8710801393728222, "Recall": 0.625, "F1 score": 0.7278020378457059, "PR_Thresholds": 0.7149355038355669, "PR_Thresholds_Shift": 0.7145993782350618, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8680555555555556, "Recall": 0.625, "F1 score": 0.7267441860465116, "PR_Thresholds": 0.7145993782350618, "PR_Thresholds_Shift": 0.714423304689756, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8685121107266436, "Recall": 0.6275, "F1 score": 0.7285921625544267, "PR_Thresholds": 0.714423304689756, "PR_Thresholds_Shift": 0.7128642550912854, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8655172413793103, "Recall": 0.6275, "F1 score": 0.7275362318840578, "PR_Thresholds": 0.7128642550912854, "PR_Thresholds_Shift": 0.7122904331898308, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.865979381443299, "Recall": 0.63, "F1 score": 0.7293777134587555, "PR_Thresholds": 0.7122904331898308, "PR_Thresholds_Shift": 0.7115906395046118, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8664383561643836, "Recall": 0.6325, "F1 score": 0.7312138728323699, "PR_Thresholds": 0.7115906395046118, "PR_Thresholds_Shift": 0.7106273454109289, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8668941979522184, "Recall": 0.635, "F1 score": 0.733044733044733, "PR_Thresholds": 0.7106273454109289, "PR_Thresholds_Shift": 0.7093865738775194, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8639455782312925, "Recall": 0.635, "F1 score": 0.7319884726224782, "PR_Thresholds": 0.7093865738775194, "PR_Thresholds_Shift": 0.7093052228561193, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.864406779661017, "Recall": 0.6375, "F1 score": 0.7338129496402878, "PR_Thresholds": 0.7093052228561193, "PR_Thresholds_Shift": 0.7062386388168971, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8561872909698997, "Recall": 0.64, "F1 score": 0.7324749642346209, "PR_Thresholds": 0.7062386388168971, "PR_Thresholds_Shift": 0.7064581810870554, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8590604026845637, "Recall": 0.64, "F1 score": 0.7335243553008596, "PR_Thresholds": 0.7064581810870554, "PR_Thresholds_Shift": 0.7091963679616993, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8648648648648649, "Recall": 0.64, "F1 score": 0.7356321839080459, "PR_Thresholds": 0.7091963679616993, "PR_Thresholds_Shift": 0.7070800528041495, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8619528619528619, "Recall": 0.64, "F1 score": 0.7345767575322811, "PR_Thresholds": 0.7070800528041495, "PR_Thresholds_Shift": 0.7054041207004632, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8566666666666667, "Recall": 0.6425, "F1 score": 0.7342857142857143, "PR_Thresholds": 0.7054041207004632, "PR_Thresholds_Shift": 0.704916337282004, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8571428571428571, "Recall": 0.645, "F1 score": 0.7360912981455063, "PR_Thresholds": 0.704916337282004, "PR_Thresholds_Shift": 0.70424676886535, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8576158940397351, "Recall": 0.6475, "F1 score": 0.7378917378917379, "PR_Thresholds": 0.70424676886535, "PR_Thresholds_Shift": 0.7025239894583362, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.858085808580858, "Recall": 0.65, "F1 score": 0.7396870554765291, "PR_Thresholds": 0.7025239894583362, "PR_Thresholds_Shift": 0.7020870614779238, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8552631578947368, "Recall": 0.65, "F1 score": 0.7386363636363636, "PR_Thresholds": 0.7020870614779238, "PR_Thresholds_Shift": 0.7019690984730408, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8557377049180328, "Recall": 0.6525, "F1 score": 0.7404255319148936, "PR_Thresholds": 0.7019690984730408, "PR_Thresholds_Shift": 0.7014240131023398, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8562091503267973, "Recall": 0.655, "F1 score": 0.7422096317280453, "PR_Thresholds": 0.7014240131023398, "PR_Thresholds_Shift": 0.7013004668815156, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8534201954397395, "Recall": 0.655, "F1 score": 0.7411598302687411, "PR_Thresholds": 0.7013004668815156, "PR_Thresholds_Shift": 0.7005738416181253, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8506493506493507, "Recall": 0.655, "F1 score": 0.7401129943502825, "PR_Thresholds": 0.7005738416181253, "PR_Thresholds_Shift": 0.697100524218348, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8511326860841424, "Recall": 0.6575, "F1 score": 0.7418899858956277, "PR_Thresholds": 0.697100524218348, "PR_Thresholds_Shift": 0.6957920758144401, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8516129032258064, "Recall": 0.66, "F1 score": 0.7436619718309859, "PR_Thresholds": 0.6957920758144401, "PR_Thresholds_Shift": 0.6955333530059413, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8520900321543409, "Recall": 0.6625, "F1 score": 0.7454289732770745, "PR_Thresholds": 0.6955333530059413, "PR_Thresholds_Shift": 0.6896568298626133, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8417721518987342, "Recall": 0.665, "F1 score": 0.7430167597765364, "PR_Thresholds": 0.6896568298626133, "PR_Thresholds_Shift": 0.690565735112405, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8444444444444444, "Recall": 0.665, "F1 score": 0.744055944055944, "PR_Thresholds": 0.690565735112405, "PR_Thresholds_Shift": 0.6908021856442939, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8471337579617835, "Recall": 0.665, "F1 score": 0.7450980392156863, "PR_Thresholds": 0.6908021856442939, "PR_Thresholds_Shift": 0.6953816130013575, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8525641025641025, "Recall": 0.665, "F1 score": 0.747191011235955, "PR_Thresholds": 0.6953816130013575, "PR_Thresholds_Shift": 0.6949271425526893, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8498402555910544, "Recall": 0.665, "F1 score": 0.7461430575035063, "PR_Thresholds": 0.6949271425526893, "PR_Thresholds_Shift": 0.6892607549029515, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.839622641509434, "Recall": 0.6675, "F1 score": 0.743732590529248, "PR_Thresholds": 0.6892607549029515, "PR_Thresholds_Shift": 0.6894952616585989, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8422712933753943, "Recall": 0.6675, "F1 score": 0.7447698744769874, "PR_Thresholds": 0.6894952616585989, "PR_Thresholds_Shift": 0.6891009960256288, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8401253918495298, "Recall": 0.67, "F1 score": 0.74547983310153, "PR_Thresholds": 0.6891009960256288, "PR_Thresholds_Shift": 0.6890070560707938, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.840625, "Recall": 0.6725, "F1 score": 0.7472222222222221, "PR_Thresholds": 0.6890070560707938, "PR_Thresholds_Shift": 0.68838965035375, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8411214953271028, "Recall": 0.675, "F1 score": 0.7489597780859917, "PR_Thresholds": 0.68838965035375, "PR_Thresholds_Shift": 0.6876802351715594, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8385093167701864, "Recall": 0.675, "F1 score": 0.7479224376731302, "PR_Thresholds": 0.6876802351715594, "PR_Thresholds_Shift": 0.6874082372723426, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8390092879256966, "Recall": 0.6775, "F1 score": 0.7496542185338866, "PR_Thresholds": 0.6874082372723426, "PR_Thresholds_Shift": 0.6870694883936136, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8364197530864198, "Recall": 0.6775, "F1 score": 0.7486187845303867, "PR_Thresholds": 0.6870694883936136, "PR_Thresholds_Shift": 0.6844059982976898, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8369230769230769, "Recall": 0.68, "F1 score": 0.7503448275862068, "PR_Thresholds": 0.6844059982976898, "PR_Thresholds_Shift": 0.684324437258235, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8374233128834356, "Recall": 0.6825, "F1 score": 0.7520661157024795, "PR_Thresholds": 0.684324437258235, "PR_Thresholds_Shift": 0.6828940736099436, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8348623853211009, "Recall": 0.6825, "F1 score": 0.7510316368638239, "PR_Thresholds": 0.6828940736099436, "PR_Thresholds_Shift": 0.6823052360982527, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8353658536585366, "Recall": 0.685, "F1 score": 0.7527472527472527, "PR_Thresholds": 0.6823052360982527, "PR_Thresholds_Shift": 0.6822366223555942, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8328267477203647, "Recall": 0.685, "F1 score": 0.7517146776406036, "PR_Thresholds": 0.6822366223555942, "PR_Thresholds_Shift": 0.6765882437672726, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8160237388724035, "Recall": 0.6875, "F1 score": 0.7462686567164178, "PR_Thresholds": 0.6765882437672726, "PR_Thresholds_Shift": 0.6766673067909394, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8184523809523809, "Recall": 0.6875, "F1 score": 0.7472826086956521, "PR_Thresholds": 0.6766673067909394, "PR_Thresholds_Shift": 0.6773216332164222, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8208955223880597, "Recall": 0.6875, "F1 score": 0.7482993197278912, "PR_Thresholds": 0.6773216332164222, "PR_Thresholds_Shift": 0.6784766205367248, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8233532934131736, "Recall": 0.6875, "F1 score": 0.7493188010899181, "PR_Thresholds": 0.6784766205367248, "PR_Thresholds_Shift": 0.6794790697615807, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8283132530120482, "Recall": 0.6875, "F1 score": 0.7513661202185791, "PR_Thresholds": 0.6794790697615807, "PR_Thresholds_Shift": 0.6810653894164197, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8308157099697885, "Recall": 0.6875, "F1 score": 0.7523939808481532, "PR_Thresholds": 0.6810653894164197, "PR_Thresholds_Shift": 0.681088478958914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8333333333333334, "Recall": 0.6875, "F1 score": 0.7534246575342466, "PR_Thresholds": 0.681088478958914, "PR_Thresholds_Shift": 0.6788248110053092, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8258258258258259, "Recall": 0.6875, "F1 score": 0.7503410641200545, "PR_Thresholds": 0.6788248110053092, "PR_Thresholds_Shift": 0.6763243974000961, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8165680473372781, "Recall": 0.69, "F1 score": 0.7479674796747967, "PR_Thresholds": 0.6763243974000961, "PR_Thresholds_Shift": 0.6755206984397951, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8141592920353983, "Recall": 0.69, "F1 score": 0.7469553450608932, "PR_Thresholds": 0.6755206984397951, "PR_Thresholds_Shift": 0.6752211284723924, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8147058823529412, "Recall": 0.6925, "F1 score": 0.7486486486486486, "PR_Thresholds": 0.6752211284723924, "PR_Thresholds_Shift": 0.6736922058159479, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8152492668621701, "Recall": 0.695, "F1 score": 0.7503373819163294, "PR_Thresholds": 0.6736922058159479, "PR_Thresholds_Shift": 0.6716781289211151, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8157894736842105, "Recall": 0.6975, "F1 score": 0.7520215633423181, "PR_Thresholds": 0.6716781289211151, "PR_Thresholds_Shift": 0.671600179252954, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8134110787172012, "Recall": 0.6975, "F1 score": 0.7510094212651414, "PR_Thresholds": 0.671600179252954, "PR_Thresholds_Shift": 0.6711028354302491, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.813953488372093, "Recall": 0.7, "F1 score": 0.7526881720430109, "PR_Thresholds": 0.6711028354302491, "PR_Thresholds_Shift": 0.6709640525502297, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8115942028985508, "Recall": 0.7, "F1 score": 0.7516778523489933, "PR_Thresholds": 0.6709640525502297, "PR_Thresholds_Shift": 0.6694465601848265, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8121387283236994, "Recall": 0.7025, "F1 score": 0.7533512064343163, "PR_Thresholds": 0.6694465601848265, "PR_Thresholds_Shift": 0.668705984466253, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8126801152737753, "Recall": 0.705, "F1 score": 0.7550200803212851, "PR_Thresholds": 0.668705984466253, "PR_Thresholds_Shift": 0.6686450496162564, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8103448275862069, "Recall": 0.705, "F1 score": 0.7540106951871657, "PR_Thresholds": 0.6686450496162564, "PR_Thresholds_Shift": 0.6683134806300404, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8108882521489972, "Recall": 0.7075, "F1 score": 0.7556742323097464, "PR_Thresholds": 0.6683134806300404, "PR_Thresholds_Shift": 0.6680023552123702, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8091168091168092, "Recall": 0.71, "F1 score": 0.7563249001331558, "PR_Thresholds": 0.6680023552123702, "PR_Thresholds_Shift": 0.6682949730639234, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8114285714285714, "Recall": 0.71, "F1 score": 0.7573333333333333, "PR_Thresholds": 0.6682949730639234, "PR_Thresholds_Shift": 0.6659900818819342, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8096590909090909, "Recall": 0.7125, "F1 score": 0.7579787234042553, "PR_Thresholds": 0.6659900818819342, "PR_Thresholds_Shift": 0.665850672531449, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.807909604519774, "Recall": 0.715, "F1 score": 0.7586206896551723, "PR_Thresholds": 0.665850672531449, "PR_Thresholds_Shift": 0.6657633418331379, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8056338028169014, "Recall": 0.715, "F1 score": 0.7576158940397351, "PR_Thresholds": 0.6657633418331379, "PR_Thresholds_Shift": 0.6649116613225876, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8033707865168539, "Recall": 0.715, "F1 score": 0.7566137566137566, "PR_Thresholds": 0.6649116613225876, "PR_Thresholds_Shift": 0.6658979924281234, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8101983002832861, "Recall": 0.715, "F1 score": 0.7596281540504647, "PR_Thresholds": 0.6658979924281234, "PR_Thresholds_Shift": 0.6647451839895396, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.803921568627451, "Recall": 0.7175, "F1 score": 0.7582562747688244, "PR_Thresholds": 0.6647451839895396, "PR_Thresholds_Shift": 0.6645023289356217, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8044692737430168, "Recall": 0.72, "F1 score": 0.7598944591029024, "PR_Thresholds": 0.6645023289356217, "PR_Thresholds_Shift": 0.663368237453251, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8050139275766016, "Recall": 0.7225, "F1 score": 0.7615283267457181, "PR_Thresholds": 0.663368237453251, "PR_Thresholds_Shift": 0.6633174001768882, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8027777777777778, "Recall": 0.7225, "F1 score": 0.7605263157894737, "PR_Thresholds": 0.6633174001768882, "PR_Thresholds_Shift": 0.6632490382780248, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8033240997229917, "Recall": 0.725, "F1 score": 0.7621550591327201, "PR_Thresholds": 0.6632490382780248, "PR_Thresholds_Shift": 0.6631344426204305, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8038674033149171, "Recall": 0.7275, "F1 score": 0.7637795275590551, "PR_Thresholds": 0.6631344426204305, "PR_Thresholds_Shift": 0.6630328653563491, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.8016528925619835, "Recall": 0.7275, "F1 score": 0.7627785058977719, "PR_Thresholds": 0.6630328653563491, "PR_Thresholds_Shift": 0.6628408086935249, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7994505494505495, "Recall": 0.7275, "F1 score": 0.7617801047120419, "PR_Thresholds": 0.6628408086935249, "PR_Thresholds_Shift": 0.6627730734694413, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7972602739726027, "Recall": 0.7275, "F1 score": 0.7607843137254903, "PR_Thresholds": 0.6627730734694413, "PR_Thresholds_Shift": 0.6627309793144276, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7950819672131147, "Recall": 0.7275, "F1 score": 0.7597911227154048, "PR_Thresholds": 0.6627309793144276, "PR_Thresholds_Shift": 0.6593917387147417, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7891891891891892, "Recall": 0.73, "F1 score": 0.7584415584415585, "PR_Thresholds": 0.6593917387147417, "PR_Thresholds_Shift": 0.6600558943491782, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7913279132791328, "Recall": 0.73, "F1 score": 0.7594278283485046, "PR_Thresholds": 0.6600558943491782, "PR_Thresholds_Shift": 0.6610089820800884, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7956403269754768, "Recall": 0.73, "F1 score": 0.7614080834419816, "PR_Thresholds": 0.6610089820800884, "PR_Thresholds_Shift": 0.6608143126920307, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7934782608695652, "Recall": 0.73, "F1 score": 0.7604166666666666, "PR_Thresholds": 0.6608143126920307, "PR_Thresholds_Shift": 0.6592636973475127, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7897574123989218, "Recall": 0.7325, "F1 score": 0.7600518806744487, "PR_Thresholds": 0.6592636973475127, "PR_Thresholds_Shift": 0.6578673196059632, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7876344086021505, "Recall": 0.7325, "F1 score": 0.7590673575129534, "PR_Thresholds": 0.6578673196059632, "PR_Thresholds_Shift": 0.6576892457109877, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7882037533512064, "Recall": 0.735, "F1 score": 0.7606727037516171, "PR_Thresholds": 0.6576892457109877, "PR_Thresholds_Shift": 0.6562324223094087, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.786096256684492, "Recall": 0.735, "F1 score": 0.7596899224806202, "PR_Thresholds": 0.6562324223094087, "PR_Thresholds_Shift": 0.6552499552547361, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7866666666666666, "Recall": 0.7375, "F1 score": 0.7612903225806452, "PR_Thresholds": 0.6552499552547361, "PR_Thresholds_Shift": 0.6549358442315354, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7845744680851063, "Recall": 0.7375, "F1 score": 0.7603092783505154, "PR_Thresholds": 0.6549358442315354, "PR_Thresholds_Shift": 0.6541131698337993, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7851458885941645, "Recall": 0.74, "F1 score": 0.761904761904762, "PR_Thresholds": 0.6541131698337993, "PR_Thresholds_Shift": 0.6540479334496986, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7857142857142857, "Recall": 0.7425, "F1 score": 0.7634961439588689, "PR_Thresholds": 0.6540479334496986, "PR_Thresholds_Shift": 0.6533926037685389, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7842105263157895, "Recall": 0.745, "F1 score": 0.764102564102564, "PR_Thresholds": 0.6533926037685389, "PR_Thresholds_Shift": 0.6517460818013399, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7821522309711286, "Recall": 0.745, "F1 score": 0.7631241997439182, "PR_Thresholds": 0.6517460818013399, "PR_Thresholds_Shift": 0.6534768912187586, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7862796833773087, "Recall": 0.745, "F1 score": 0.7650834403080873, "PR_Thresholds": 0.6534768912187586, "PR_Thresholds_Shift": 0.6516802170455089, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7827225130890052, "Recall": 0.7475, "F1 score": 0.7647058823529412, "PR_Thresholds": 0.6516802170455089, "PR_Thresholds_Shift": 0.6516341809330506, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.783289817232376, "Recall": 0.75, "F1 score": 0.7662835249042147, "PR_Thresholds": 0.6516341809330506, "PR_Thresholds_Shift": 0.6504310655139857, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.78125, "Recall": 0.75, "F1 score": 0.7653061224489796, "PR_Thresholds": 0.6504310655139857, "PR_Thresholds_Shift": 0.6501354180409191, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7818181818181819, "Recall": 0.7525, "F1 score": 0.7668789808917198, "PR_Thresholds": 0.6501354180409191, "PR_Thresholds_Shift": 0.6482073091357996, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7797927461139896, "Recall": 0.7525, "F1 score": 0.7659033078880406, "PR_Thresholds": 0.6482073091357996, "PR_Thresholds_Shift": 0.6480515686555675, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7803617571059431, "Recall": 0.755, "F1 score": 0.7674714104193139, "PR_Thresholds": 0.6480515686555675, "PR_Thresholds_Shift": 0.6479218494873256, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7809278350515464, "Recall": 0.7575, "F1 score": 0.7690355329949238, "PR_Thresholds": 0.6479218494873256, "PR_Thresholds_Shift": 0.6470289816295898, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7774936061381074, "Recall": 0.76, "F1 score": 0.7686472819216182, "PR_Thresholds": 0.6470289816295898, "PR_Thresholds_Shift": 0.647299662741479, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.781491002570694, "Recall": 0.76, "F1 score": 0.770595690747782, "PR_Thresholds": 0.647299662741479, "PR_Thresholds_Shift": 0.6470675075998095, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7794871794871795, "Recall": 0.76, "F1 score": 0.769620253164557, "PR_Thresholds": 0.6470675075998095, "PR_Thresholds_Shift": 0.6461050497894801, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7780612244897959, "Recall": 0.7625, "F1 score": 0.77020202020202, "PR_Thresholds": 0.6461050497894801, "PR_Thresholds_Shift": 0.6460401131713112, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7786259541984732, "Recall": 0.765, "F1 score": 0.7717528373266079, "PR_Thresholds": 0.6460401131713112, "PR_Thresholds_Shift": 0.6441781200167103, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7766497461928934, "Recall": 0.765, "F1 score": 0.770780856423174, "PR_Thresholds": 0.6441781200167103, "PR_Thresholds_Shift": 0.6440094892674921, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7746835443037975, "Recall": 0.765, "F1 score": 0.7698113207547169, "PR_Thresholds": 0.6440094892674921, "PR_Thresholds_Shift": 0.6439006246901633, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7727272727272727, "Recall": 0.765, "F1 score": 0.7688442211055277, "PR_Thresholds": 0.6439006246901633, "PR_Thresholds_Shift": 0.6438080876218751, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7732997481108312, "Recall": 0.7675, "F1 score": 0.7703889585947301, "PR_Thresholds": 0.6438080876218751, "PR_Thresholds_Shift": 0.6408314512282215, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7719298245614035, "Recall": 0.77, "F1 score": 0.7709637046307884, "PR_Thresholds": 0.6408314512282215, "PR_Thresholds_Shift": 0.6407851668493074, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.77, "Recall": 0.77, "F1 score": 0.7699999999999999, "PR_Thresholds": 0.6407851668493074, "PR_Thresholds_Shift": 0.6404043370648024, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7680798004987531, "Recall": 0.77, "F1 score": 0.7690387016229713, "PR_Thresholds": 0.6404043370648024, "PR_Thresholds_Shift": 0.6403960950994383, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7661691542288557, "Recall": 0.77, "F1 score": 0.7680798004987532, "PR_Thresholds": 0.6403960950994383, "PR_Thresholds_Shift": 0.6409116173099025, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7738693467336684, "Recall": 0.77, "F1 score": 0.7719298245614035, "PR_Thresholds": 0.6409116173099025, "PR_Thresholds_Shift": 0.6395497039194509, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7667493796526055, "Recall": 0.7725, "F1 score": 0.7696139476961396, "PR_Thresholds": 0.6395497039194509, "PR_Thresholds_Shift": 0.6394731547621646, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7648514851485149, "Recall": 0.7725, "F1 score": 0.7686567164179104, "PR_Thresholds": 0.6394731547621646, "PR_Thresholds_Shift": 0.6382788548407723, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7579462102689487, "Recall": 0.775, "F1 score": 0.7663782447466008, "PR_Thresholds": 0.6382788548407723, "PR_Thresholds_Shift": 0.6381087700851542, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7560975609756098, "Recall": 0.775, "F1 score": 0.7654320987654322, "PR_Thresholds": 0.6381087700851542, "PR_Thresholds_Shift": 0.6385419058579822, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7616707616707616, "Recall": 0.775, "F1 score": 0.7682775712515489, "PR_Thresholds": 0.6385419058579822, "PR_Thresholds_Shift": 0.6388451219186874, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7635467980295566, "Recall": 0.775, "F1 score": 0.7692307692307692, "PR_Thresholds": 0.6388451219186874, "PR_Thresholds_Shift": 0.6390794887497677, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7654320987654321, "Recall": 0.775, "F1 score": 0.7701863354037267, "PR_Thresholds": 0.6390794887497677, "PR_Thresholds_Shift": 0.6382893697496637, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7598039215686274, "Recall": 0.775, "F1 score": 0.7673267326732675, "PR_Thresholds": 0.6382893697496637, "PR_Thresholds_Shift": 0.6379079137887957, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7566909975669099, "Recall": 0.7775, "F1 score": 0.7669543773119605, "PR_Thresholds": 0.6379079137887957, "PR_Thresholds_Shift": 0.6376868998141707, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7548543689320388, "Recall": 0.7775, "F1 score": 0.7660098522167487, "PR_Thresholds": 0.6376868998141707, "PR_Thresholds_Shift": 0.6375019723196682, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7554479418886199, "Recall": 0.78, "F1 score": 0.7675276752767528, "PR_Thresholds": 0.6375019723196682, "PR_Thresholds_Shift": 0.6372290943497158, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7560386473429952, "Recall": 0.7825, "F1 score": 0.7690417690417691, "PR_Thresholds": 0.6372290943497158, "PR_Thresholds_Shift": 0.6369780478582678, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7542168674698795, "Recall": 0.7825, "F1 score": 0.7680981595092025, "PR_Thresholds": 0.6369780478582678, "PR_Thresholds_Shift": 0.6369690214764328, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7548076923076923, "Recall": 0.785, "F1 score": 0.7696078431372549, "PR_Thresholds": 0.6369690214764328, "PR_Thresholds_Shift": 0.63555754030758, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7517899761336515, "Recall": 0.7875, "F1 score": 0.7692307692307692, "PR_Thresholds": 0.63555754030758, "PR_Thresholds_Shift": 0.6368595153855269, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7553956834532374, "Recall": 0.7875, "F1 score": 0.7711138310893513, "PR_Thresholds": 0.6368595153855269, "PR_Thresholds_Shift": 0.6366416830535766, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7535885167464115, "Recall": 0.7875, "F1 score": 0.7701711491442543, "PR_Thresholds": 0.6366416830535766, "PR_Thresholds_Shift": 0.6346269434424655, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7523809523809524, "Recall": 0.79, "F1 score": 0.7707317073170733, "PR_Thresholds": 0.6346269434424655, "PR_Thresholds_Shift": 0.634519827399234, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7505938242280285, "Recall": 0.79, "F1 score": 0.7697929354445799, "PR_Thresholds": 0.634519827399234, "PR_Thresholds_Shift": 0.6337745568053743, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7488151658767772, "Recall": 0.79, "F1 score": 0.7688564476885645, "PR_Thresholds": 0.6337745568053743, "PR_Thresholds_Shift": 0.6332248705478849, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7494089834515366, "Recall": 0.7925, "F1 score": 0.7703523693803159, "PR_Thresholds": 0.6332248705478849, "PR_Thresholds_Shift": 0.6303707221327244, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7464788732394366, "Recall": 0.795, "F1 score": 0.7699757869249395, "PR_Thresholds": 0.6303707221327244, "PR_Thresholds_Shift": 0.631772793800346, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.75, "Recall": 0.795, "F1 score": 0.7718446601941749, "PR_Thresholds": 0.631772793800346, "PR_Thresholds_Shift": 0.6306015509137887, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7482352941176471, "Recall": 0.795, "F1 score": 0.7709090909090909, "PR_Thresholds": 0.6306015509137887, "PR_Thresholds_Shift": 0.6302923968526822, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.747072599531616, "Recall": 0.7975, "F1 score": 0.7714631197097944, "PR_Thresholds": 0.6302923968526822, "PR_Thresholds_Shift": 0.6296571375631517, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7476635514018691, "Recall": 0.8, "F1 score": 0.7729468599033816, "PR_Thresholds": 0.6296571375631517, "PR_Thresholds_Shift": 0.6294751712916771, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.745920745920746, "Recall": 0.8, "F1 score": 0.7720144752714114, "PR_Thresholds": 0.6294751712916771, "PR_Thresholds_Shift": 0.6294258236516664, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7441860465116279, "Recall": 0.8, "F1 score": 0.7710843373493975, "PR_Thresholds": 0.6294258236516664, "PR_Thresholds_Shift": 0.6285134071605508, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7424593967517401, "Recall": 0.8, "F1 score": 0.770156438026474, "PR_Thresholds": 0.6285134071605508, "PR_Thresholds_Shift": 0.6263392688460657, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7430555555555556, "Recall": 0.8025, "F1 score": 0.7716346153846154, "PR_Thresholds": 0.6263392688460657, "PR_Thresholds_Shift": 0.6261827004381488, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7413394919168591, "Recall": 0.8025, "F1 score": 0.7707082833133253, "PR_Thresholds": 0.6261827004381488, "PR_Thresholds_Shift": 0.6260564622809655, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7396313364055299, "Recall": 0.8025, "F1 score": 0.7697841726618705, "PR_Thresholds": 0.6260564622809655, "PR_Thresholds_Shift": 0.6259676739088433, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7379310344827587, "Recall": 0.8025, "F1 score": 0.7688622754491018, "PR_Thresholds": 0.6259676739088433, "PR_Thresholds_Shift": 0.6257202894826144, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7362385321100917, "Recall": 0.8025, "F1 score": 0.7679425837320574, "PR_Thresholds": 0.6257202894826144, "PR_Thresholds_Shift": 0.61950710493347, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7235955056179775, "Recall": 0.805, "F1 score": 0.762130177514793, "PR_Thresholds": 0.61950710493347, "PR_Thresholds_Shift": 0.6196302502534962, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7252252252252253, "Recall": 0.805, "F1 score": 0.7630331753554502, "PR_Thresholds": 0.6196302502534962, "PR_Thresholds_Shift": 0.6207345797233831, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7285067873303167, "Recall": 0.805, "F1 score": 0.7648456057007127, "PR_Thresholds": 0.6207345797233831, "PR_Thresholds_Shift": 0.6200258941122792, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7268623024830699, "Recall": 0.805, "F1 score": 0.7639383155397391, "PR_Thresholds": 0.6200258941122792, "PR_Thresholds_Shift": 0.6221093120630006, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7318181818181818, "Recall": 0.805, "F1 score": 0.7666666666666666, "PR_Thresholds": 0.6221093120630006, "PR_Thresholds_Shift": 0.6230660792970453, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7334851936218679, "Recall": 0.805, "F1 score": 0.767580452920143, "PR_Thresholds": 0.6230660792970453, "PR_Thresholds_Shift": 0.624123250032579, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7351598173515982, "Recall": 0.805, "F1 score": 0.7684964200477328, "PR_Thresholds": 0.624123250032579, "PR_Thresholds_Shift": 0.624456955448561, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7368421052631579, "Recall": 0.805, "F1 score": 0.7694145758661888, "PR_Thresholds": 0.624456955448561, "PR_Thresholds_Shift": 0.6209423045941502, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7301587301587301, "Recall": 0.805, "F1 score": 0.7657550535077289, "PR_Thresholds": 0.6209423045941502, "PR_Thresholds_Shift": 0.6194220406754715, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7242152466367713, "Recall": 0.8075, "F1 score": 0.7635933806146573, "PR_Thresholds": 0.6194220406754715, "PR_Thresholds_Shift": 0.6191177852008183, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7225950782997763, "Recall": 0.8075, "F1 score": 0.7626918536009446, "PR_Thresholds": 0.6191177852008183, "PR_Thresholds_Shift": 0.6186866523073197, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7232142857142857, "Recall": 0.81, "F1 score": 0.7641509433962265, "PR_Thresholds": 0.6186866523073197, "PR_Thresholds_Shift": 0.6173015732459276, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.717439293598234, "Recall": 0.8125, "F1 score": 0.7620164126611959, "PR_Thresholds": 0.6173015732459276, "PR_Thresholds_Shift": 0.6174461703290013, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7190265486725663, "Recall": 0.8125, "F1 score": 0.7629107981220656, "PR_Thresholds": 0.6174461703290013, "PR_Thresholds_Shift": 0.6184142467182444, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7222222222222222, "Recall": 0.8125, "F1 score": 0.7647058823529411, "PR_Thresholds": 0.6184142467182444, "PR_Thresholds_Shift": 0.6186711210573045, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7238307349665924, "Recall": 0.8125, "F1 score": 0.7656065959952886, "PR_Thresholds": 0.6186711210573045, "PR_Thresholds_Shift": 0.6177118867007598, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.720620842572062, "Recall": 0.8125, "F1 score": 0.7638072855464159, "PR_Thresholds": 0.6177118867007598, "PR_Thresholds_Shift": 0.6170505551644918, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7180616740088106, "Recall": 0.815, "F1 score": 0.7634660421545667, "PR_Thresholds": 0.6170505551644918, "PR_Thresholds_Shift": 0.6170414815930677, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7164835164835165, "Recall": 0.815, "F1 score": 0.7625730994152047, "PR_Thresholds": 0.6170414815930677, "PR_Thresholds_Shift": 0.6149456363413875, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7047413793103449, "Recall": 0.8175, "F1 score": 0.7569444444444444, "PR_Thresholds": 0.6149456363413875, "PR_Thresholds_Shift": 0.615495763947399, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7077922077922078, "Recall": 0.8175, "F1 score": 0.7587006960556844, "PR_Thresholds": 0.615495763947399, "PR_Thresholds_Shift": 0.6157415287176415, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7093275488069414, "Recall": 0.8175, "F1 score": 0.7595818815331011, "PR_Thresholds": 0.6157415287176415, "PR_Thresholds_Shift": 0.6150068047090679, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7062634989200864, "Recall": 0.8175, "F1 score": 0.7578215527230592, "PR_Thresholds": 0.6150068047090679, "PR_Thresholds_Shift": 0.6160907790286043, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7124183006535948, "Recall": 0.8175, "F1 score": 0.7613504074505238, "PR_Thresholds": 0.6160907790286043, "PR_Thresholds_Shift": 0.6163523752887619, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7139737991266376, "Recall": 0.8175, "F1 score": 0.7622377622377623, "PR_Thresholds": 0.6163523752887619, "PR_Thresholds_Shift": 0.6164598467777586, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7155361050328227, "Recall": 0.8175, "F1 score": 0.7631271878646441, "PR_Thresholds": 0.6164598467777586, "PR_Thresholds_Shift": 0.6166795891830407, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7171052631578947, "Recall": 0.8175, "F1 score": 0.7640186915887851, "PR_Thresholds": 0.6166795891830407, "PR_Thresholds_Shift": 0.6158336139005407, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7108695652173913, "Recall": 0.8175, "F1 score": 0.7604651162790698, "PR_Thresholds": 0.6158336139005407, "PR_Thresholds_Shift": 0.6143214870969372, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7053763440860215, "Recall": 0.82, "F1 score": 0.7583815028901734, "PR_Thresholds": 0.6143214870969372, "PR_Thresholds_Shift": 0.6140550501078346, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7060085836909872, "Recall": 0.8225, "F1 score": 0.7598152424942264, "PR_Thresholds": 0.6140550501078346, "PR_Thresholds_Shift": 0.6140193471702842, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7044967880085653, "Recall": 0.8225, "F1 score": 0.7589388696655134, "PR_Thresholds": 0.6140193471702842, "PR_Thresholds_Shift": 0.6140140388455333, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7051282051282052, "Recall": 0.825, "F1 score": 0.7603686635944702, "PR_Thresholds": 0.6140140388455333, "PR_Thresholds_Shift": 0.6139971219179028, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7036247334754797, "Recall": 0.825, "F1 score": 0.7594936708860759, "PR_Thresholds": 0.6139971219179028, "PR_Thresholds_Shift": 0.6137094012997568, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7021276595744681, "Recall": 0.825, "F1 score": 0.7586206896551724, "PR_Thresholds": 0.6137094012997568, "PR_Thresholds_Shift": 0.6131000700595218, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.7006369426751592, "Recall": 0.825, "F1 score": 0.7577497129735935, "PR_Thresholds": 0.6131000700595218, "PR_Thresholds_Shift": 0.6119898445168483, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.701271186440678, "Recall": 0.8275, "F1 score": 0.7591743119266057, "PR_Thresholds": 0.6119898445168483, "PR_Thresholds_Shift": 0.6106229401928613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6997885835095138, "Recall": 0.8275, "F1 score": 0.7583046964490263, "PR_Thresholds": 0.6106229401928613, "PR_Thresholds_Shift": 0.6098088327983698, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6974789915966386, "Recall": 0.83, "F1 score": 0.7579908675799087, "PR_Thresholds": 0.6098088327983698, "PR_Thresholds_Shift": 0.6104507821594658, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.70042194092827, "Recall": 0.83, "F1 score": 0.7597254004576659, "PR_Thresholds": 0.6104507821594658, "PR_Thresholds_Shift": 0.609865271382726, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6989473684210527, "Recall": 0.83, "F1 score": 0.7588571428571429, "PR_Thresholds": 0.609865271382726, "PR_Thresholds_Shift": 0.6095607697534067, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6981132075471698, "Recall": 0.8325, "F1 score": 0.7594070695553021, "PR_Thresholds": 0.6095607697534067, "PR_Thresholds_Shift": 0.6084480452387864, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.698744769874477, "Recall": 0.835, "F1 score": 0.7608200455580865, "PR_Thresholds": 0.6084480452387864, "PR_Thresholds_Shift": 0.6076782508112317, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.697286012526096, "Recall": 0.835, "F1 score": 0.7599544937428897, "PR_Thresholds": 0.6076782508112317, "PR_Thresholds_Shift": 0.6076334672951682, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6958333333333333, "Recall": 0.835, "F1 score": 0.7590909090909091, "PR_Thresholds": 0.6076334672951682, "PR_Thresholds_Shift": 0.6038925279840363, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6836734693877551, "Recall": 0.8375, "F1 score": 0.752808988764045, "PR_Thresholds": 0.6038925279840363, "PR_Thresholds_Shift": 0.6022993625179296, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6781376518218624, "Recall": 0.8375, "F1 score": 0.7494407158836689, "PR_Thresholds": 0.6022993625179296, "PR_Thresholds_Shift": 0.6034836386700073, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6795131845841785, "Recall": 0.8375, "F1 score": 0.7502799552071668, "PR_Thresholds": 0.6034836386700073, "PR_Thresholds_Shift": 0.6036838637289685, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6808943089430894, "Recall": 0.8375, "F1 score": 0.7511210762331839, "PR_Thresholds": 0.6036838637289685, "PR_Thresholds_Shift": 0.6037245101050008, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6822810590631364, "Recall": 0.8375, "F1 score": 0.7519640852974185, "PR_Thresholds": 0.6037245101050008, "PR_Thresholds_Shift": 0.6044186269894403, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6850715746421268, "Recall": 0.8375, "F1 score": 0.7536557930258717, "PR_Thresholds": 0.6044186269894403, "PR_Thresholds_Shift": 0.6022218100928264, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6767676767676768, "Recall": 0.8375, "F1 score": 0.7486033519553074, "PR_Thresholds": 0.6022218100928264, "PR_Thresholds_Shift": 0.6053810942778257, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6878850102669405, "Recall": 0.8375, "F1 score": 0.7553551296505073, "PR_Thresholds": 0.6053810942778257, "PR_Thresholds_Shift": 0.6076274069680034, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6964656964656964, "Recall": 0.8375, "F1 score": 0.7604994324631101, "PR_Thresholds": 0.6076274069680034, "PR_Thresholds_Shift": 0.6068419777024634, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6950207468879668, "Recall": 0.8375, "F1 score": 0.7596371882086168, "PR_Thresholds": 0.6068419777024634, "PR_Thresholds_Shift": 0.6061963956685508, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6935817805383023, "Recall": 0.8375, "F1 score": 0.7587768969422425, "PR_Thresholds": 0.6061963956685508, "PR_Thresholds_Shift": 0.6047229372141796, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6864754098360656, "Recall": 0.8375, "F1 score": 0.7545045045045045, "PR_Thresholds": 0.6047229372141796, "PR_Thresholds_Shift": 0.6056058115493919, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6907216494845361, "Recall": 0.8375, "F1 score": 0.7570621468926554, "PR_Thresholds": 0.6056058115493919, "PR_Thresholds_Shift": 0.6054042795684893, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6893004115226338, "Recall": 0.8375, "F1 score": 0.7562076749435667, "PR_Thresholds": 0.6054042795684893, "PR_Thresholds_Shift": 0.6056851813647653, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6921487603305785, "Recall": 0.8375, "F1 score": 0.7579185520361991, "PR_Thresholds": 0.6056851813647653, "PR_Thresholds_Shift": 0.6016489186044128, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6774193548387096, "Recall": 0.84, "F1 score": 0.75, "PR_Thresholds": 0.6016489186044128, "PR_Thresholds_Shift": 0.6014855780407213, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.676056338028169, "Recall": 0.84, "F1 score": 0.7491638795986623, "PR_Thresholds": 0.6014855780407213, "PR_Thresholds_Shift": 0.6014329470771287, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6746987951807228, "Recall": 0.84, "F1 score": 0.7483296213808462, "PR_Thresholds": 0.6014329470771287, "PR_Thresholds_Shift": 0.60140406792017, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6733466933867736, "Recall": 0.84, "F1 score": 0.7474972191323693, "PR_Thresholds": 0.60140406792017, "PR_Thresholds_Shift": 0.6008448283402397, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.674, "Recall": 0.8425, "F1 score": 0.7488888888888888, "PR_Thresholds": 0.6008448283402397, "PR_Thresholds_Shift": 0.6006780650582775, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6726546906187625, "Recall": 0.8425, "F1 score": 0.7480577136514984, "PR_Thresholds": 0.6006780650582775, "PR_Thresholds_Shift": 0.6001414100211424, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6713147410358565, "Recall": 0.8425, "F1 score": 0.7472283813747228, "PR_Thresholds": 0.6001414100211424, "PR_Thresholds_Shift": 0.5998340881046117, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6699801192842942, "Recall": 0.8425, "F1 score": 0.7464008859357697, "PR_Thresholds": 0.5998340881046117, "PR_Thresholds_Shift": 0.5998059896536744, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6686507936507936, "Recall": 0.8425, "F1 score": 0.745575221238938, "PR_Thresholds": 0.5998059896536744, "PR_Thresholds_Shift": 0.5996754456925346, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6673267326732674, "Recall": 0.8425, "F1 score": 0.7447513812154697, "PR_Thresholds": 0.5996754456925346, "PR_Thresholds_Shift": 0.5966513265685635, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6614481409001957, "Recall": 0.845, "F1 score": 0.7420417124039516, "PR_Thresholds": 0.5966513265685635, "PR_Thresholds_Shift": 0.5956560750544764, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6588693957115009, "Recall": 0.845, "F1 score": 0.7404162102957285, "PR_Thresholds": 0.5956560750544764, "PR_Thresholds_Shift": 0.5960585654011982, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.66015625, "Recall": 0.845, "F1 score": 0.7412280701754387, "PR_Thresholds": 0.5960585654011982, "PR_Thresholds_Shift": 0.598391668706398, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6640471512770137, "Recall": 0.845, "F1 score": 0.7436743674367435, "PR_Thresholds": 0.598391668706398, "PR_Thresholds_Shift": 0.5987144100749682, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6653543307086615, "Recall": 0.845, "F1 score": 0.7444933920704846, "PR_Thresholds": 0.5987144100749682, "PR_Thresholds_Shift": 0.5993063799689109, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6666666666666666, "Recall": 0.845, "F1 score": 0.745314222712238, "PR_Thresholds": 0.5993063799689109, "PR_Thresholds_Shift": 0.5993252246332547, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6679841897233202, "Recall": 0.845, "F1 score": 0.7461368653421634, "PR_Thresholds": 0.5993252246332547, "PR_Thresholds_Shift": 0.596719641060469, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6627450980392157, "Recall": 0.845, "F1 score": 0.7428571428571428, "PR_Thresholds": 0.596719641060469, "PR_Thresholds_Shift": 0.5945646675181714, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6595330739299611, "Recall": 0.8475, "F1 score": 0.7417943107221007, "PR_Thresholds": 0.5945646675181714, "PR_Thresholds_Shift": 0.5945009004490022, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.658252427184466, "Recall": 0.8475, "F1 score": 0.740983606557377, "PR_Thresholds": 0.5945009004490022, "PR_Thresholds_Shift": 0.5942481210311785, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6569767441860465, "Recall": 0.8475, "F1 score": 0.7401746724890829, "PR_Thresholds": 0.5942481210311785, "PR_Thresholds_Shift": 0.593969781725883, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6576402321083172, "Recall": 0.85, "F1 score": 0.7415485278080698, "PR_Thresholds": 0.593969781725883, "PR_Thresholds_Shift": 0.5930930182304958, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6563706563706564, "Recall": 0.85, "F1 score": 0.7407407407407407, "PR_Thresholds": 0.5930930182304958, "PR_Thresholds_Shift": 0.5922270182994016, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6532567049808429, "Recall": 0.8525, "F1 score": 0.7396963123644252, "PR_Thresholds": 0.5922270182994016, "PR_Thresholds_Shift": 0.59243101830792, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6557692307692308, "Recall": 0.8525, "F1 score": 0.7413043478260871, "PR_Thresholds": 0.59243101830792, "PR_Thresholds_Shift": 0.5927097680186098, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6570327552986512, "Recall": 0.8525, "F1 score": 0.7421109902067464, "PR_Thresholds": 0.5927097680186098, "PR_Thresholds_Shift": 0.5923024768005318, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.654510556621881, "Recall": 0.8525, "F1 score": 0.740499457111835, "PR_Thresholds": 0.5923024768005318, "PR_Thresholds_Shift": 0.5918537166782223, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6539196940726577, "Recall": 0.855, "F1 score": 0.741061755146262, "PR_Thresholds": 0.5918537166782223, "PR_Thresholds_Shift": 0.5888523798817287, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6459510357815442, "Recall": 0.8575, "F1 score": 0.7368421052631579, "PR_Thresholds": 0.5888523798817287, "PR_Thresholds_Shift": 0.5869752639870025, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6423220973782772, "Recall": 0.8575, "F1 score": 0.7344753747323342, "PR_Thresholds": 0.5869752639870025, "PR_Thresholds_Shift": 0.5873823454688769, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6435272045028143, "Recall": 0.8575, "F1 score": 0.7352625937834942, "PR_Thresholds": 0.5873823454688769, "PR_Thresholds_Shift": 0.5884422136844633, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6447368421052632, "Recall": 0.8575, "F1 score": 0.7360515021459229, "PR_Thresholds": 0.5884422136844633, "PR_Thresholds_Shift": 0.5895611506066958, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6471698113207547, "Recall": 0.8575, "F1 score": 0.7376344086021506, "PR_Thresholds": 0.5895611506066958, "PR_Thresholds_Shift": 0.5868529533088074, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6411214953271028, "Recall": 0.8575, "F1 score": 0.7336898395721926, "PR_Thresholds": 0.5868529533088074, "PR_Thresholds_Shift": 0.5908290002428074, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6496212121212122, "Recall": 0.8575, "F1 score": 0.7392241379310345, "PR_Thresholds": 0.5908290002428074, "PR_Thresholds_Shift": 0.5910383696088415, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.650853889943074, "Recall": 0.8575, "F1 score": 0.7400215749730313, "PR_Thresholds": 0.5910383696088415, "PR_Thresholds_Shift": 0.5913540114036415, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6520912547528517, "Recall": 0.8575, "F1 score": 0.7408207343412527, "PR_Thresholds": 0.5913540114036415, "PR_Thresholds_Shift": 0.5913835189840844, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6533333333333333, "Recall": 0.8575, "F1 score": 0.7416216216216217, "PR_Thresholds": 0.5913835189840844, "PR_Thresholds_Shift": 0.5918178197437243, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6545801526717557, "Recall": 0.8575, "F1 score": 0.7424242424242424, "PR_Thresholds": 0.5918178197437243, "PR_Thresholds_Shift": 0.5895727517943976, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6483931947069943, "Recall": 0.8575, "F1 score": 0.7384284176533907, "PR_Thresholds": 0.5895727517943976, "PR_Thresholds_Shift": 0.5868094537533242, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6417910447761194, "Recall": 0.86, "F1 score": 0.735042735042735, "PR_Thresholds": 0.5868094537533242, "PR_Thresholds_Shift": 0.5853416956059405, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6353591160220995, "Recall": 0.8625, "F1 score": 0.7317073170731707, "PR_Thresholds": 0.5853416956059405, "PR_Thresholds_Shift": 0.5853745395274643, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6365313653136532, "Recall": 0.8625, "F1 score": 0.7324840764331212, "PR_Thresholds": 0.5853745395274643, "PR_Thresholds_Shift": 0.5854539726490953, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6377079482439926, "Recall": 0.8625, "F1 score": 0.7332624867162593, "PR_Thresholds": 0.5854539726490953, "PR_Thresholds_Shift": 0.5859203909748054, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6388888888888888, "Recall": 0.8625, "F1 score": 0.7340425531914894, "PR_Thresholds": 0.5859203909748054, "PR_Thresholds_Shift": 0.5865069572799256, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.640074211502783, "Recall": 0.8625, "F1 score": 0.7348242811501599, "PR_Thresholds": 0.5865069572799256, "PR_Thresholds_Shift": 0.5865484957131121, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6412639405204461, "Recall": 0.8625, "F1 score": 0.7356076759061835, "PR_Thresholds": 0.5865484957131121, "PR_Thresholds_Shift": 0.5867976942602885, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6424581005586593, "Recall": 0.8625, "F1 score": 0.7363927427961579, "PR_Thresholds": 0.5867976942602885, "PR_Thresholds_Shift": 0.5820154165102165, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6234234234234234, "Recall": 0.865, "F1 score": 0.7246073298429317, "PR_Thresholds": 0.5820154165102165, "PR_Thresholds_Shift": 0.5821560083375461, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6256781193490054, "Recall": 0.865, "F1 score": 0.7261280167890872, "PR_Thresholds": 0.5821560083375461, "PR_Thresholds_Shift": 0.5825178008612276, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6268115942028986, "Recall": 0.865, "F1 score": 0.726890756302521, "PR_Thresholds": 0.5825178008612276, "PR_Thresholds_Shift": 0.5826452871563088, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6279491833030852, "Recall": 0.865, "F1 score": 0.7276550998948476, "PR_Thresholds": 0.5826452871563088, "PR_Thresholds_Shift": 0.5835589757937321, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6290909090909091, "Recall": 0.865, "F1 score": 0.728421052631579, "PR_Thresholds": 0.5835589757937321, "PR_Thresholds_Shift": 0.5821231629763839, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6245487364620939, "Recall": 0.865, "F1 score": 0.7253668763102725, "PR_Thresholds": 0.5821231629763839, "PR_Thresholds_Shift": 0.5841823534489763, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6313868613138686, "Recall": 0.865, "F1 score": 0.729957805907173, "PR_Thresholds": 0.5841823534489763, "PR_Thresholds_Shift": 0.5845159135691514, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6325411334552102, "Recall": 0.865, "F1 score": 0.7307286166842661, "PR_Thresholds": 0.5845159135691514, "PR_Thresholds_Shift": 0.5846357118756996, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6336996336996337, "Recall": 0.865, "F1 score": 0.7315010570824525, "PR_Thresholds": 0.5846357118756996, "PR_Thresholds_Shift": 0.5853383690752172, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6360294117647058, "Recall": 0.865, "F1 score": 0.7330508474576272, "PR_Thresholds": 0.5853383690752172, "PR_Thresholds_Shift": 0.5850518497676727, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.634862385321101, "Recall": 0.865, "F1 score": 0.7322751322751322, "PR_Thresholds": 0.5850518497676727, "PR_Thresholds_Shift": 0.5836246464746508, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6302367941712204, "Recall": 0.865, "F1 score": 0.7291886195995785, "PR_Thresholds": 0.5836246464746508, "PR_Thresholds_Shift": 0.5818737434995638, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6241007194244604, "Recall": 0.8675, "F1 score": 0.7259414225941423, "PR_Thresholds": 0.5818737434995638, "PR_Thresholds_Shift": 0.5817480391934753, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6229802513464991, "Recall": 0.8675, "F1 score": 0.7251828631138976, "PR_Thresholds": 0.5817480391934753, "PR_Thresholds_Shift": 0.5808917428921123, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6218637992831542, "Recall": 0.8675, "F1 score": 0.7244258872651358, "PR_Thresholds": 0.5808917428921123, "PR_Thresholds_Shift": 0.5807876266890235, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6207513416815742, "Recall": 0.8675, "F1 score": 0.7236704900938478, "PR_Thresholds": 0.5807876266890235, "PR_Thresholds_Shift": 0.5807790532608943, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6196428571428572, "Recall": 0.8675, "F1 score": 0.7229166666666668, "PR_Thresholds": 0.5807790532608943, "PR_Thresholds_Shift": 0.5795645406225058, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6159292035398231, "Recall": 0.87, "F1 score": 0.7212435233160622, "PR_Thresholds": 0.5795645406225058, "PR_Thresholds_Shift": 0.579644721541763, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6170212765957447, "Recall": 0.87, "F1 score": 0.7219917012448132, "PR_Thresholds": 0.579644721541763, "PR_Thresholds_Shift": 0.5803329938807218, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6192170818505338, "Recall": 0.87, "F1 score": 0.7234927234927234, "PR_Thresholds": 0.5803329938807218, "PR_Thresholds_Shift": 0.5805850916002013, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6203208556149733, "Recall": 0.87, "F1 score": 0.7242455775234131, "PR_Thresholds": 0.5805850916002013, "PR_Thresholds_Shift": 0.5797535496221556, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6181172291296625, "Recall": 0.87, "F1 score": 0.7227414330218068, "PR_Thresholds": 0.5797535496221556, "PR_Thresholds_Shift": 0.5794752129444094, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6166077738515902, "Recall": 0.8725, "F1 score": 0.7225672877846792, "PR_Thresholds": 0.5794752129444094, "PR_Thresholds_Shift": 0.5793406418874398, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6155202821869489, "Recall": 0.8725, "F1 score": 0.7218200620475698, "PR_Thresholds": 0.5793406418874398, "PR_Thresholds_Shift": 0.5792312281243427, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6144366197183099, "Recall": 0.8725, "F1 score": 0.7210743801652892, "PR_Thresholds": 0.5792312281243427, "PR_Thresholds_Shift": 0.5738624387891716, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5972696245733788, "Recall": 0.875, "F1 score": 0.7099391480730224, "PR_Thresholds": 0.5738624387891716, "PR_Thresholds_Shift": 0.574671940706529, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.603448275862069, "Recall": 0.875, "F1 score": 0.7142857142857142, "PR_Thresholds": 0.574671940706529, "PR_Thresholds_Shift": 0.5740721891375292, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5982905982905983, "Recall": 0.875, "F1 score": 0.7106598984771574, "PR_Thresholds": 0.5740721891375292, "PR_Thresholds_Shift": 0.5744075908147296, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5993150684931506, "Recall": 0.875, "F1 score": 0.7113821138211383, "PR_Thresholds": 0.5744075908147296, "PR_Thresholds_Shift": 0.5745922050514338, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6003430531732419, "Recall": 0.875, "F1 score": 0.7121057985757884, "PR_Thresholds": 0.5745922050514338, "PR_Thresholds_Shift": 0.574621373537658, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6013745704467354, "Recall": 0.875, "F1 score": 0.7128309572301426, "PR_Thresholds": 0.574621373537658, "PR_Thresholds_Shift": 0.5746690565498749, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6024096385542169, "Recall": 0.875, "F1 score": 0.7135575942915393, "PR_Thresholds": 0.5746690565498749, "PR_Thresholds_Shift": 0.5747637961085375, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6044905008635578, "Recall": 0.875, "F1 score": 0.7150153217568946, "PR_Thresholds": 0.5747637961085375, "PR_Thresholds_Shift": 0.5784879436277198, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6140350877192983, "Recall": 0.875, "F1 score": 0.7216494845360825, "PR_Thresholds": 0.5784879436277198, "PR_Thresholds_Shift": 0.5754607238721762, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6065857885615251, "Recall": 0.875, "F1 score": 0.7164790174002047, "PR_Thresholds": 0.5754607238721762, "PR_Thresholds_Shift": 0.5754811087458356, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6076388888888888, "Recall": 0.875, "F1 score": 0.7172131147540982, "PR_Thresholds": 0.5754811087458356, "PR_Thresholds_Shift": 0.5756596498512376, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6086956521739131, "Recall": 0.875, "F1 score": 0.717948717948718, "PR_Thresholds": 0.5756596498512376, "PR_Thresholds_Shift": 0.5764937011501465, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6097560975609756, "Recall": 0.875, "F1 score": 0.7186858316221766, "PR_Thresholds": 0.5764937011501465, "PR_Thresholds_Shift": 0.5768919479995552, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6108202443280978, "Recall": 0.875, "F1 score": 0.7194244604316548, "PR_Thresholds": 0.5768919479995552, "PR_Thresholds_Shift": 0.5776926155350697, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6118881118881119, "Recall": 0.875, "F1 score": 0.720164609053498, "PR_Thresholds": 0.5776926155350697, "PR_Thresholds_Shift": 0.5784417608071368, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6129597197898424, "Recall": 0.875, "F1 score": 0.7209062821833163, "PR_Thresholds": 0.5784417608071368, "PR_Thresholds_Shift": 0.5786908342914868, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6151142355008787, "Recall": 0.875, "F1 score": 0.7223942208462333, "PR_Thresholds": 0.5786908342914868, "PR_Thresholds_Shift": 0.5754416546971797, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.6055363321799307, "Recall": 0.875, "F1 score": 0.7157464212678937, "PR_Thresholds": 0.5754416546971797, "PR_Thresholds_Shift": 0.5734439275111005, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5979557069846678, "Recall": 0.8775, "F1 score": 0.7112462006079027, "PR_Thresholds": 0.5734439275111005, "PR_Thresholds_Shift": 0.5731878808708158, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5986394557823129, "Recall": 0.88, "F1 score": 0.7125506072874493, "PR_Thresholds": 0.5731878808708158, "PR_Thresholds_Shift": 0.5691845429323532, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5863787375415282, "Recall": 0.8825, "F1 score": 0.7045908183632735, "PR_Thresholds": 0.5691845429323532, "PR_Thresholds_Shift": 0.5701875845982342, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5873544093178037, "Recall": 0.8825, "F1 score": 0.7052947052947053, "PR_Thresholds": 0.5701875845982342, "PR_Thresholds_Shift": 0.5705307431316367, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5883333333333334, "Recall": 0.8825, "F1 score": 0.7060000000000001, "PR_Thresholds": 0.5705307431316367, "PR_Thresholds_Shift": 0.5709333989929274, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5893155258764607, "Recall": 0.8825, "F1 score": 0.7067067067067067, "PR_Thresholds": 0.5709333989929274, "PR_Thresholds_Shift": 0.5709352552053742, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5903010033444817, "Recall": 0.8825, "F1 score": 0.7074148296593187, "PR_Thresholds": 0.5709352552053742, "PR_Thresholds_Shift": 0.5712617425944186, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5912897822445561, "Recall": 0.8825, "F1 score": 0.708124373119358, "PR_Thresholds": 0.5712617425944186, "PR_Thresholds_Shift": 0.571940194990712, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5942760942760943, "Recall": 0.8825, "F1 score": 0.7102615694164991, "PR_Thresholds": 0.571940194990712, "PR_Thresholds_Shift": 0.5716638839349508, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5932773109243697, "Recall": 0.8825, "F1 score": 0.7095477386934673, "PR_Thresholds": 0.5716638839349508, "PR_Thresholds_Shift": 0.5721907934294622, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5952782462057336, "Recall": 0.8825, "F1 score": 0.7109768378650554, "PR_Thresholds": 0.5721907934294622, "PR_Thresholds_Shift": 0.5724119184723867, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5962837837837838, "Recall": 0.8825, "F1 score": 0.7116935483870968, "PR_Thresholds": 0.5724119184723867, "PR_Thresholds_Shift": 0.5724691811306244, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5972927241962775, "Recall": 0.8825, "F1 score": 0.7124117053481334, "PR_Thresholds": 0.5724691811306244, "PR_Thresholds_Shift": 0.5726447476795878, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5983050847457627, "Recall": 0.8825, "F1 score": 0.7131313131313133, "PR_Thresholds": 0.5726447476795878, "PR_Thresholds_Shift": 0.5726995408059514, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.599320882852292, "Recall": 0.8825, "F1 score": 0.7138523761375125, "PR_Thresholds": 0.5726995408059514, "PR_Thresholds_Shift": 0.5713218683708123, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5922818791946308, "Recall": 0.8825, "F1 score": 0.7088353413654618, "PR_Thresholds": 0.5713218683708123, "PR_Thresholds_Shift": 0.56895804159976, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5870646766169154, "Recall": 0.885, "F1 score": 0.7058823529411764, "PR_Thresholds": 0.56895804159976, "PR_Thresholds_Shift": 0.5682148455977049, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5860927152317881, "Recall": 0.885, "F1 score": 0.7051792828685258, "PR_Thresholds": 0.5682148455977049, "PR_Thresholds_Shift": 0.5679443875483061, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5851239669421487, "Recall": 0.885, "F1 score": 0.7044776119402985, "PR_Thresholds": 0.5679443875483061, "PR_Thresholds_Shift": 0.5676543603371326, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5858085808580858, "Recall": 0.8875, "F1 score": 0.7057654075546719, "PR_Thresholds": 0.5676543603371326, "PR_Thresholds_Shift": 0.5671423585973858, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.586490939044481, "Recall": 0.89, "F1 score": 0.7070506454816287, "PR_Thresholds": 0.5671423585973858, "PR_Thresholds_Shift": 0.5670089313104723, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5855263157894737, "Recall": 0.89, "F1 score": 0.7063492063492065, "PR_Thresholds": 0.5670089313104723, "PR_Thresholds_Shift": 0.5656729572756604, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5842880523731587, "Recall": 0.8925, "F1 score": 0.7062314540059347, "PR_Thresholds": 0.5656729572756604, "PR_Thresholds_Shift": 0.5651487793516139, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5833333333333334, "Recall": 0.8925, "F1 score": 0.7055335968379447, "PR_Thresholds": 0.5651487793516139, "PR_Thresholds_Shift": 0.5667462210248113, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5862068965517241, "Recall": 0.8925, "F1 score": 0.7076313181367689, "PR_Thresholds": 0.5667462210248113, "PR_Thresholds_Shift": 0.5656807003812658, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5852459016393443, "Recall": 0.8925, "F1 score": 0.706930693069307, "PR_Thresholds": 0.5656807003812658, "PR_Thresholds_Shift": 0.5646245905346906, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5840130505709625, "Recall": 0.895, "F1 score": 0.7068114511352418, "PR_Thresholds": 0.5646245905346906, "PR_Thresholds_Shift": 0.5614918928607965, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5700636942675159, "Recall": 0.895, "F1 score": 0.6964980544747081, "PR_Thresholds": 0.5614918928607965, "PR_Thresholds_Shift": 0.5619451486808265, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5709728867623605, "Recall": 0.895, "F1 score": 0.697176241480039, "PR_Thresholds": 0.5619451486808265, "PR_Thresholds_Shift": 0.5620720335911009, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5718849840255591, "Recall": 0.895, "F1 score": 0.6978557504873294, "PR_Thresholds": 0.5620720335911009, "PR_Thresholds_Shift": 0.5622898110685808, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5728, "Recall": 0.895, "F1 score": 0.6985365853658536, "PR_Thresholds": 0.5622898110685808, "PR_Thresholds_Shift": 0.5623643987433502, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5737179487179487, "Recall": 0.895, "F1 score": 0.69921875, "PR_Thresholds": 0.5623643987433502, "PR_Thresholds_Shift": 0.5624190507997173, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5746388443017657, "Recall": 0.895, "F1 score": 0.6999022482893452, "PR_Thresholds": 0.5624190507997173, "PR_Thresholds_Shift": 0.5624755195605494, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5755627009646302, "Recall": 0.895, "F1 score": 0.700587084148728, "PR_Thresholds": 0.5624755195605494, "PR_Thresholds_Shift": 0.5627860546439991, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5774193548387097, "Recall": 0.895, "F1 score": 0.7019607843137255, "PR_Thresholds": 0.5627860546439991, "PR_Thresholds_Shift": 0.5638661189622727, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5783521809369951, "Recall": 0.895, "F1 score": 0.7026496565260059, "PR_Thresholds": 0.5638661189622727, "PR_Thresholds_Shift": 0.5642324668094609, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5792880258899676, "Recall": 0.895, "F1 score": 0.7033398821218075, "PR_Thresholds": 0.5642324668094609, "PR_Thresholds_Shift": 0.5642692098498252, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.580226904376013, "Recall": 0.895, "F1 score": 0.7040314650934121, "PR_Thresholds": 0.5642692098498252, "PR_Thresholds_Shift": 0.5644573158216041, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5811688311688312, "Recall": 0.895, "F1 score": 0.7047244094488189, "PR_Thresholds": 0.5644573158216041, "PR_Thresholds_Shift": 0.5644770558471498, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5821138211382114, "Recall": 0.895, "F1 score": 0.7054187192118229, "PR_Thresholds": 0.5644770558471498, "PR_Thresholds_Shift": 0.5644970503220252, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5830618892508144, "Recall": 0.895, "F1 score": 0.7061143984220908, "PR_Thresholds": 0.5644970503220252, "PR_Thresholds_Shift": 0.5625203447176962, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5764895330112721, "Recall": 0.895, "F1 score": 0.7012732615083253, "PR_Thresholds": 0.5625203447176962, "PR_Thresholds_Shift": 0.561290751082502, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5707472178060413, "Recall": 0.8975, "F1 score": 0.6977648202137998, "PR_Thresholds": 0.561290751082502, "PR_Thresholds_Shift": 0.5599104110831883, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5669291338582677, "Recall": 0.9, "F1 score": 0.6956521739130436, "PR_Thresholds": 0.5599104110831883, "PR_Thresholds_Shift": 0.5594331955471943, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5660377358490566, "Recall": 0.9, "F1 score": 0.6949806949806949, "PR_Thresholds": 0.5594331955471943, "PR_Thresholds_Shift": 0.559991584182746, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5678233438485805, "Recall": 0.9, "F1 score": 0.6963249516441007, "PR_Thresholds": 0.559991584182746, "PR_Thresholds_Shift": 0.5593981841686221, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.565149136577708, "Recall": 0.9, "F1 score": 0.6943105110896818, "PR_Thresholds": 0.5593981841686221, "PR_Thresholds_Shift": 0.5601678978805784, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.569620253164557, "Recall": 0.9, "F1 score": 0.6976744186046512, "PR_Thresholds": 0.5601678978805784, "PR_Thresholds_Shift": 0.5604412587484893, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5705229793977813, "Recall": 0.9, "F1 score": 0.6983511154219205, "PR_Thresholds": 0.5604412587484893, "PR_Thresholds_Shift": 0.5601546474679897, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5687203791469194, "Recall": 0.9, "F1 score": 0.6969990319457889, "PR_Thresholds": 0.5601546474679897, "PR_Thresholds_Shift": 0.5605886044283144, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5714285714285714, "Recall": 0.9, "F1 score": 0.6990291262135921, "PR_Thresholds": 0.5605886044283144, "PR_Thresholds_Shift": 0.5592711903961902, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5658307210031348, "Recall": 0.9025, "F1 score": 0.6955684007707129, "PR_Thresholds": 0.5592711903961902, "PR_Thresholds_Shift": 0.5591206187853603, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5665101721439749, "Recall": 0.905, "F1 score": 0.6968238691049086, "PR_Thresholds": 0.5591206187853603, "PR_Thresholds_Shift": 0.5580705381670888, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5627906976744186, "Recall": 0.9075, "F1 score": 0.6947368421052632, "PR_Thresholds": 0.5580705381670888, "PR_Thresholds_Shift": 0.5584750039136345, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5645412130637636, "Recall": 0.9075, "F1 score": 0.6960690316395015, "PR_Thresholds": 0.5584750039136345, "PR_Thresholds_Shift": 0.5581436362407428, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5636645962732919, "Recall": 0.9075, "F1 score": 0.6954022988505746, "PR_Thresholds": 0.5581436362407428, "PR_Thresholds_Shift": 0.5589690018875659, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5663026521060842, "Recall": 0.9075, "F1 score": 0.6974063400576368, "PR_Thresholds": 0.5589690018875659, "PR_Thresholds_Shift": 0.5590879385494016, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5671875, "Recall": 0.9075, "F1 score": 0.698076923076923, "PR_Thresholds": 0.5590879385494016, "PR_Thresholds_Shift": 0.5587105918650344, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5654205607476636, "Recall": 0.9075, "F1 score": 0.6967370441458732, "PR_Thresholds": 0.5587105918650344, "PR_Thresholds_Shift": 0.5580326705027081, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5634674922600619, "Recall": 0.91, "F1 score": 0.6959847036328872, "PR_Thresholds": 0.5580326705027081, "PR_Thresholds_Shift": 0.5574182908247487, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5625965996908809, "Recall": 0.91, "F1 score": 0.6953199617956064, "PR_Thresholds": 0.5574182908247487, "PR_Thresholds_Shift": 0.5508491641397198, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5439642324888226, "Recall": 0.9125, "F1 score": 0.6816059757236228, "PR_Thresholds": 0.5508491641397198, "PR_Thresholds_Shift": 0.5523197367523364, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5472263868065967, "Recall": 0.9125, "F1 score": 0.6841611996251171, "PR_Thresholds": 0.5523197367523364, "PR_Thresholds_Shift": 0.5516840556533182, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5464071856287425, "Recall": 0.9125, "F1 score": 0.6835205992509362, "PR_Thresholds": 0.5516840556533182, "PR_Thresholds_Shift": 0.5512586802202679, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5455904334828101, "Recall": 0.9125, "F1 score": 0.6828811973807296, "PR_Thresholds": 0.5512586802202679, "PR_Thresholds_Shift": 0.550880130585057, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5447761194029851, "Recall": 0.9125, "F1 score": 0.6822429906542057, "PR_Thresholds": 0.550880130585057, "PR_Thresholds_Shift": 0.5507458490184205, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5431547619047619, "Recall": 0.9125, "F1 score": 0.6809701492537312, "PR_Thresholds": 0.5507458490184205, "PR_Thresholds_Shift": 0.5498295209708186, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5375552282768777, "Recall": 0.9125, "F1 score": 0.6765523632993512, "PR_Thresholds": 0.5498295209708186, "PR_Thresholds_Shift": 0.5504675390707389, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5415430267062314, "Recall": 0.9125, "F1 score": 0.6797020484171322, "PR_Thresholds": 0.5504675390707389, "PR_Thresholds_Shift": 0.5503001821747646, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5407407407407407, "Recall": 0.9125, "F1 score": 0.6790697674418604, "PR_Thresholds": 0.5503001821747646, "PR_Thresholds_Shift": 0.5502666433592609, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5399408284023669, "Recall": 0.9125, "F1 score": 0.6784386617100372, "PR_Thresholds": 0.5502666433592609, "PR_Thresholds_Shift": 0.5501632411067845, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5391432791728212, "Recall": 0.9125, "F1 score": 0.6778087279480037, "PR_Thresholds": 0.5501632411067845, "PR_Thresholds_Shift": 0.5500958764240199, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5383480825958702, "Recall": 0.9125, "F1 score": 0.6771799628942485, "PR_Thresholds": 0.5500958764240199, "PR_Thresholds_Shift": 0.5524241772262578, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5480480480480481, "Recall": 0.9125, "F1 score": 0.6848030018761726, "PR_Thresholds": 0.5524241772262578, "PR_Thresholds_Shift": 0.5505413698289486, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5423476968796433, "Recall": 0.9125, "F1 score": 0.6803355079217148, "PR_Thresholds": 0.5505413698289486, "PR_Thresholds_Shift": 0.5528960085623309, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5488721804511278, "Recall": 0.9125, "F1 score": 0.6854460093896715, "PR_Thresholds": 0.5528960085623309, "PR_Thresholds_Shift": 0.5561753766537229, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5606758832565284, "Recall": 0.9125, "F1 score": 0.6945765937202665, "PR_Thresholds": 0.5561753766537229, "PR_Thresholds_Shift": 0.5534904031428242, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.55052790346908, "Recall": 0.9125, "F1 score": 0.6867356538099718, "PR_Thresholds": 0.5534904031428242, "PR_Thresholds_Shift": 0.5567841624238794, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5632716049382716, "Recall": 0.9125, "F1 score": 0.6965648854961832, "PR_Thresholds": 0.5567841624238794, "PR_Thresholds_Shift": 0.5567780337808268, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5624036979969184, "Recall": 0.9125, "F1 score": 0.6959008579599619, "PR_Thresholds": 0.5567780337808268, "PR_Thresholds_Shift": 0.5564208129682799, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5615384615384615, "Recall": 0.9125, "F1 score": 0.6952380952380953, "PR_Thresholds": 0.5564208129682799, "PR_Thresholds_Shift": 0.5532131597581476, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5496987951807228, "Recall": 0.9125, "F1 score": 0.6860902255639096, "PR_Thresholds": 0.5532131597581476, "PR_Thresholds_Shift": 0.5556961403001335, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5598159509202454, "Recall": 0.9125, "F1 score": 0.6939163498098859, "PR_Thresholds": 0.5556961403001335, "PR_Thresholds_Shift": 0.5554202835078657, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.55895865237366, "Recall": 0.9125, "F1 score": 0.6932573599240265, "PR_Thresholds": 0.5554202835078657, "PR_Thresholds_Shift": 0.5553833797828027, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5572519083969466, "Recall": 0.9125, "F1 score": 0.6919431279620853, "PR_Thresholds": 0.5553833797828027, "PR_Thresholds_Shift": 0.5553982618690273, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5581039755351682, "Recall": 0.9125, "F1 score": 0.6925996204933585, "PR_Thresholds": 0.5553982618690273, "PR_Thresholds_Shift": 0.5550600467428669, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5555555555555556, "Recall": 0.9125, "F1 score": 0.6906338694418165, "PR_Thresholds": 0.5550600467428669, "PR_Thresholds_Shift": 0.5548273872677357, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5547112462006079, "Recall": 0.9125, "F1 score": 0.6899810964083176, "PR_Thresholds": 0.5548273872677357, "PR_Thresholds_Shift": 0.5546707139177686, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5538694992412747, "Recall": 0.9125, "F1 score": 0.6893295561850802, "PR_Thresholds": 0.5546707139177686, "PR_Thresholds_Shift": 0.5545906043773277, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.553030303030303, "Recall": 0.9125, "F1 score": 0.6886792452830189, "PR_Thresholds": 0.5545906043773277, "PR_Thresholds_Shift": 0.5544634695031837, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5521936459909228, "Recall": 0.9125, "F1 score": 0.6880301602262017, "PR_Thresholds": 0.5544634695031837, "PR_Thresholds_Shift": 0.5535629045872081, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5513595166163142, "Recall": 0.9125, "F1 score": 0.687382297551789, "PR_Thresholds": 0.5535629045872081, "PR_Thresholds_Shift": 0.5553390681325374, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5564024390243902, "Recall": 0.9125, "F1 score": 0.6912878787878788, "PR_Thresholds": 0.5553390681325374, "PR_Thresholds_Shift": 0.5465458502252887, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5258620689655172, "Recall": 0.915, "F1 score": 0.6678832116788321, "PR_Thresholds": 0.5465458502252887, "PR_Thresholds_Shift": 0.5467312927043727, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5273775216138329, "Recall": 0.915, "F1 score": 0.6691042047531992, "PR_Thresholds": 0.5467312927043727, "PR_Thresholds_Shift": 0.5466543146578213, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5266187050359712, "Recall": 0.915, "F1 score": 0.6684931506849315, "PR_Thresholds": 0.5466543146578213, "PR_Thresholds_Shift": 0.5463775824946744, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5251076040172167, "Recall": 0.915, "F1 score": 0.6672743846855059, "PR_Thresholds": 0.5463775824946744, "PR_Thresholds_Shift": 0.5467535780035886, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5281385281385281, "Recall": 0.915, "F1 score": 0.6697163769441903, "PR_Thresholds": 0.5467535780035886, "PR_Thresholds_Shift": 0.5458029788983029, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5236051502145923, "Recall": 0.915, "F1 score": 0.6660600545950865, "PR_Thresholds": 0.5458029788983029, "PR_Thresholds_Shift": 0.5457589710405437, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5228571428571429, "Recall": 0.915, "F1 score": 0.6654545454545455, "PR_Thresholds": 0.5457589710405437, "PR_Thresholds_Shift": 0.5454036076499886, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5221112696148359, "Recall": 0.915, "F1 score": 0.6648501362397818, "PR_Thresholds": 0.5454036076499886, "PR_Thresholds_Shift": 0.5459093233247019, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5243553008595988, "Recall": 0.915, "F1 score": 0.6666666666666666, "PR_Thresholds": 0.5459093233247019, "PR_Thresholds_Shift": 0.5471267150102488, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5289017341040463, "Recall": 0.915, "F1 score": 0.6703296703296704, "PR_Thresholds": 0.5471267150102488, "PR_Thresholds_Shift": 0.5472760791314675, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5312046444121916, "Recall": 0.915, "F1 score": 0.672176308539945, "PR_Thresholds": 0.5472760791314675, "PR_Thresholds_Shift": 0.5472249394190876, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5304347826086957, "Recall": 0.915, "F1 score": 0.671559633027523, "PR_Thresholds": 0.5472249394190876, "PR_Thresholds_Shift": 0.5471529635570151, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5296671490593343, "Recall": 0.915, "F1 score": 0.6709440879926674, "PR_Thresholds": 0.5471529635570151, "PR_Thresholds_Shift": 0.549646792425448, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5374449339207048, "Recall": 0.915, "F1 score": 0.6771507863089731, "PR_Thresholds": 0.549646792425448, "PR_Thresholds_Shift": 0.548858511760476, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5358711566617862, "Recall": 0.915, "F1 score": 0.6759002770083102, "PR_Thresholds": 0.548858511760476, "PR_Thresholds_Shift": 0.548593758789267, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5350877192982456, "Recall": 0.915, "F1 score": 0.6752767527675276, "PR_Thresholds": 0.548593758789267, "PR_Thresholds_Shift": 0.5491388801976405, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5366568914956011, "Recall": 0.915, "F1 score": 0.6765249537892791, "PR_Thresholds": 0.5491388801976405, "PR_Thresholds_Shift": 0.5479464342088751, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5335276967930029, "Recall": 0.915, "F1 score": 0.6740331491712708, "PR_Thresholds": 0.5479464342088751, "PR_Thresholds_Shift": 0.5477369484484966, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5327510917030568, "Recall": 0.915, "F1 score": 0.6734130634774609, "PR_Thresholds": 0.5477369484484966, "PR_Thresholds_Shift": 0.547404890556732, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5319767441860465, "Recall": 0.915, "F1 score": 0.6727941176470589, "PR_Thresholds": 0.547404890556732, "PR_Thresholds_Shift": 0.5496896797929782, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.538235294117647, "Recall": 0.915, "F1 score": 0.6777777777777778, "PR_Thresholds": 0.5496896797929782, "PR_Thresholds_Shift": 0.5480999364855111, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5343065693430656, "Recall": 0.915, "F1 score": 0.6746543778801843, "PR_Thresholds": 0.5480999364855111, "PR_Thresholds_Shift": 0.5409493906090485, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5161744022503516, "Recall": 0.9175, "F1 score": 0.6606660666066606, "PR_Thresholds": 0.5409493906090485, "PR_Thresholds_Shift": 0.5400783458782376, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5125698324022346, "Recall": 0.9175, "F1 score": 0.6577060931899641, "PR_Thresholds": 0.5400783458782376, "PR_Thresholds_Shift": 0.5401997009976907, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5140056022408963, "Recall": 0.9175, "F1 score": 0.6588868940754039, "PR_Thresholds": 0.5401997009976907, "PR_Thresholds_Shift": 0.5406403720685329, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.514726507713885, "Recall": 0.9175, "F1 score": 0.6594788858939802, "PR_Thresholds": 0.5406403720685329, "PR_Thresholds_Shift": 0.5407900409327177, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5154494382022472, "Recall": 0.9175, "F1 score": 0.6600719424460432, "PR_Thresholds": 0.5407900409327177, "PR_Thresholds_Shift": 0.5424318257160718, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5169014084507042, "Recall": 0.9175, "F1 score": 0.6612612612612613, "PR_Thresholds": 0.5424318257160718, "PR_Thresholds_Shift": 0.5401105409112252, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5132867132867133, "Recall": 0.9175, "F1 score": 0.6582959641255606, "PR_Thresholds": 0.5401105409112252, "PR_Thresholds_Shift": 0.5425506686557571, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.518361581920904, "Recall": 0.9175, "F1 score": 0.6624548736462095, "PR_Thresholds": 0.5425506686557571, "PR_Thresholds_Shift": 0.5433109376710965, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5190947666195191, "Recall": 0.9175, "F1 score": 0.6630532971996387, "PR_Thresholds": 0.5433109376710965, "PR_Thresholds_Shift": 0.5435093091281232, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5198300283286119, "Recall": 0.9175, "F1 score": 0.6636528028933093, "PR_Thresholds": 0.5435093091281232, "PR_Thresholds_Shift": 0.5435736173743587, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5205673758865248, "Recall": 0.9175, "F1 score": 0.6642533936651583, "PR_Thresholds": 0.5435736173743587, "PR_Thresholds_Shift": 0.5439199927956585, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5213068181818182, "Recall": 0.9175, "F1 score": 0.6648550724637681, "PR_Thresholds": 0.5439199927956585, "PR_Thresholds_Shift": 0.5452492009962784, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5227920227920227, "Recall": 0.9175, "F1 score": 0.6660617059891106, "PR_Thresholds": 0.5452492009962784, "PR_Thresholds_Shift": 0.5444385619638871, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5220483641536273, "Recall": 0.9175, "F1 score": 0.6654578422484134, "PR_Thresholds": 0.5444385619638871, "PR_Thresholds_Shift": 0.5425486218563168, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5176304654442877, "Recall": 0.9175, "F1 score": 0.6618575293056808, "PR_Thresholds": 0.5425486218563168, "PR_Thresholds_Shift": 0.5400339113236888, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5132496513249651, "Recall": 0.92, "F1 score": 0.6589077887197852, "PR_Thresholds": 0.5400339113236888, "PR_Thresholds_Shift": 0.5393943093020921, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5125348189415042, "Recall": 0.92, "F1 score": 0.6583184257602862, "PR_Thresholds": 0.5393943093020921, "PR_Thresholds_Shift": 0.5391006938708856, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5118219749652295, "Recall": 0.92, "F1 score": 0.6577301161751564, "PR_Thresholds": 0.5391006938708856, "PR_Thresholds_Shift": 0.539061936432343, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5111111111111111, "Recall": 0.92, "F1 score": 0.6571428571428571, "PR_Thresholds": 0.539061936432343, "PR_Thresholds_Shift": 0.5387569064540573, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5117891816920943, "Recall": 0.9225, "F1 score": 0.6583407671721676, "PR_Thresholds": 0.5387569064540573, "PR_Thresholds_Shift": 0.5386982011531668, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5110803324099723, "Recall": 0.9225, "F1 score": 0.6577540106951871, "PR_Thresholds": 0.5386982011531668, "PR_Thresholds_Shift": 0.5380655042728173, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.511049723756906, "Recall": 0.925, "F1 score": 0.6583629893238434, "PR_Thresholds": 0.5380655042728173, "PR_Thresholds_Shift": 0.5381548066876466, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5117565698478561, "Recall": 0.925, "F1 score": 0.6589492430988424, "PR_Thresholds": 0.5381548066876466, "PR_Thresholds_Shift": 0.5324547900302204, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4933510638297872, "Recall": 0.9275, "F1 score": 0.6440972222222222, "PR_Thresholds": 0.5324547900302204, "PR_Thresholds_Shift": 0.5324913005611004, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4940079893475366, "Recall": 0.9275, "F1 score": 0.6446568201563857, "PR_Thresholds": 0.5324913005611004, "PR_Thresholds_Shift": 0.5328098136577204, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.49466666666666664, "Recall": 0.9275, "F1 score": 0.6452173913043479, "PR_Thresholds": 0.5328098136577204, "PR_Thresholds_Shift": 0.5328410277964275, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4953271028037383, "Recall": 0.9275, "F1 score": 0.6457789382071366, "PR_Thresholds": 0.5328410277964275, "PR_Thresholds_Shift": 0.5342286290599665, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5006747638326585, "Recall": 0.9275, "F1 score": 0.6503067484662576, "PR_Thresholds": 0.5342286290599665, "PR_Thresholds_Shift": 0.5330540313732599, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4959893048128342, "Recall": 0.9275, "F1 score": 0.6463414634146342, "PR_Thresholds": 0.5330540313732599, "PR_Thresholds_Shift": 0.5331392150647333, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4966532797858099, "Recall": 0.9275, "F1 score": 0.6469049694856147, "PR_Thresholds": 0.5331392150647333, "PR_Thresholds_Shift": 0.5331559798263401, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4973190348525469, "Recall": 0.9275, "F1 score": 0.6474694589877835, "PR_Thresholds": 0.5331559798263401, "PR_Thresholds_Shift": 0.5331773375540989, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.49798657718120803, "Recall": 0.9275, "F1 score": 0.6480349344978166, "PR_Thresholds": 0.5331773375540989, "PR_Thresholds_Shift": 0.5336054998932538, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4986559139784946, "Recall": 0.9275, "F1 score": 0.6486013986013985, "PR_Thresholds": 0.5336054998932538, "PR_Thresholds_Shift": 0.5338842935519593, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4993270524899058, "Recall": 0.9275, "F1 score": 0.6491688538932633, "PR_Thresholds": 0.5338842935519593, "PR_Thresholds_Shift": 0.5340186990068337, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5, "Recall": 0.9275, "F1 score": 0.649737302977233, "PR_Thresholds": 0.5340186990068337, "PR_Thresholds_Shift": 0.5343136068153496, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5013513513513513, "Recall": 0.9275, "F1 score": 0.650877192982456, "PR_Thresholds": 0.5343136068153496, "PR_Thresholds_Shift": 0.5372895579132612, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5089163237311386, "Recall": 0.9275, "F1 score": 0.6572187776793623, "PR_Thresholds": 0.5372895579132612, "PR_Thresholds_Shift": 0.5353256933800908, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.502710027100271, "Recall": 0.9275, "F1 score": 0.6520210896309314, "PR_Thresholds": 0.5353256933800908, "PR_Thresholds_Shift": 0.5352514490344911, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5020297699594046, "Recall": 0.9275, "F1 score": 0.6514486391571553, "PR_Thresholds": 0.5352514490344911, "PR_Thresholds_Shift": 0.5380376677494079, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5117241379310344, "Recall": 0.9275, "F1 score": 0.6595555555555555, "PR_Thresholds": 0.5380376677494079, "PR_Thresholds_Shift": 0.5379175452316506, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5110192837465565, "Recall": 0.9275, "F1 score": 0.6589698046181173, "PR_Thresholds": 0.5379175452316506, "PR_Thresholds_Shift": 0.537551650134879, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5103163686382394, "Recall": 0.9275, "F1 score": 0.6583850931677019, "PR_Thresholds": 0.537551650134879, "PR_Thresholds_Shift": 0.5370888348284228, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5082191780821917, "Recall": 0.9275, "F1 score": 0.6566371681415928, "PR_Thresholds": 0.5370888348284228, "PR_Thresholds_Shift": 0.5369692564984052, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5075239398084815, "Recall": 0.9275, "F1 score": 0.65605658709107, "PR_Thresholds": 0.5369692564984052, "PR_Thresholds_Shift": 0.5373505798397491, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5096153846153846, "Recall": 0.9275, "F1 score": 0.6578014184397163, "PR_Thresholds": 0.5373505798397491, "PR_Thresholds_Shift": 0.5362756954456196, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5061391541609823, "Recall": 0.9275, "F1 score": 0.6548984995586938, "PR_Thresholds": 0.5362756954456196, "PR_Thresholds_Shift": 0.53577772331143, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5054495912806539, "Recall": 0.9275, "F1 score": 0.6543209876543209, "PR_Thresholds": 0.53577772331143, "PR_Thresholds_Shift": 0.535690666665409, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5047619047619047, "Recall": 0.9275, "F1 score": 0.6537444933920704, "PR_Thresholds": 0.535690666665409, "PR_Thresholds_Shift": 0.5355235714704596, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5040760869565217, "Recall": 0.9275, "F1 score": 0.653169014084507, "PR_Thresholds": 0.5355235714704596, "PR_Thresholds_Shift": 0.5354489140905208, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5033921302578019, "Recall": 0.9275, "F1 score": 0.65259454705365, "PR_Thresholds": 0.5354489140905208, "PR_Thresholds_Shift": 0.5365219694270271, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.5068306010928961, "Recall": 0.9275, "F1 score": 0.6554770318021201, "PR_Thresholds": 0.5365219694270271, "PR_Thresholds_Shift": 0.527415135389503, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4806201550387597, "Recall": 0.93, "F1 score": 0.6337308347529813, "PR_Thresholds": 0.527415135389503, "PR_Thresholds_Shift": 0.528840783973011, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4831168831168831, "Recall": 0.93, "F1 score": 0.6358974358974359, "PR_Thresholds": 0.528840783973011, "PR_Thresholds_Shift": 0.5287163322240255, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.48249027237354086, "Recall": 0.93, "F1 score": 0.6353543979504697, "PR_Thresholds": 0.5287163322240255, "PR_Thresholds_Shift": 0.5284263952221016, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.48186528497409326, "Recall": 0.93, "F1 score": 0.6348122866894198, "PR_Thresholds": 0.5284263952221016, "PR_Thresholds_Shift": 0.5280538333270222, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.48124191461837, "Recall": 0.93, "F1 score": 0.6342710997442456, "PR_Thresholds": 0.5280538333270222, "PR_Thresholds_Shift": 0.5269329145114882, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.48, "Recall": 0.93, "F1 score": 0.6331914893617021, "PR_Thresholds": 0.5269329145114882, "PR_Thresholds_Shift": 0.5289508635899524, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4837451235370611, "Recall": 0.93, "F1 score": 0.6364414029084688, "PR_Thresholds": 0.5289508635899524, "PR_Thresholds_Shift": 0.5259906132132135, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47876447876447875, "Recall": 0.93, "F1 score": 0.6321155480033984, "PR_Thresholds": 0.5259906132132135, "PR_Thresholds_Shift": 0.5256179801912703, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4781491002570694, "Recall": 0.93, "F1 score": 0.6315789473684211, "PR_Thresholds": 0.5256179801912703, "PR_Thresholds_Shift": 0.5254087454987579, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47753530166880614, "Recall": 0.93, "F1 score": 0.6310432569974554, "PR_Thresholds": 0.5254087454987579, "PR_Thresholds_Shift": 0.5253279327923024, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47692307692307695, "Recall": 0.93, "F1 score": 0.6305084745762712, "PR_Thresholds": 0.5253279327923024, "PR_Thresholds_Shift": 0.5245846923599773, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47631241997439183, "Recall": 0.93, "F1 score": 0.6299745977984759, "PR_Thresholds": 0.5245846923599773, "PR_Thresholds_Shift": 0.5267222980912034, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4793814432989691, "Recall": 0.93, "F1 score": 0.6326530612244898, "PR_Thresholds": 0.5267222980912034, "PR_Thresholds_Shift": 0.5291796660579171, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.484375, "Recall": 0.93, "F1 score": 0.636986301369863, "PR_Thresholds": 0.5291796660579171, "PR_Thresholds_Shift": 0.5318804734427311, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.49206349206349204, "Recall": 0.93, "F1 score": 0.643598615916955, "PR_Thresholds": 0.5318804734427311, "PR_Thresholds_Shift": 0.5292787874746314, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4856396866840731, "Recall": 0.93, "F1 score": 0.6380789022298455, "PR_Thresholds": 0.5292787874746314, "PR_Thresholds_Shift": 0.5291925877433232, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.485006518904824, "Recall": 0.93, "F1 score": 0.6375321336760926, "PR_Thresholds": 0.5291925877433232, "PR_Thresholds_Shift": 0.5320556126858745, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.493368700265252, "Recall": 0.93, "F1 score": 0.6447140381282496, "PR_Thresholds": 0.5320556126858745, "PR_Thresholds_Shift": 0.5319884415292367, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.49271523178807947, "Recall": 0.93, "F1 score": 0.6441558441558441, "PR_Thresholds": 0.5319884415292367, "PR_Thresholds_Shift": 0.5321095490208728, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4940239043824701, "Recall": 0.93, "F1 score": 0.645273200346921, "PR_Thresholds": 0.5321095490208728, "PR_Thresholds_Shift": 0.5314353247958565, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4914134742404227, "Recall": 0.93, "F1 score": 0.6430423509075195, "PR_Thresholds": 0.5314353247958565, "PR_Thresholds_Shift": 0.5304802710105235, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4901185770750988, "Recall": 0.93, "F1 score": 0.641932700603969, "PR_Thresholds": 0.5304802710105235, "PR_Thresholds_Shift": 0.5312845494927971, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.49076517150395776, "Recall": 0.93, "F1 score": 0.6424870466321244, "PR_Thresholds": 0.5312845494927971, "PR_Thresholds_Shift": 0.5301242815615953, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4888304862023653, "Recall": 0.93, "F1 score": 0.6408268733850129, "PR_Thresholds": 0.5301242815615953, "PR_Thresholds_Shift": 0.5299175712809587, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4881889763779528, "Recall": 0.93, "F1 score": 0.640275387263339, "PR_Thresholds": 0.5299175712809587, "PR_Thresholds_Shift": 0.5297471485762555, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4875491480996068, "Recall": 0.93, "F1 score": 0.6397248495270851, "PR_Thresholds": 0.5297471485762555, "PR_Thresholds_Shift": 0.5295913723848975, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4869109947643979, "Recall": 0.93, "F1 score": 0.6391752577319587, "PR_Thresholds": 0.5295913723848975, "PR_Thresholds_Shift": 0.5293051369413526, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.48627450980392156, "Recall": 0.93, "F1 score": 0.6386266094420601, "PR_Thresholds": 0.5293051369413526, "PR_Thresholds_Shift": 0.5304488845781247, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.48947368421052634, "Recall": 0.93, "F1 score": 0.6413793103448275, "PR_Thresholds": 0.5304488845781247, "PR_Thresholds_Shift": 0.5217606366755906, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4733502538071066, "Recall": 0.9325, "F1 score": 0.627946127946128, "PR_Thresholds": 0.5217606366755906, "PR_Thresholds_Shift": 0.5217518659299791, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47275031685678076, "Recall": 0.9325, "F1 score": 0.6274179983179142, "PR_Thresholds": 0.5217518659299791, "PR_Thresholds_Shift": 0.5224861136066468, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47395171537484115, "Recall": 0.9325, "F1 score": 0.628475147430497, "PR_Thresholds": 0.5224861136066468, "PR_Thresholds_Shift": 0.5228622307957352, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4751592356687898, "Recall": 0.9325, "F1 score": 0.629535864978903, "PR_Thresholds": 0.5228622307957352, "PR_Thresholds_Shift": 0.5230309780559057, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.475765306122449, "Recall": 0.9325, "F1 score": 0.6300675675675675, "PR_Thresholds": 0.5230309780559057, "PR_Thresholds_Shift": 0.5240393716208053, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4763729246487867, "Recall": 0.9325, "F1 score": 0.6306001690617075, "PR_Thresholds": 0.5240393716208053, "PR_Thresholds_Shift": 0.5242508628899861, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47698209718670076, "Recall": 0.9325, "F1 score": 0.6311336717428088, "PR_Thresholds": 0.5242508628899861, "PR_Thresholds_Shift": 0.5226036070174221, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47455470737913485, "Recall": 0.9325, "F1 score": 0.6290050590219225, "PR_Thresholds": 0.5226036070174221, "PR_Thresholds_Shift": 0.5215164071975753, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47341772151898737, "Recall": 0.935, "F1 score": 0.6285714285714286, "PR_Thresholds": 0.5215164071975753, "PR_Thresholds_Shift": 0.52102160718459, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47281921618204803, "Recall": 0.935, "F1 score": 0.6280436607892527, "PR_Thresholds": 0.52102160718459, "PR_Thresholds_Shift": 0.520901427438621, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4722222222222222, "Recall": 0.935, "F1 score": 0.6275167785234899, "PR_Thresholds": 0.520901427438621, "PR_Thresholds_Shift": 0.520878742541534, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47162673392181587, "Recall": 0.935, "F1 score": 0.6269907795473596, "PR_Thresholds": 0.520878742541534, "PR_Thresholds_Shift": 0.5207129952035385, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47103274559193953, "Recall": 0.935, "F1 score": 0.6264656616415412, "PR_Thresholds": 0.5207129952035385, "PR_Thresholds_Shift": 0.5206470089848763, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47044025157232705, "Recall": 0.935, "F1 score": 0.6259414225941423, "PR_Thresholds": 0.5206470089848763, "PR_Thresholds_Shift": 0.5192198192273823, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4669987546699875, "Recall": 0.9375, "F1 score": 0.6234413965087281, "PR_Thresholds": 0.5192198192273823, "PR_Thresholds_Shift": 0.5184783308281173, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4652605459057072, "Recall": 0.9375, "F1 score": 0.6218905472636816, "PR_Thresholds": 0.5184783308281173, "PR_Thresholds_Shift": 0.5185777056693536, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4658385093167702, "Recall": 0.9375, "F1 score": 0.6224066390041494, "PR_Thresholds": 0.5185777056693536, "PR_Thresholds_Shift": 0.5189366613667787, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4664179104477612, "Recall": 0.9375, "F1 score": 0.622923588039867, "PR_Thresholds": 0.5189366613667787, "PR_Thresholds_Shift": 0.5193897543559926, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46758104738154616, "Recall": 0.9375, "F1 score": 0.6239600665557404, "PR_Thresholds": 0.5193897543559926, "PR_Thresholds_Shift": 0.5201529037670167, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4699248120300752, "Recall": 0.9375, "F1 score": 0.6260434056761269, "PR_Thresholds": 0.5201529037670167, "PR_Thresholds_Shift": 0.5197270804173956, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46875, "Recall": 0.9375, "F1 score": 0.625, "PR_Thresholds": 0.5197270804173956, "PR_Thresholds_Shift": 0.5200178007126997, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4693366708385482, "Recall": 0.9375, "F1 score": 0.6255212677231026, "PR_Thresholds": 0.5200178007126997, "PR_Thresholds_Shift": 0.5204651233639821, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47110552763819097, "Recall": 0.9375, "F1 score": 0.6270903010033445, "PR_Thresholds": 0.5204651233639821, "PR_Thresholds_Shift": 0.5203562243738946, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.47051442910915936, "Recall": 0.9375, "F1 score": 0.6265664160401002, "PR_Thresholds": 0.5203562243738946, "PR_Thresholds_Shift": 0.5193976285824192, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4681647940074906, "Recall": 0.9375, "F1 score": 0.6244796003330557, "PR_Thresholds": 0.5193976285824192, "PR_Thresholds_Shift": 0.5179436454314521, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46592317224287483, "Recall": 0.94, "F1 score": 0.6230323115161558, "PR_Thresholds": 0.5179436454314521, "PR_Thresholds_Shift": 0.5176442696382496, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46534653465346537, "Recall": 0.94, "F1 score": 0.6225165562913908, "PR_Thresholds": 0.5176442696382496, "PR_Thresholds_Shift": 0.5161839205220682, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4647713226205192, "Recall": 0.94, "F1 score": 0.6220016542597188, "PR_Thresholds": 0.5161839205220682, "PR_Thresholds_Shift": 0.5160828927907307, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4641975308641975, "Recall": 0.94, "F1 score": 0.6214876033057851, "PR_Thresholds": 0.5160828927907307, "PR_Thresholds_Shift": 0.5153258152028879, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46200980392156865, "Recall": 0.9425, "F1 score": 0.6200657894736843, "PR_Thresholds": 0.5153258152028879, "PR_Thresholds_Shift": 0.5157292389503559, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4631449631449631, "Recall": 0.9425, "F1 score": 0.6210873146622735, "PR_Thresholds": 0.5157292389503559, "PR_Thresholds_Shift": 0.5156061342857363, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4625766871165644, "Recall": 0.9425, "F1 score": 0.6205761316872428, "PR_Thresholds": 0.5156061342857363, "PR_Thresholds_Shift": 0.5157674323457679, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4642857142857143, "Recall": 0.9425, "F1 score": 0.6221122112211221, "PR_Thresholds": 0.5157674323457679, "PR_Thresholds_Shift": 0.5158291511972002, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4648581997533909, "Recall": 0.9425, "F1 score": 0.6226259289843105, "PR_Thresholds": 0.5158291511972002, "PR_Thresholds_Shift": 0.5157623743450479, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46371463714637146, "Recall": 0.9425, "F1 score": 0.6215993404781534, "PR_Thresholds": 0.5157623743450479, "PR_Thresholds_Shift": 0.5151982751889475, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46266829865361075, "Recall": 0.945, "F1 score": 0.6211996713229252, "PR_Thresholds": 0.5151982751889475, "PR_Thresholds_Shift": 0.5148880497923065, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4621026894865526, "Recall": 0.945, "F1 score": 0.6206896551724137, "PR_Thresholds": 0.5148880497923065, "PR_Thresholds_Shift": 0.5148566242485031, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46153846153846156, "Recall": 0.945, "F1 score": 0.6201804757998359, "PR_Thresholds": 0.5148566242485031, "PR_Thresholds_Shift": 0.5118004100623033, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45280764635603343, "Recall": 0.9475, "F1 score": 0.6127728375101051, "PR_Thresholds": 0.5118004100623033, "PR_Thresholds_Shift": 0.511806897337013, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4533492822966507, "Recall": 0.9475, "F1 score": 0.6132686084142395, "PR_Thresholds": 0.511806897337013, "PR_Thresholds_Shift": 0.5130840528568755, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4566265060240964, "Recall": 0.9475, "F1 score": 0.6162601626016261, "PR_Thresholds": 0.5130840528568755, "PR_Thresholds_Shift": 0.5121598120603175, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45443645083932854, "Recall": 0.9475, "F1 score": 0.6142625607779578, "PR_Thresholds": 0.5121598120603175, "PR_Thresholds_Shift": 0.512393251973078, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4549819927971189, "Recall": 0.9475, "F1 score": 0.6147607461476075, "PR_Thresholds": 0.512393251973078, "PR_Thresholds_Shift": 0.5128084150889669, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45552884615384615, "Recall": 0.9475, "F1 score": 0.6152597402597403, "PR_Thresholds": 0.5128084150889669, "PR_Thresholds_Shift": 0.5128706798205447, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45607701564380265, "Recall": 0.9475, "F1 score": 0.6157595450852966, "PR_Thresholds": 0.5128706798205447, "PR_Thresholds_Shift": 0.5134568437126616, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4571773220747889, "Recall": 0.9475, "F1 score": 0.6167615947925141, "PR_Thresholds": 0.5134568437126616, "PR_Thresholds_Shift": 0.5120228276904455, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4538922155688623, "Recall": 0.9475, "F1 score": 0.6137651821862349, "PR_Thresholds": 0.5120228276904455, "PR_Thresholds_Shift": 0.5136490696758785, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45828295042321643, "Recall": 0.9475, "F1 score": 0.6177669111654441, "PR_Thresholds": 0.5136490696758785, "PR_Thresholds_Shift": 0.5139784924728381, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45883777239709445, "Recall": 0.9475, "F1 score": 0.6182707993474715, "PR_Thresholds": 0.5139784924728381, "PR_Thresholds_Shift": 0.5140800735686794, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4593939393939394, "Recall": 0.9475, "F1 score": 0.6187755102040816, "PR_Thresholds": 0.5140800735686794, "PR_Thresholds_Shift": 0.5143817136556612, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45995145631067963, "Recall": 0.9475, "F1 score": 0.6192810457516339, "PR_Thresholds": 0.5143817136556612, "PR_Thresholds_Shift": 0.514413377501422, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46051032806804376, "Recall": 0.9475, "F1 score": 0.6197874080130826, "PR_Thresholds": 0.514413377501422, "PR_Thresholds_Shift": 0.5147186072755905, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4610705596107056, "Recall": 0.9475, "F1 score": 0.6202945990180032, "PR_Thresholds": 0.5147186072755905, "PR_Thresholds_Shift": 0.5147343728358458, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46163215590742995, "Recall": 0.9475, "F1 score": 0.6208026208026208, "PR_Thresholds": 0.5147343728358458, "PR_Thresholds_Shift": 0.5148163946350337, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.46219512195121953, "Recall": 0.9475, "F1 score": 0.6213114754098361, "PR_Thresholds": 0.5148163946350337, "PR_Thresholds_Shift": 0.5135354376121812, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4577294685990338, "Recall": 0.9475, "F1 score": 0.6172638436482084, "PR_Thresholds": 0.5135354376121812, "PR_Thresholds_Shift": 0.5112285225316511, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4518430439952438, "Recall": 0.95, "F1 score": 0.6124093473005641, "PR_Thresholds": 0.5112285225316511, "PR_Thresholds_Shift": 0.5113297412888097, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45292014302741357, "Recall": 0.95, "F1 score": 0.6133979015334947, "PR_Thresholds": 0.5113297412888097, "PR_Thresholds_Shift": 0.5116846617647419, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45346062052505964, "Recall": 0.95, "F1 score": 0.6138933764135702, "PR_Thresholds": 0.5116846617647419, "PR_Thresholds_Shift": 0.5113271046553877, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4523809523809524, "Recall": 0.95, "F1 score": 0.6129032258064516, "PR_Thresholds": 0.5113271046553877, "PR_Thresholds_Shift": 0.5110234906468447, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4524940617577197, "Recall": 0.9525, "F1 score": 0.6135265700483092, "PR_Thresholds": 0.5110234906468447, "PR_Thresholds_Shift": 0.5109027354386102, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45195729537366547, "Recall": 0.9525, "F1 score": 0.6130329847144007, "PR_Thresholds": 0.5109027354386102, "PR_Thresholds_Shift": 0.5104453079546054, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4514218009478673, "Recall": 0.9525, "F1 score": 0.6125401929260451, "PR_Thresholds": 0.5104453079546054, "PR_Thresholds_Shift": 0.5095017508368747, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44835680751173707, "Recall": 0.955, "F1 score": 0.6102236421725239, "PR_Thresholds": 0.5095017508368747, "PR_Thresholds_Shift": 0.509283169292309, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.447831184056272, "Recall": 0.955, "F1 score": 0.6097366320830008, "PR_Thresholds": 0.509283169292309, "PR_Thresholds_Shift": 0.5096512747297406, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4488836662749706, "Recall": 0.955, "F1 score": 0.6107114308553158, "PR_Thresholds": 0.5096512747297406, "PR_Thresholds_Shift": 0.5097170120166298, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44941176470588234, "Recall": 0.955, "F1 score": 0.6112000000000001, "PR_Thresholds": 0.5097170120166298, "PR_Thresholds_Shift": 0.5101493996945426, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45047169811320753, "Recall": 0.955, "F1 score": 0.6121794871794871, "PR_Thresholds": 0.5101493996945426, "PR_Thresholds_Shift": 0.5101984227369188, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4510035419126328, "Recall": 0.955, "F1 score": 0.6126704089815558, "PR_Thresholds": 0.5101984227369188, "PR_Thresholds_Shift": 0.5102332663325513, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4515366430260047, "Recall": 0.955, "F1 score": 0.6131621187800963, "PR_Thresholds": 0.5102332663325513, "PR_Thresholds_Shift": 0.5098908952307436, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4499411071849234, "Recall": 0.955, "F1 score": 0.611689351481185, "PR_Thresholds": 0.5098908952307436, "PR_Thresholds_Shift": 0.5102443715924547, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.45207100591715976, "Recall": 0.955, "F1 score": 0.6136546184738956, "PR_Thresholds": 0.5102443715924547, "PR_Thresholds_Shift": 0.5086030289671524, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44534883720930235, "Recall": 0.9575, "F1 score": 0.607936507936508, "PR_Thresholds": 0.5086030289671524, "PR_Thresholds_Shift": 0.5090726819022988, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4484777517564403, "Recall": 0.9575, "F1 score": 0.6108452950558214, "PR_Thresholds": 0.5090726819022988, "PR_Thresholds_Shift": 0.5090469874552532, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.447953216374269, "Recall": 0.9575, "F1 score": 0.6103585657370518, "PR_Thresholds": 0.5090469874552532, "PR_Thresholds_Shift": 0.5088001253329067, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44742990654205606, "Recall": 0.9575, "F1 score": 0.6098726114649681, "PR_Thresholds": 0.5088001253329067, "PR_Thresholds_Shift": 0.5087628451720297, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4469078179696616, "Recall": 0.9575, "F1 score": 0.609387430389817, "PR_Thresholds": 0.5087628451720297, "PR_Thresholds_Shift": 0.5086316123645237, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44638694638694637, "Recall": 0.9575, "F1 score": 0.6089030206677265, "PR_Thresholds": 0.5086316123645237, "PR_Thresholds_Shift": 0.5086082363825832, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4458672875436554, "Recall": 0.9575, "F1 score": 0.6084193804606831, "PR_Thresholds": 0.5086082363825832, "PR_Thresholds_Shift": 0.5078857006224866, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4448315911730546, "Recall": 0.9575, "F1 score": 0.6074544012688342, "PR_Thresholds": 0.5078857006224866, "PR_Thresholds_Shift": 0.5042090128817727, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43885714285714283, "Recall": 0.96, "F1 score": 0.6023529411764705, "PR_Thresholds": 0.5042090128817727, "PR_Thresholds_Shift": 0.5038206383548482, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4383561643835616, "Recall": 0.96, "F1 score": 0.6018808777429467, "PR_Thresholds": 0.5038206383548482, "PR_Thresholds_Shift": 0.5033934872339692, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4378563283922463, "Recall": 0.96, "F1 score": 0.6014095536413469, "PR_Thresholds": 0.5033934872339692, "PR_Thresholds_Shift": 0.5044662176655237, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43935926773455375, "Recall": 0.96, "F1 score": 0.6028257456828885, "PR_Thresholds": 0.5044662176655237, "PR_Thresholds_Shift": 0.5028954919089916, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43686006825938567, "Recall": 0.96, "F1 score": 0.6004691164972635, "PR_Thresholds": 0.5028954919089916, "PR_Thresholds_Shift": 0.5028686374388212, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43636363636363634, "Recall": 0.96, "F1 score": 0.6, "PR_Thresholds": 0.5028686374388212, "PR_Thresholds_Shift": 0.5026589989058108, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4358683314415437, "Recall": 0.96, "F1 score": 0.5995316159250585, "PR_Thresholds": 0.5026589989058108, "PR_Thresholds_Shift": 0.50330321572613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43735763097949887, "Recall": 0.96, "F1 score": 0.6009389671361502, "PR_Thresholds": 0.50330321572613, "PR_Thresholds_Shift": 0.5044822050584304, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43986254295532645, "Recall": 0.96, "F1 score": 0.6032992930086409, "PR_Thresholds": 0.5044822050584304, "PR_Thresholds_Shift": 0.5065371741303591, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4439306358381503, "Recall": 0.96, "F1 score": 0.6071146245059288, "PR_Thresholds": 0.5065371741303591, "PR_Thresholds_Shift": 0.5049498012185089, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44087256027554533, "Recall": 0.96, "F1 score": 0.6042486231313926, "PR_Thresholds": 0.5049498012185089, "PR_Thresholds_Shift": 0.504939788768273, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44036697247706424, "Recall": 0.96, "F1 score": 0.6037735849056604, "PR_Thresholds": 0.504939788768273, "PR_Thresholds_Shift": 0.5072478932712785, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44495944380069524, "Recall": 0.96, "F1 score": 0.6080760095011877, "PR_Thresholds": 0.5072478932712785, "PR_Thresholds_Shift": 0.5067510295394269, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4444444444444444, "Recall": 0.96, "F1 score": 0.6075949367088608, "PR_Thresholds": 0.5067510295394269, "PR_Thresholds_Shift": 0.5062623522568424, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44341801385681295, "Recall": 0.96, "F1 score": 0.6066350710900474, "PR_Thresholds": 0.5062623522568424, "PR_Thresholds_Shift": 0.5075145152390499, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44547563805104406, "Recall": 0.96, "F1 score": 0.6085578446909666, "PR_Thresholds": 0.5075145152390499, "PR_Thresholds_Shift": 0.505756193428402, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4423963133640553, "Recall": 0.96, "F1 score": 0.6056782334384858, "PR_Thresholds": 0.505756193428402, "PR_Thresholds_Shift": 0.5052343909695638, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.44188722669735325, "Recall": 0.96, "F1 score": 0.6052009456264775, "PR_Thresholds": 0.5052343909695638, "PR_Thresholds_Shift": 0.5049900918375073, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4413793103448276, "Recall": 0.96, "F1 score": 0.6047244094488189, "PR_Thresholds": 0.5049900918375073, "PR_Thresholds_Shift": 0.5061750419092855, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4429065743944637, "Recall": 0.96, "F1 score": 0.6061562746645619, "PR_Thresholds": 0.5061750419092855, "PR_Thresholds_Shift": 0.49637412784227464, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4226125137211855, "Recall": 0.9625, "F1 score": 0.5873379099923722, "PR_Thresholds": 0.49637412784227464, "PR_Thresholds_Shift": 0.49760614117806995, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.425414364640884, "Recall": 0.9625, "F1 score": 0.5900383141762452, "PR_Thresholds": 0.49760614117806995, "PR_Thresholds_Shift": 0.4972780712140833, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4249448123620309, "Recall": 0.9625, "F1 score": 0.5895865237366004, "PR_Thresholds": 0.4972780712140833, "PR_Thresholds_Shift": 0.4972616086729609, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4244762954796031, "Recall": 0.9625, "F1 score": 0.5891354246365723, "PR_Thresholds": 0.4972616086729609, "PR_Thresholds_Shift": 0.49705206142765695, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.42400881057268724, "Recall": 0.9625, "F1 score": 0.5886850152905199, "PR_Thresholds": 0.49705206142765695, "PR_Thresholds_Shift": 0.4976805248162601, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4258849557522124, "Recall": 0.9625, "F1 score": 0.5904907975460124, "PR_Thresholds": 0.4976805248162601, "PR_Thresholds_Shift": 0.49677536339408124, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4230769230769231, "Recall": 0.9625, "F1 score": 0.5877862595419847, "PR_Thresholds": 0.49677536339408124, "PR_Thresholds_Shift": 0.4963187416597496, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.42214912280701755, "Recall": 0.9625, "F1 score": 0.586890243902439, "PR_Thresholds": 0.4963187416597496, "PR_Thresholds_Shift": 0.49481816809429024, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4198473282442748, "Recall": 0.9625, "F1 score": 0.5846621108580106, "PR_Thresholds": 0.49481816809429024, "PR_Thresholds_Shift": 0.49571748608480215, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4212253829321663, "Recall": 0.9625, "F1 score": 0.5859969558599696, "PR_Thresholds": 0.49571748608480215, "PR_Thresholds_Shift": 0.49552989677023884, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4207650273224044, "Recall": 0.9625, "F1 score": 0.5855513307984791, "PR_Thresholds": 0.49552989677023884, "PR_Thresholds_Shift": 0.4955177881043081, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4203056768558952, "Recall": 0.9625, "F1 score": 0.5851063829787234, "PR_Thresholds": 0.4955177881043081, "PR_Thresholds_Shift": 0.4947031618893888, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.41938997821350765, "Recall": 0.9625, "F1 score": 0.5842185128983308, "PR_Thresholds": 0.4947031618893888, "PR_Thresholds_Shift": 0.494239328154589, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.41893362350380847, "Recall": 0.9625, "F1 score": 0.5837755875663382, "PR_Thresholds": 0.494239328154589, "PR_Thresholds_Shift": 0.4941078703835405, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.41847826086956524, "Recall": 0.9625, "F1 score": 0.5833333333333334, "PR_Thresholds": 0.4941078703835405, "PR_Thresholds_Shift": 0.49409052112929586, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4180238870792617, "Recall": 0.9625, "F1 score": 0.5828917486752461, "PR_Thresholds": 0.49409052112929586, "PR_Thresholds_Shift": 0.4940631620323922, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4175704989154013, "Recall": 0.9625, "F1 score": 0.5824508320726173, "PR_Thresholds": 0.4940631620323922, "PR_Thresholds_Shift": 0.49616697993850756, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.42168674698795183, "Recall": 0.9625, "F1 score": 0.5864432597105865, "PR_Thresholds": 0.49616697993850756, "PR_Thresholds_Shift": 0.4977173274937789, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4263565891472868, "Recall": 0.9625, "F1 score": 0.5909439754412893, "PR_Thresholds": 0.4977173274937789, "PR_Thresholds_Shift": 0.4968903059247641, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4235423542354235, "Recall": 0.9625, "F1 score": 0.5882352941176471, "PR_Thresholds": 0.4968903059247641, "PR_Thresholds_Shift": 0.4980844420281828, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.42730299667036625, "Recall": 0.9625, "F1 score": 0.5918524212144505, "PR_Thresholds": 0.4980844420281828, "PR_Thresholds_Shift": 0.4977554869080407, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4268292682926829, "Recall": 0.9625, "F1 score": 0.5913978494623656, "PR_Thresholds": 0.4977554869080407, "PR_Thresholds_Shift": 0.5018625919124002, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4360135900339751, "Recall": 0.9625, "F1 score": 0.6001558846453625, "PR_Thresholds": 0.5018625919124002, "PR_Thresholds_Shift": 0.5018538528973426, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43552036199095023, "Recall": 0.9625, "F1 score": 0.5996884735202491, "PR_Thresholds": 0.5018538528973426, "PR_Thresholds_Shift": 0.501841952575856, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4350282485875706, "Recall": 0.9625, "F1 score": 0.5992217898832685, "PR_Thresholds": 0.501841952575856, "PR_Thresholds_Shift": 0.5015733715470224, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4345372460496614, "Recall": 0.9625, "F1 score": 0.5987558320373251, "PR_Thresholds": 0.5015733715470224, "PR_Thresholds_Shift": 0.5014279688553875, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43404735062006766, "Recall": 0.9625, "F1 score": 0.5982905982905984, "PR_Thresholds": 0.5014279688553875, "PR_Thresholds_Shift": 0.5005484764099284, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43355855855855857, "Recall": 0.9625, "F1 score": 0.5978260869565217, "PR_Thresholds": 0.5005484764099284, "PR_Thresholds_Shift": 0.5003906726851151, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4330708661417323, "Recall": 0.9625, "F1 score": 0.5973622963537627, "PR_Thresholds": 0.5003906726851151, "PR_Thresholds_Shift": 0.5003882625721248, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43258426966292135, "Recall": 0.9625, "F1 score": 0.5968992248062016, "PR_Thresholds": 0.5003882625721248, "PR_Thresholds_Shift": 0.5025475056234558, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4365079365079365, "Recall": 0.9625, "F1 score": 0.6006240249609984, "PR_Thresholds": 0.5025475056234558, "PR_Thresholds_Shift": 0.5000747219729079, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4316143497757848, "Recall": 0.9625, "F1 score": 0.5959752321981424, "PR_Thresholds": 0.5000747219729079, "PR_Thresholds_Shift": 0.4999374536421658, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4311310190369541, "Recall": 0.9625, "F1 score": 0.5955143078112917, "PR_Thresholds": 0.4999374536421658, "PR_Thresholds_Shift": 0.4996836785722733, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4306487695749441, "Recall": 0.9625, "F1 score": 0.5950540958268934, "PR_Thresholds": 0.4996836785722733, "PR_Thresholds_Shift": 0.4993715423801077, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4301675977653631, "Recall": 0.9625, "F1 score": 0.5945945945945946, "PR_Thresholds": 0.4993715423801077, "PR_Thresholds_Shift": 0.4993676438836473, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4296875, "Recall": 0.9625, "F1 score": 0.5941358024691359, "PR_Thresholds": 0.4993676438836473, "PR_Thresholds_Shift": 0.49906361185300346, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.42920847268673357, "Recall": 0.9625, "F1 score": 0.5936777178103315, "PR_Thresholds": 0.49906361185300346, "PR_Thresholds_Shift": 0.49872927663469185, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4287305122494432, "Recall": 0.9625, "F1 score": 0.5932203389830508, "PR_Thresholds": 0.49872927663469185, "PR_Thresholds_Shift": 0.4985040347931691, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.42825361512791993, "Recall": 0.9625, "F1 score": 0.592763664357198, "PR_Thresholds": 0.4985040347931691, "PR_Thresholds_Shift": 0.49848954176942406, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.42777777777777776, "Recall": 0.9625, "F1 score": 0.5923076923076923, "PR_Thresholds": 0.49848954176942406, "PR_Thresholds_Shift": 0.5003534197470574, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.43209876543209874, "Recall": 0.9625, "F1 score": 0.5964368706429124, "PR_Thresholds": 0.5003534197470574, "PR_Thresholds_Shift": 0.4871984673661837, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4058885383806519, "Recall": 0.965, "F1 score": 0.5714285714285713, "PR_Thresholds": 0.4871984673661837, "PR_Thresholds_Shift": 0.48751902965244975, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4063157894736842, "Recall": 0.965, "F1 score": 0.5718518518518517, "PR_Thresholds": 0.48751902965244975, "PR_Thresholds_Shift": 0.4882301929367283, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4084656084656085, "Recall": 0.965, "F1 score": 0.5739776951672863, "PR_Thresholds": 0.4882301929367283, "PR_Thresholds_Shift": 0.48796862586201833, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40760295670538543, "Recall": 0.965, "F1 score": 0.5731254639940608, "PR_Thresholds": 0.48796862586201833, "PR_Thresholds_Shift": 0.48813478897508067, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4080338266384778, "Recall": 0.965, "F1 score": 0.5735512630014858, "PR_Thresholds": 0.48813478897508067, "PR_Thresholds_Shift": 0.4862702440948214, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4054621848739496, "Recall": 0.965, "F1 score": 0.5710059171597633, "PR_Thresholds": 0.4862702440948214, "PR_Thresholds_Shift": 0.48787690369676456, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40717299578059074, "Recall": 0.965, "F1 score": 0.572700296735905, "PR_Thresholds": 0.48787690369676456, "PR_Thresholds_Shift": 0.4860812884382377, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4050367261280168, "Recall": 0.965, "F1 score": 0.5705838876570584, "PR_Thresholds": 0.4860812884382377, "PR_Thresholds_Shift": 0.48532502383589105, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40292275574112735, "Recall": 0.965, "F1 score": 0.5684830633284241, "PR_Thresholds": 0.48532502383589105, "PR_Thresholds_Shift": 0.4858549105670581, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4041884816753927, "Recall": 0.965, "F1 score": 0.5697416974169741, "PR_Thresholds": 0.4858549105670581, "PR_Thresholds_Shift": 0.4854627688486483, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40376569037656906, "Recall": 0.965, "F1 score": 0.5693215339233039, "PR_Thresholds": 0.4854627688486483, "PR_Thresholds_Shift": 0.4853870350812041, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40334378265412746, "Recall": 0.965, "F1 score": 0.5689019896831246, "PR_Thresholds": 0.4853870350812041, "PR_Thresholds_Shift": 0.4848219881177369, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40250260688216893, "Recall": 0.965, "F1 score": 0.568064753495217, "PR_Thresholds": 0.4848219881177369, "PR_Thresholds_Shift": 0.4848077193619722, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40208333333333335, "Recall": 0.965, "F1 score": 0.5676470588235294, "PR_Thresholds": 0.4848077193619722, "PR_Thresholds_Shift": 0.48442299213512685, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4016649323621228, "Recall": 0.965, "F1 score": 0.5672299779573844, "PR_Thresholds": 0.48442299213512685, "PR_Thresholds_Shift": 0.4843177125986461, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40124740124740127, "Recall": 0.965, "F1 score": 0.566813509544787, "PR_Thresholds": 0.4843177125986461, "PR_Thresholds_Shift": 0.4886509181151373, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4088983050847458, "Recall": 0.965, "F1 score": 0.5744047619047619, "PR_Thresholds": 0.4886509181151373, "PR_Thresholds_Shift": 0.4859183699349071, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40461215932914046, "Recall": 0.965, "F1 score": 0.5701624815361891, "PR_Thresholds": 0.4859183699349071, "PR_Thresholds_Shift": 0.4889957992216917, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4093319194061506, "Recall": 0.965, "F1 score": 0.5748324646314222, "PR_Thresholds": 0.4889957992216917, "PR_Thresholds_Shift": 0.48767235345076565, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4067439409905163, "Recall": 0.965, "F1 score": 0.5722757598220903, "PR_Thresholds": 0.48767235345076565, "PR_Thresholds_Shift": 0.48938081797871813, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.410201912858661, "Recall": 0.965, "F1 score": 0.575689783743475, "PR_Thresholds": 0.48938081797871813, "PR_Thresholds_Shift": 0.493959323034976, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.41774891774891776, "Recall": 0.965, "F1 score": 0.5830815709969789, "PR_Thresholds": 0.493959323034976, "PR_Thresholds_Shift": 0.49382235812545044, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4172972972972973, "Recall": 0.965, "F1 score": 0.5826415094339623, "PR_Thresholds": 0.49382235812545044, "PR_Thresholds_Shift": 0.4934080750029213, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4168466522678186, "Recall": 0.965, "F1 score": 0.5822021116138764, "PR_Thresholds": 0.4934080750029213, "PR_Thresholds_Shift": 0.4932602586258882, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.41639697950377563, "Recall": 0.965, "F1 score": 0.5817633760361719, "PR_Thresholds": 0.4932602586258882, "PR_Thresholds_Shift": 0.49278715376057214, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.41594827586206895, "Recall": 0.965, "F1 score": 0.5813253012048193, "PR_Thresholds": 0.49278715376057214, "PR_Thresholds_Shift": 0.49243703479786394, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4155005382131324, "Recall": 0.965, "F1 score": 0.5808878856282919, "PR_Thresholds": 0.49243703479786394, "PR_Thresholds_Shift": 0.4922416806559052, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4146079484425349, "Recall": 0.965, "F1 score": 0.5800150262960181, "PR_Thresholds": 0.4922416806559052, "PR_Thresholds_Shift": 0.4918162407727447, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.41416309012875535, "Recall": 0.965, "F1 score": 0.5795795795795796, "PR_Thresholds": 0.4918162407727447, "PR_Thresholds_Shift": 0.49242521930839467, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4150537634408602, "Recall": 0.965, "F1 score": 0.5804511278195489, "PR_Thresholds": 0.49242521930839467, "PR_Thresholds_Shift": 0.4917084300173086, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4132762312633833, "Recall": 0.965, "F1 score": 0.5787106446776612, "PR_Thresholds": 0.4917084300173086, "PR_Thresholds_Shift": 0.49160511418971814, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4128342245989305, "Recall": 0.965, "F1 score": 0.5782771535580523, "PR_Thresholds": 0.49160511418971814, "PR_Thresholds_Shift": 0.4906519388986588, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.41239316239316237, "Recall": 0.965, "F1 score": 0.5778443113772455, "PR_Thresholds": 0.4906519388986588, "PR_Thresholds_Shift": 0.4939948215262284, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4182015167930661, "Recall": 0.965, "F1 score": 0.5835222978080121, "PR_Thresholds": 0.4939948215262284, "PR_Thresholds_Shift": 0.49053238682123634, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4119530416221985, "Recall": 0.965, "F1 score": 0.5774121166791324, "PR_Thresholds": 0.49053238682123634, "PR_Thresholds_Shift": 0.4901555882388523, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4115138592750533, "Recall": 0.965, "F1 score": 0.5769805680119582, "PR_Thresholds": 0.4901555882388523, "PR_Thresholds_Shift": 0.48993628699390157, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4110756123535676, "Recall": 0.965, "F1 score": 0.5765496639283046, "PR_Thresholds": 0.48993628699390157, "PR_Thresholds_Shift": 0.4894319917380539, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4106382978723404, "Recall": 0.965, "F1 score": 0.5761194029850746, "PR_Thresholds": 0.4894319917380539, "PR_Thresholds_Shift": 0.4917904824989987, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4137191854233655, "Recall": 0.965, "F1 score": 0.5791447861965492, "PR_Thresholds": 0.4917904824989987, "PR_Thresholds_Shift": 0.48936801122990153, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40976645435244163, "Recall": 0.965, "F1 score": 0.5752608047690015, "PR_Thresholds": 0.48936801122990153, "PR_Thresholds_Shift": 0.4839903175231957, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40186915887850466, "Recall": 0.9675, "F1 score": 0.5678650036683787, "PR_Thresholds": 0.4839903175231957, "PR_Thresholds_Shift": 0.4832108462033742, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40145228215767637, "Recall": 0.9675, "F1 score": 0.5674486803519061, "PR_Thresholds": 0.4832108462033742, "PR_Thresholds_Shift": 0.48173179436794966, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40103626943005183, "Recall": 0.9675, "F1 score": 0.5670329670329671, "PR_Thresholds": 0.48173179436794966, "PR_Thresholds_Shift": 0.48058030062018053, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3995880535530381, "Recall": 0.97, "F1 score": 0.5660102115244348, "PR_Thresholds": 0.48058030062018053, "PR_Thresholds_Shift": 0.4800148581083249, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3987667009249743, "Recall": 0.97, "F1 score": 0.5651857246904589, "PR_Thresholds": 0.4800148581083249, "PR_Thresholds_Shift": 0.48031814225594543, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3991769547325103, "Recall": 0.97, "F1 score": 0.565597667638484, "PR_Thresholds": 0.48031814225594543, "PR_Thresholds_Shift": 0.48072177609785, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4, "Recall": 0.97, "F1 score": 0.5664233576642336, "PR_Thresholds": 0.48072177609785, "PR_Thresholds_Shift": 0.4810294024270703, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40082644628099173, "Recall": 0.97, "F1 score": 0.567251461988304, "PR_Thresholds": 0.4810294024270703, "PR_Thresholds_Shift": 0.4814529776423006, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4012409513960703, "Recall": 0.97, "F1 score": 0.5676664228237016, "PR_Thresholds": 0.4814529776423006, "PR_Thresholds_Shift": 0.4817155366880285, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.40165631469979296, "Recall": 0.97, "F1 score": 0.568081991215227, "PR_Thresholds": 0.4817155366880285, "PR_Thresholds_Shift": 0.48084330805902076, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.4004127966976264, "Recall": 0.97, "F1 score": 0.5668371073776479, "PR_Thresholds": 0.48084330805902076, "PR_Thresholds_Shift": 0.4759033631177959, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3893893893893894, "Recall": 0.9725, "F1 score": 0.5561115082201573, "PR_Thresholds": 0.4759033631177959, "PR_Thresholds_Shift": 0.4757018874916608, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.389, "Recall": 0.9725, "F1 score": 0.5557142857142858, "PR_Thresholds": 0.4757018874916608, "PR_Thresholds_Shift": 0.4756209098099065, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3886113886113886, "Recall": 0.9725, "F1 score": 0.5553176302640971, "PR_Thresholds": 0.4756209098099065, "PR_Thresholds_Shift": 0.4754755348987202, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38822355289421157, "Recall": 0.9725, "F1 score": 0.5549215406562054, "PR_Thresholds": 0.4754755348987202, "PR_Thresholds_Shift": 0.4752897798707436, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38783649052841473, "Recall": 0.9725, "F1 score": 0.5545260156806843, "PR_Thresholds": 0.4752897798707436, "PR_Thresholds_Shift": 0.4747054453695882, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38745019920318724, "Recall": 0.9725, "F1 score": 0.5541310541310541, "PR_Thresholds": 0.4747054453695882, "PR_Thresholds_Shift": 0.4743384610569915, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3870646766169154, "Recall": 0.9725, "F1 score": 0.5537366548042705, "PR_Thresholds": 0.4743384610569915, "PR_Thresholds_Shift": 0.47426182731146, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3866799204771372, "Recall": 0.9725, "F1 score": 0.5533428165007113, "PR_Thresholds": 0.47426182731146, "PR_Thresholds_Shift": 0.47417599395001775, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38629592850049654, "Recall": 0.9725, "F1 score": 0.5529495380241649, "PR_Thresholds": 0.47417599395001775, "PR_Thresholds_Shift": 0.4741631641778482, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38591269841269843, "Recall": 0.9725, "F1 score": 0.5525568181818181, "PR_Thresholds": 0.4741631641778482, "PR_Thresholds_Shift": 0.4735224507893598, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38514851485148516, "Recall": 0.9725, "F1 score": 0.5517730496453901, "PR_Thresholds": 0.4735224507893598, "PR_Thresholds_Shift": 0.4735134822459432, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3847675568743818, "Recall": 0.9725, "F1 score": 0.5513819985825655, "PR_Thresholds": 0.4735134822459432, "PR_Thresholds_Shift": 0.47342918590033944, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38438735177865613, "Recall": 0.9725, "F1 score": 0.5509915014164306, "PR_Thresholds": 0.47342918590033944, "PR_Thresholds_Shift": 0.47341742805647596, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3840078973346496, "Recall": 0.9725, "F1 score": 0.5506015569709838, "PR_Thresholds": 0.47341742805647596, "PR_Thresholds_Shift": 0.47332642897638494, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38362919132149903, "Recall": 0.9725, "F1 score": 0.5502121640735502, "PR_Thresholds": 0.47332642897638494, "PR_Thresholds_Shift": 0.47318514390682037, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3832512315270936, "Recall": 0.9725, "F1 score": 0.5498233215547703, "PR_Thresholds": 0.47318514390682037, "PR_Thresholds_Shift": 0.4731681070495133, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3828740157480315, "Recall": 0.9725, "F1 score": 0.5494350282485875, "PR_Thresholds": 0.4731681070495133, "PR_Thresholds_Shift": 0.47286372678330973, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3824975417895772, "Recall": 0.9725, "F1 score": 0.549047282992237, "PR_Thresholds": 0.47286372678330973, "PR_Thresholds_Shift": 0.47256782261978103, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38212180746561886, "Recall": 0.9725, "F1 score": 0.5486600846262342, "PR_Thresholds": 0.47256782261978103, "PR_Thresholds_Shift": 0.4760179394996613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3897795591182365, "Recall": 0.9725, "F1 score": 0.5565092989985693, "PR_Thresholds": 0.4760179394996613, "PR_Thresholds_Shift": 0.47384292982392845, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3855302279484638, "Recall": 0.9725, "F1 score": 0.5521646557842441, "PR_Thresholds": 0.47384292982392845, "PR_Thresholds_Shift": 0.4761237891241503, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3901705115346038, "Recall": 0.9725, "F1 score": 0.556907659269864, "PR_Thresholds": 0.4761237891241503, "PR_Thresholds_Shift": 0.4798304486493304, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3993839835728953, "Recall": 0.9725, "F1 score": 0.5662299854439592, "PR_Thresholds": 0.4798304486493304, "PR_Thresholds_Shift": 0.47622648966372544, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39095477386934674, "Recall": 0.9725, "F1 score": 0.5577060931899642, "PR_Thresholds": 0.47622648966372544, "PR_Thresholds_Shift": 0.4761872912898666, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39056224899598396, "Recall": 0.9725, "F1 score": 0.5573065902578797, "PR_Thresholds": 0.4761872912898666, "PR_Thresholds_Shift": 0.4798006750110353, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39897435897435896, "Recall": 0.9725, "F1 score": 0.5658181818181819, "PR_Thresholds": 0.4798006750110353, "PR_Thresholds_Shift": 0.47967021862071224, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3985655737704918, "Recall": 0.9725, "F1 score": 0.565406976744186, "PR_Thresholds": 0.47967021862071224, "PR_Thresholds_Shift": 0.4795854111290315, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39815762538382804, "Recall": 0.9725, "F1 score": 0.5649963689179376, "PR_Thresholds": 0.4795854111290315, "PR_Thresholds_Shift": 0.4794105370650742, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39775051124744376, "Recall": 0.9725, "F1 score": 0.5645863570391872, "PR_Thresholds": 0.4794105370650742, "PR_Thresholds_Shift": 0.4791787858032101, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39693877551020407, "Recall": 0.9725, "F1 score": 0.5637681159420289, "PR_Thresholds": 0.4791787858032101, "PR_Thresholds_Shift": 0.47889017186648, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3965341488277268, "Recall": 0.9725, "F1 score": 0.5633598841419261, "PR_Thresholds": 0.47889017186648, "PR_Thresholds_Shift": 0.47851109973556627, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39613034623217924, "Recall": 0.9725, "F1 score": 0.5629522431259045, "PR_Thresholds": 0.47851109973556627, "PR_Thresholds_Shift": 0.4783631569489254, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3957273652085453, "Recall": 0.9725, "F1 score": 0.5625451916124368, "PR_Thresholds": 0.4783631569489254, "PR_Thresholds_Shift": 0.47808834636706943, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3953252032520325, "Recall": 0.9725, "F1 score": 0.5621387283236994, "PR_Thresholds": 0.47808834636706943, "PR_Thresholds_Shift": 0.479237401804646, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39734422880490294, "Recall": 0.9725, "F1 score": 0.5641769398114576, "PR_Thresholds": 0.479237401804646, "PR_Thresholds_Shift": 0.47794383859096834, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3945233265720081, "Recall": 0.9725, "F1 score": 0.5613275613275613, "PR_Thresholds": 0.47794383859096834, "PR_Thresholds_Shift": 0.4779129521497155, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3941236068895643, "Recall": 0.9725, "F1 score": 0.5609228550829128, "PR_Thresholds": 0.4779129521497155, "PR_Thresholds_Shift": 0.4775904901474308, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3937246963562753, "Recall": 0.9725, "F1 score": 0.5605187319884726, "PR_Thresholds": 0.4775904901474308, "PR_Thresholds_Shift": 0.4775343647091899, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39332659251769464, "Recall": 0.9725, "F1 score": 0.5601151907847373, "PR_Thresholds": 0.4775343647091899, "PR_Thresholds_Shift": 0.4771129271091285, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3929292929292929, "Recall": 0.9725, "F1 score": 0.5597122302158273, "PR_Thresholds": 0.4771129271091285, "PR_Thresholds_Shift": 0.4767800126718127, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39253279515640765, "Recall": 0.9725, "F1 score": 0.5593098490294752, "PR_Thresholds": 0.4767800126718127, "PR_Thresholds_Shift": 0.47663918575874276, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39213709677419356, "Recall": 0.9725, "F1 score": 0.5589080459770115, "PR_Thresholds": 0.47663918575874276, "PR_Thresholds_Shift": 0.4764822201468773, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.391742195367573, "Recall": 0.9725, "F1 score": 0.5585068198133525, "PR_Thresholds": 0.4764822201468773, "PR_Thresholds_Shift": 0.4780161336770192, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3949238578680203, "Recall": 0.9725, "F1 score": 0.5617328519855596, "PR_Thresholds": 0.4780161336770192, "PR_Thresholds_Shift": 0.47635627625672056, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.39134808853118713, "Recall": 0.9725, "F1 score": 0.5581061692969871, "PR_Thresholds": 0.47635627625672056, "PR_Thresholds_Shift": 0.4645331978124793, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36896877956480606, "Recall": 0.975, "F1 score": 0.5353466026080989, "PR_Thresholds": 0.4645331978124793, "PR_Thresholds_Shift": 0.46492385023684785, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3693181818181818, "Recall": 0.975, "F1 score": 0.5357142857142858, "PR_Thresholds": 0.46492385023684785, "PR_Thresholds_Shift": 0.46627046083964024, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37249283667621774, "Recall": 0.975, "F1 score": 0.5390463026952315, "PR_Thresholds": 0.46627046083964024, "PR_Thresholds_Shift": 0.46509312838138306, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3700189753320683, "Recall": 0.975, "F1 score": 0.5364511691884456, "PR_Thresholds": 0.46509312838138306, "PR_Thresholds_Shift": 0.46523288763200016, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37037037037037035, "Recall": 0.975, "F1 score": 0.5368203716448727, "PR_Thresholds": 0.46523288763200016, "PR_Thresholds_Shift": 0.46589429158007656, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37178265014299333, "Recall": 0.975, "F1 score": 0.5383022774327122, "PR_Thresholds": 0.46589429158007656, "PR_Thresholds_Shift": 0.4654511383658293, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37107516650808753, "Recall": 0.975, "F1 score": 0.5375603032391454, "PR_Thresholds": 0.4654511383658293, "PR_Thresholds_Shift": 0.46589300666629324, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37142857142857144, "Recall": 0.975, "F1 score": 0.5379310344827586, "PR_Thresholds": 0.46589300666629324, "PR_Thresholds_Shift": 0.46616200382511336, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37213740458015265, "Recall": 0.975, "F1 score": 0.5386740331491713, "PR_Thresholds": 0.46616200382511336, "PR_Thresholds_Shift": 0.46446163597727647, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3686200378071834, "Recall": 0.975, "F1 score": 0.5349794238683128, "PR_Thresholds": 0.46446163597727647, "PR_Thresholds_Shift": 0.46530561723565494, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37072243346007605, "Recall": 0.975, "F1 score": 0.5371900826446281, "PR_Thresholds": 0.46530561723565494, "PR_Thresholds_Shift": 0.4644595201693297, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36827195467422097, "Recall": 0.975, "F1 score": 0.5346127484578479, "PR_Thresholds": 0.4644595201693297, "PR_Thresholds_Shift": 0.46277458831215, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3644859813084112, "Recall": 0.975, "F1 score": 0.5306122448979591, "PR_Thresholds": 0.46277458831215, "PR_Thresholds_Shift": 0.46427114756629434, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36757775683317623, "Recall": 0.975, "F1 score": 0.5338809034907597, "PR_Thresholds": 0.46427114756629434, "PR_Thresholds_Shift": 0.46423732899138925, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3672316384180791, "Recall": 0.975, "F1 score": 0.533515731874145, "PR_Thresholds": 0.46423732899138925, "PR_Thresholds_Shift": 0.4637454222363921, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36688617121354655, "Recall": 0.975, "F1 score": 0.5331510594668489, "PR_Thresholds": 0.4637454222363921, "PR_Thresholds_Shift": 0.4637406315539928, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36654135338345867, "Recall": 0.975, "F1 score": 0.5327868852459017, "PR_Thresholds": 0.4637406315539928, "PR_Thresholds_Shift": 0.46348326298072945, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36619718309859156, "Recall": 0.975, "F1 score": 0.5324232081911263, "PR_Thresholds": 0.46348326298072945, "PR_Thresholds_Shift": 0.4633898110317647, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36585365853658536, "Recall": 0.975, "F1 score": 0.5320600272851296, "PR_Thresholds": 0.4633898110317647, "PR_Thresholds_Shift": 0.4630636319471889, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3655107778819119, "Recall": 0.975, "F1 score": 0.5316973415132924, "PR_Thresholds": 0.4630636319471889, "PR_Thresholds_Shift": 0.4628645021993265, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3651685393258427, "Recall": 0.975, "F1 score": 0.5313351498637603, "PR_Thresholds": 0.4628645021993265, "PR_Thresholds_Shift": 0.46284502200064853, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3648269410664172, "Recall": 0.975, "F1 score": 0.5309734513274336, "PR_Thresholds": 0.46284502200064853, "PR_Thresholds_Shift": 0.4626460957139919, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3641456582633053, "Recall": 0.975, "F1 score": 0.53025152957172, "PR_Thresholds": 0.4626460957139919, "PR_Thresholds_Shift": 0.46255337421845444, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36380597014925375, "Recall": 0.975, "F1 score": 0.5298913043478262, "PR_Thresholds": 0.46255337421845444, "PR_Thresholds_Shift": 0.46430059475283375, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36792452830188677, "Recall": 0.975, "F1 score": 0.5342465753424658, "PR_Thresholds": 0.46430059475283375, "PR_Thresholds_Shift": 0.4663889479425233, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.372848948374761, "Recall": 0.975, "F1 score": 0.5394190871369295, "PR_Thresholds": 0.4663889479425233, "PR_Thresholds_Shift": 0.4649503580401303, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3696682464454976, "Recall": 0.975, "F1 score": 0.5360824742268041, "PR_Thresholds": 0.4649503580401303, "PR_Thresholds_Shift": 0.46667459257528576, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3735632183908046, "Recall": 0.975, "F1 score": 0.5401662049861496, "PR_Thresholds": 0.46667459257528576, "PR_Thresholds_Shift": 0.4666253484545559, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37320574162679426, "Recall": 0.975, "F1 score": 0.5397923875432525, "PR_Thresholds": 0.4666253484545559, "PR_Thresholds_Shift": 0.472508793112805, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38272816486751715, "Recall": 0.975, "F1 score": 0.5496828752642705, "PR_Thresholds": 0.472508793112805, "PR_Thresholds_Shift": 0.4724211513787194, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38235294117647056, "Recall": 0.975, "F1 score": 0.5492957746478873, "PR_Thresholds": 0.4724211513787194, "PR_Thresholds_Shift": 0.472240899839823, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3819784524975514, "Recall": 0.975, "F1 score": 0.5489092188599578, "PR_Thresholds": 0.472240899839823, "PR_Thresholds_Shift": 0.471993825431256, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3816046966731898, "Recall": 0.975, "F1 score": 0.5485232067510548, "PR_Thresholds": 0.471993825431256, "PR_Thresholds_Shift": 0.471903103082738, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3812316715542522, "Recall": 0.975, "F1 score": 0.5481377371749825, "PR_Thresholds": 0.471903103082738, "PR_Thresholds_Shift": 0.47183734949311557, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.380859375, "Recall": 0.975, "F1 score": 0.547752808988764, "PR_Thresholds": 0.47183734949311557, "PR_Thresholds_Shift": 0.4717101111594343, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3804878048780488, "Recall": 0.975, "F1 score": 0.5473684210526316, "PR_Thresholds": 0.4717101111594343, "PR_Thresholds_Shift": 0.47134631902097807, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.38011695906432746, "Recall": 0.975, "F1 score": 0.546984572230014, "PR_Thresholds": 0.47134631902097807, "PR_Thresholds_Shift": 0.4711193155935246, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.379746835443038, "Recall": 0.975, "F1 score": 0.5466012613875264, "PR_Thresholds": 0.4711193155935246, "PR_Thresholds_Shift": 0.47097686494540036, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37900874635568516, "Recall": 0.975, "F1 score": 0.5458362491252625, "PR_Thresholds": 0.47097686494540036, "PR_Thresholds_Shift": 0.47054486939236984, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3786407766990291, "Recall": 0.975, "F1 score": 0.5454545454545455, "PR_Thresholds": 0.47054486939236984, "PR_Thresholds_Shift": 0.470998955864834, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37937743190661477, "Recall": 0.975, "F1 score": 0.5462184873949579, "PR_Thresholds": 0.470998955864834, "PR_Thresholds_Shift": 0.4695656392215784, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37790697674418605, "Recall": 0.975, "F1 score": 0.5446927374301677, "PR_Thresholds": 0.4695656392215784, "PR_Thresholds_Shift": 0.46683124641468354, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37392138063279, "Recall": 0.975, "F1 score": 0.5405405405405405, "PR_Thresholds": 0.46683124641468354, "PR_Thresholds_Shift": 0.46725084593756927, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3742802303262956, "Recall": 0.975, "F1 score": 0.5409153952843273, "PR_Thresholds": 0.46725084593756927, "PR_Thresholds_Shift": 0.46725857636602314, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3746397694524496, "Recall": 0.975, "F1 score": 0.5412907702984039, "PR_Thresholds": 0.46725857636602314, "PR_Thresholds_Shift": 0.4702750899023219, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37827352085354027, "Recall": 0.975, "F1 score": 0.5450733752620546, "PR_Thresholds": 0.4702750899023219, "PR_Thresholds_Shift": 0.4676199595436419, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3753609239653513, "Recall": 0.975, "F1 score": 0.542043085476025, "PR_Thresholds": 0.4676199595436419, "PR_Thresholds_Shift": 0.4679108112755117, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37572254335260113, "Recall": 0.975, "F1 score": 0.5424200278164116, "PR_Thresholds": 0.4679108112755117, "PR_Thresholds_Shift": 0.46761383395528244, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.375, "Recall": 0.975, "F1 score": 0.5416666666666666, "PR_Thresholds": 0.46761383395528244, "PR_Thresholds_Shift": 0.46828806399793266, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3764478764478765, "Recall": 0.975, "F1 score": 0.5431754874651812, "PR_Thresholds": 0.46828806399793266, "PR_Thresholds_Shift": 0.46857642610243416, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.37681159420289856, "Recall": 0.975, "F1 score": 0.5435540069686411, "PR_Thresholds": 0.46857642610243416, "PR_Thresholds_Shift": 0.46904883776372736, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3771760154738878, "Recall": 0.975, "F1 score": 0.5439330543933054, "PR_Thresholds": 0.46904883776372736, "PR_Thresholds_Shift": 0.46915924603659137, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.377541142303969, "Recall": 0.975, "F1 score": 0.5443126308443823, "PR_Thresholds": 0.46915924603659137, "PR_Thresholds_Shift": 0.4679597705909757, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3760848601735776, "Recall": 0.975, "F1 score": 0.5427974947807933, "PR_Thresholds": 0.4679597705909757, "PR_Thresholds_Shift": 0.4603046026960802, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3613678373382625, "Recall": 0.9775, "F1 score": 0.5276653171390013, "PR_Thresholds": 0.4603046026960802, "PR_Thresholds_Shift": 0.4592625677857994, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36003683241252304, "Recall": 0.9775, "F1 score": 0.5262449528936743, "PR_Thresholds": 0.4592625677857994, "PR_Thresholds_Shift": 0.4599862387438812, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36036866359447006, "Recall": 0.9775, "F1 score": 0.5265993265993266, "PR_Thresholds": 0.4599862387438812, "PR_Thresholds_Shift": 0.4600723710801546, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3607011070110701, "Recall": 0.9775, "F1 score": 0.5269541778975741, "PR_Thresholds": 0.4600723710801546, "PR_Thresholds_Shift": 0.4601956165238015, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3610341643582641, "Recall": 0.9775, "F1 score": 0.5273095077545517, "PR_Thresholds": 0.4601956165238015, "PR_Thresholds_Shift": 0.46047459879177116, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36203703703703705, "Recall": 0.9775, "F1 score": 0.5283783783783784, "PR_Thresholds": 0.46047459879177116, "PR_Thresholds_Shift": 0.4604526018389523, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3617021276595745, "Recall": 0.9775, "F1 score": 0.5280216070222823, "PR_Thresholds": 0.4604526018389523, "PR_Thresholds_Shift": 0.46181448166935385, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36439888164026096, "Recall": 0.9775, "F1 score": 0.5308893414799729, "PR_Thresholds": 0.46181448166935385, "PR_Thresholds_Shift": 0.4606927543179549, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.362708719851577, "Recall": 0.9775, "F1 score": 0.5290933694181326, "PR_Thresholds": 0.4606927543179549, "PR_Thresholds_Shift": 0.46087135492601067, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3630454967502321, "Recall": 0.9775, "F1 score": 0.5294515910629655, "PR_Thresholds": 0.46087135492601067, "PR_Thresholds_Shift": 0.4613269659693494, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36338289962825276, "Recall": 0.9775, "F1 score": 0.529810298102981, "PR_Thresholds": 0.4613269659693494, "PR_Thresholds_Shift": 0.46167946889843847, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36372093023255814, "Recall": 0.9775, "F1 score": 0.5301694915254237, "PR_Thresholds": 0.46167946889843847, "PR_Thresholds_Shift": 0.4617128168558209, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36405959031657353, "Recall": 0.9775, "F1 score": 0.530529172320217, "PR_Thresholds": 0.4617128168558209, "PR_Thresholds_Shift": 0.46063172138234343, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3623725671918443, "Recall": 0.9775, "F1 score": 0.5287356321839081, "PR_Thresholds": 0.46063172138234343, "PR_Thresholds_Shift": 0.45837293698110104, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35799086757990867, "Recall": 0.98, "F1 score": 0.5244147157190636, "PR_Thresholds": 0.45837293698110104, "PR_Thresholds_Shift": 0.45853161403584136, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3583180987202925, "Recall": 0.98, "F1 score": 0.5247657295850068, "PR_Thresholds": 0.45853161403584136, "PR_Thresholds_Shift": 0.45878517041558703, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.358974358974359, "Recall": 0.98, "F1 score": 0.5254691689008043, "PR_Thresholds": 0.45878517041558703, "PR_Thresholds_Shift": 0.4585461418170707, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3586459286367795, "Recall": 0.98, "F1 score": 0.5251172136637642, "PR_Thresholds": 0.4585461418170707, "PR_Thresholds_Shift": 0.45905077831302854, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3596330275229358, "Recall": 0.98, "F1 score": 0.5261744966442954, "PR_Thresholds": 0.45905077831302854, "PR_Thresholds_Shift": 0.45905161516189685, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35996326905417814, "Recall": 0.98, "F1 score": 0.5265278710543989, "PR_Thresholds": 0.45905161516189685, "PR_Thresholds_Shift": 0.4591084777314812, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3602941176470588, "Recall": 0.98, "F1 score": 0.5268817204301075, "PR_Thresholds": 0.4591084777314812, "PR_Thresholds_Shift": 0.45913231862215664, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.36062557497700093, "Recall": 0.98, "F1 score": 0.5272360457296571, "PR_Thresholds": 0.45913231862215664, "PR_Thresholds_Shift": 0.45881267736665415, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3593033913840513, "Recall": 0.98, "F1 score": 0.5258215962441314, "PR_Thresholds": 0.45881267736665415, "PR_Thresholds_Shift": 0.4530284804122741, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34902309058614567, "Recall": 0.9825, "F1 score": 0.5150720838794234, "PR_Thresholds": 0.4530284804122741, "PR_Thresholds_Shift": 0.4544859489236581, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3512064343163539, "Recall": 0.9825, "F1 score": 0.5174456879526005, "PR_Thresholds": 0.4544859489236581, "PR_Thresholds_Shift": 0.4540988959027266, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3508928571428571, "Recall": 0.9825, "F1 score": 0.5171052631578947, "PR_Thresholds": 0.4540988959027266, "PR_Thresholds_Shift": 0.4538351384385808, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35057983942908116, "Recall": 0.9825, "F1 score": 0.5167652859960552, "PR_Thresholds": 0.4538351384385808, "PR_Thresholds_Shift": 0.45378373562302887, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3502673796791444, "Recall": 0.9825, "F1 score": 0.516425755584757, "PR_Thresholds": 0.45378373562302887, "PR_Thresholds_Shift": 0.4536472248001142, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3499554764024933, "Recall": 0.9825, "F1 score": 0.5160866710439921, "PR_Thresholds": 0.4536472248001142, "PR_Thresholds_Shift": 0.4531734863630595, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.349644128113879, "Recall": 0.9825, "F1 score": 0.515748031496063, "PR_Thresholds": 0.4531734863630595, "PR_Thresholds_Shift": 0.4531591445329278, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34933333333333333, "Recall": 0.9825, "F1 score": 0.5154098360655738, "PR_Thresholds": 0.4531591445329278, "PR_Thresholds_Shift": 0.4550943789611465, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35152057245080504, "Recall": 0.9825, "F1 score": 0.5177865612648221, "PR_Thresholds": 0.4550943789611465, "PR_Thresholds_Shift": 0.45166338238505516, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34625550660792953, "Recall": 0.9825, "F1 score": 0.5120521172638437, "PR_Thresholds": 0.45166338238505516, "PR_Thresholds_Shift": 0.4525594115003979, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34809565987599644, "Recall": 0.9825, "F1 score": 0.5140614780902552, "PR_Thresholds": 0.4525594115003979, "PR_Thresholds_Shift": 0.4521401558186813, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.347787610619469, "Recall": 0.9825, "F1 score": 0.5137254901960784, "PR_Thresholds": 0.4521401558186813, "PR_Thresholds_Shift": 0.45191830055735893, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34748010610079577, "Recall": 0.9825, "F1 score": 0.5133899412148922, "PR_Thresholds": 0.45191830055735893, "PR_Thresholds_Shift": 0.45190267865999884, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3471731448763251, "Recall": 0.9825, "F1 score": 0.5130548302872062, "PR_Thresholds": 0.45190267865999884, "PR_Thresholds_Shift": 0.4518440753205825, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3468667255075022, "Recall": 0.9825, "F1 score": 0.5127201565557729, "PR_Thresholds": 0.4518440753205825, "PR_Thresholds_Shift": 0.451721204076428, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34656084656084657, "Recall": 0.9825, "F1 score": 0.5123859191655802, "PR_Thresholds": 0.451721204076428, "PR_Thresholds_Shift": 0.4516485494341062, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3459507042253521, "Recall": 0.9825, "F1 score": 0.51171875, "PR_Thresholds": 0.4516485494341062, "PR_Thresholds_Shift": 0.45162750241174326, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34564643799472294, "Recall": 0.9825, "F1 score": 0.5113858165256994, "PR_Thresholds": 0.45162750241174326, "PR_Thresholds_Shift": 0.4529195539885583, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3484042553191489, "Recall": 0.9825, "F1 score": 0.5143979057591622, "PR_Thresholds": 0.4529195539885583, "PR_Thresholds_Shift": 0.45539309762151803, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35183527305282003, "Recall": 0.9825, "F1 score": 0.5181278839815424, "PR_Thresholds": 0.45539309762151803, "PR_Thresholds_Shift": 0.45294677854236925, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3487133984028394, "Recall": 0.9825, "F1 score": 0.5147347740667976, "PR_Thresholds": 0.45294677854236925, "PR_Thresholds_Shift": 0.45564062466843525, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3524663677130045, "Recall": 0.9825, "F1 score": 0.5188118811881188, "PR_Thresholds": 0.45564062466843525, "PR_Thresholds_Shift": 0.45561819179756846, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3521505376344086, "Recall": 0.9825, "F1 score": 0.5184696569920845, "PR_Thresholds": 0.45561819179756846, "PR_Thresholds_Shift": 0.45833511402130234, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3585766423357664, "Recall": 0.9825, "F1 score": 0.5254010695187166, "PR_Thresholds": 0.45833511402130234, "PR_Thresholds_Shift": 0.4582405371832991, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35824977210574294, "Recall": 0.9825, "F1 score": 0.5250501002004008, "PR_Thresholds": 0.4582405371832991, "PR_Thresholds_Shift": 0.4577292412481059, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3575978161965423, "Recall": 0.9825, "F1 score": 0.524349566377585, "PR_Thresholds": 0.4577292412481059, "PR_Thresholds_Shift": 0.4577189635096459, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3572727272727273, "Recall": 0.9825, "F1 score": 0.524, "PR_Thresholds": 0.4577189635096459, "PR_Thresholds_Shift": 0.4574305426144775, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3569482288828338, "Recall": 0.9825, "F1 score": 0.5236508994003998, "PR_Thresholds": 0.4574305426144775, "PR_Thresholds_Shift": 0.4573571954364059, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3566243194192377, "Recall": 0.9825, "F1 score": 0.5233022636484688, "PR_Thresholds": 0.4573571954364059, "PR_Thresholds_Shift": 0.4572914179784424, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3563009972801451, "Recall": 0.9825, "F1 score": 0.5229540918163672, "PR_Thresholds": 0.4572914179784424, "PR_Thresholds_Shift": 0.45720649233041893, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35597826086956524, "Recall": 0.9825, "F1 score": 0.5226063829787234, "PR_Thresholds": 0.45720649233041893, "PR_Thresholds_Shift": 0.45802758368413876, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35792349726775957, "Recall": 0.9825, "F1 score": 0.5246995994659546, "PR_Thresholds": 0.45802758368413876, "PR_Thresholds_Shift": 0.4571357920781948, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3553345388788427, "Recall": 0.9825, "F1 score": 0.5219123505976095, "PR_Thresholds": 0.4571357920781948, "PR_Thresholds_Shift": 0.45710955801750874, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35501355013550134, "Recall": 0.9825, "F1 score": 0.5215660252156603, "PR_Thresholds": 0.45710955801750874, "PR_Thresholds_Shift": 0.4570162246460635, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3546931407942238, "Recall": 0.9825, "F1 score": 0.5212201591511937, "PR_Thresholds": 0.4570162246460635, "PR_Thresholds_Shift": 0.45673257414318175, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35437330928764654, "Recall": 0.9825, "F1 score": 0.5208747514910538, "PR_Thresholds": 0.45673257414318175, "PR_Thresholds_Shift": 0.45631200067789696, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35405405405405405, "Recall": 0.9825, "F1 score": 0.5205298013245033, "PR_Thresholds": 0.45631200067789696, "PR_Thresholds_Shift": 0.4562938066206662, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.35373537353735374, "Recall": 0.9825, "F1 score": 0.5201853077432165, "PR_Thresholds": 0.4562938066206662, "PR_Thresholds_Shift": 0.4559122785388507, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3534172661870504, "Recall": 0.9825, "F1 score": 0.5198412698412699, "PR_Thresholds": 0.4559122785388507, "PR_Thresholds_Shift": 0.45586933073587704, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.353099730458221, "Recall": 0.9825, "F1 score": 0.5194976867151355, "PR_Thresholds": 0.45586933073587704, "PR_Thresholds_Shift": 0.4571775711284017, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3556561085972851, "Recall": 0.9825, "F1 score": 0.5222591362126247, "PR_Thresholds": 0.4571775711284017, "PR_Thresholds_Shift": 0.4556531452227214, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3527827648114901, "Recall": 0.9825, "F1 score": 0.5191545574636723, "PR_Thresholds": 0.4556531452227214, "PR_Thresholds_Shift": 0.4402101219544699, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33192923336141533, "Recall": 0.985, "F1 score": 0.49653434152488973, "PR_Thresholds": 0.4402101219544699, "PR_Thresholds_Shift": 0.44024291790251496, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33220910623946037, "Recall": 0.985, "F1 score": 0.4968474148802018, "PR_Thresholds": 0.44024291790251496, "PR_Thresholds_Shift": 0.4404583337828386, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33248945147679326, "Recall": 0.985, "F1 score": 0.4971608832807572, "PR_Thresholds": 0.4404583337828386, "PR_Thresholds_Shift": 0.44072638112055956, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3327702702702703, "Recall": 0.985, "F1 score": 0.4974747474747475, "PR_Thresholds": 0.44072638112055956, "PR_Thresholds_Shift": 0.4407268556505994, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3330515638207946, "Recall": 0.985, "F1 score": 0.4977890082122552, "PR_Thresholds": 0.4407268556505994, "PR_Thresholds_Shift": 0.44089014077049976, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3333333333333333, "Recall": 0.985, "F1 score": 0.49810366624525915, "PR_Thresholds": 0.44089014077049976, "PR_Thresholds_Shift": 0.44148586940629647, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33446519524617996, "Recall": 0.985, "F1 score": 0.49936628643852976, "PR_Thresholds": 0.44148586940629647, "PR_Thresholds_Shift": 0.441053878060887, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3338983050847458, "Recall": 0.985, "F1 score": 0.49873417721518987, "PR_Thresholds": 0.441053878060887, "PR_Thresholds_Shift": 0.441071599321217, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3341815097540288, "Recall": 0.985, "F1 score": 0.4990500316656112, "PR_Thresholds": 0.441071599321217, "PR_Thresholds_Shift": 0.4415806222940289, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33474936278674594, "Recall": 0.985, "F1 score": 0.4996829422954978, "PR_Thresholds": 0.4415806222940289, "PR_Thresholds_Shift": 0.44205327647629716, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33503401360544216, "Recall": 0.985, "F1 score": 0.4999999999999999, "PR_Thresholds": 0.44205327647629716, "PR_Thresholds_Shift": 0.4422988186560686, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3353191489361702, "Recall": 0.985, "F1 score": 0.5003174603174604, "PR_Thresholds": 0.4422988186560686, "PR_Thresholds_Shift": 0.4401826409398387, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33164983164983164, "Recall": 0.985, "F1 score": 0.49622166246851385, "PR_Thresholds": 0.4401826409398387, "PR_Thresholds_Shift": 0.4410340976008303, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3336155800169348, "Recall": 0.985, "F1 score": 0.49841872232764073, "PR_Thresholds": 0.4410340976008303, "PR_Thresholds_Shift": 0.439934558301501, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3313708999158957, "Recall": 0.985, "F1 score": 0.4959093769666457, "PR_Thresholds": 0.439934558301501, "PR_Thresholds_Shift": 0.43738627955313764, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3286071726438699, "Recall": 0.985, "F1 score": 0.492808005003127, "PR_Thresholds": 0.43738627955313764, "PR_Thresholds_Shift": 0.43963941109878096, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3308144416456759, "Recall": 0.985, "F1 score": 0.4952859836580767, "PR_Thresholds": 0.43963941109878096, "PR_Thresholds_Shift": 0.43642020025326606, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3269709543568465, "Recall": 0.985, "F1 score": 0.49096573208722744, "PR_Thresholds": 0.43642020025326606, "PR_Thresholds_Shift": 0.43660647433430366, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3272425249169435, "Recall": 0.985, "F1 score": 0.49127182044887774, "PR_Thresholds": 0.43660647433430366, "PR_Thresholds_Shift": 0.43701242820742625, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32751454696591853, "Recall": 0.985, "F1 score": 0.4915782907049282, "PR_Thresholds": 0.43701242820742625, "PR_Thresholds_Shift": 0.4373152894319101, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3277870216306156, "Recall": 0.985, "F1 score": 0.49188514357053675, "PR_Thresholds": 0.4373152894319101, "PR_Thresholds_Shift": 0.43735811476536135, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32805995004163196, "Recall": 0.985, "F1 score": 0.4921923797626483, "PR_Thresholds": 0.43735811476536135, "PR_Thresholds_Shift": 0.4373586537820623, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3283333333333333, "Recall": 0.985, "F1 score": 0.4925, "PR_Thresholds": 0.4373586537820623, "PR_Thresholds_Shift": 0.4398606877784584, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3310924369747899, "Recall": 0.985, "F1 score": 0.49559748427672956, "PR_Thresholds": 0.4398606877784584, "PR_Thresholds_Shift": 0.44289699041746294, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33560477001703576, "Recall": 0.985, "F1 score": 0.5006353240152478, "PR_Thresholds": 0.44289699041746294, "PR_Thresholds_Shift": 0.438155978063983, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.329156223893066, "Recall": 0.985, "F1 score": 0.49342517219787096, "PR_Thresholds": 0.438155978063983, "PR_Thresholds_Shift": 0.4390690230951049, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3294314381270903, "Recall": 0.985, "F1 score": 0.49373433583959897, "PR_Thresholds": 0.4390690230951049, "PR_Thresholds_Shift": 0.439156338480662, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3297071129707113, "Recall": 0.985, "F1 score": 0.49404388714733544, "PR_Thresholds": 0.439156338480662, "PR_Thresholds_Shift": 0.4392025881873404, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32998324958123953, "Recall": 0.985, "F1 score": 0.49435382685069007, "PR_Thresholds": 0.4392025881873404, "PR_Thresholds_Shift": 0.43936678403520296, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3302598491198659, "Recall": 0.985, "F1 score": 0.49466415568110483, "PR_Thresholds": 0.43936678403520296, "PR_Thresholds_Shift": 0.43943269835354537, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33053691275167785, "Recall": 0.985, "F1 score": 0.4949748743718593, "PR_Thresholds": 0.43943269835354537, "PR_Thresholds_Shift": 0.43788125876952133, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.328881469115192, "Recall": 0.985, "F1 score": 0.4931163954943681, "PR_Thresholds": 0.43788125876952133, "PR_Thresholds_Shift": 0.44318932316677656, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3358908780903666, "Recall": 0.985, "F1 score": 0.5009535918626827, "PR_Thresholds": 0.44318932316677656, "PR_Thresholds_Shift": 0.4451762049723546, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33907056798623064, "Recall": 0.985, "F1 score": 0.5044814340588988, "PR_Thresholds": 0.4451762049723546, "PR_Thresholds_Shift": 0.44373630852388724, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.336464560204953, "Recall": 0.985, "F1 score": 0.501591343093571, "PR_Thresholds": 0.44373630852388724, "PR_Thresholds_Shift": 0.4473072473054628, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3423110338835795, "Recall": 0.985, "F1 score": 0.5080593165699548, "PR_Thresholds": 0.4473072473054628, "PR_Thresholds_Shift": 0.4477027045391174, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3426086956521739, "Recall": 0.985, "F1 score": 0.5083870967741936, "PR_Thresholds": 0.4477027045391174, "PR_Thresholds_Shift": 0.44808652608760835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3429068755439513, "Recall": 0.985, "F1 score": 0.5087153001936734, "PR_Thresholds": 0.44808652608760835, "PR_Thresholds_Shift": 0.44823975449355113, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.343205574912892, "Recall": 0.985, "F1 score": 0.5090439276485788, "PR_Thresholds": 0.44823975449355113, "PR_Thresholds_Shift": 0.4484811243351486, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3435047951176983, "Recall": 0.985, "F1 score": 0.5093729799612152, "PR_Thresholds": 0.4484811243351486, "PR_Thresholds_Shift": 0.4487488292182958, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.343804537521815, "Recall": 0.985, "F1 score": 0.5097024579560155, "PR_Thresholds": 0.4487488292182958, "PR_Thresholds_Shift": 0.4472844166003761, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3420138888888889, "Recall": 0.985, "F1 score": 0.5077319587628866, "PR_Thresholds": 0.4472844166003761, "PR_Thresholds_Shift": 0.44907775122307186, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3441048034934498, "Recall": 0.985, "F1 score": 0.5100323624595469, "PR_Thresholds": 0.44907775122307186, "PR_Thresholds_Shift": 0.4494025352732891, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3447069116360455, "Recall": 0.985, "F1 score": 0.5106934543097861, "PR_Thresholds": 0.4494025352732891, "PR_Thresholds_Shift": 0.4494356865115994, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3450087565674256, "Recall": 0.985, "F1 score": 0.5110246433203632, "PR_Thresholds": 0.4494356865115994, "PR_Thresholds_Shift": 0.45056758558558585, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3453111305872042, "Recall": 0.985, "F1 score": 0.5113562621674238, "PR_Thresholds": 0.45056758558558585, "PR_Thresholds_Shift": 0.4509955600484935, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3456140350877193, "Recall": 0.985, "F1 score": 0.5116883116883116, "PR_Thresholds": 0.4509955600484935, "PR_Thresholds_Shift": 0.45109281817860425, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34591747146619845, "Recall": 0.985, "F1 score": 0.5120207927225472, "PR_Thresholds": 0.45109281817860425, "PR_Thresholds_Shift": 0.4516083468744014, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3462214411247803, "Recall": 0.985, "F1 score": 0.5123537061118336, "PR_Thresholds": 0.4516083468744014, "PR_Thresholds_Shift": 0.4491721097649978, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34440559440559443, "Recall": 0.985, "F1 score": 0.5103626943005182, "PR_Thresholds": 0.4491721097649978, "PR_Thresholds_Shift": 0.44344334012502423, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3361774744027304, "Recall": 0.985, "F1 score": 0.5012722646310431, "PR_Thresholds": 0.44344334012502423, "PR_Thresholds_Shift": 0.44686599795383836, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3417172593235039, "Recall": 0.985, "F1 score": 0.507405022537025, "PR_Thresholds": 0.44686599795383836, "PR_Thresholds_Shift": 0.44634779334230656, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3411255411255411, "Recall": 0.985, "F1 score": 0.5067524115755627, "PR_Thresholds": 0.44634779334230656, "PR_Thresholds_Shift": 0.4438539414486432, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3367521367521368, "Recall": 0.985, "F1 score": 0.5019108280254777, "PR_Thresholds": 0.4438539414486432, "PR_Thresholds_Shift": 0.44398051012003187, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33704020530367834, "Recall": 0.985, "F1 score": 0.5022307202039515, "PR_Thresholds": 0.44398051012003187, "PR_Thresholds_Shift": 0.44399392854194386, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3373287671232877, "Recall": 0.985, "F1 score": 0.5025510204081632, "PR_Thresholds": 0.44399392854194386, "PR_Thresholds_Shift": 0.4442247928531454, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.337617823479006, "Recall": 0.985, "F1 score": 0.5028717294192725, "PR_Thresholds": 0.4442247928531454, "PR_Thresholds_Shift": 0.4448533909078946, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3379073756432247, "Recall": 0.985, "F1 score": 0.5031928480204342, "PR_Thresholds": 0.4448533909078946, "PR_Thresholds_Shift": 0.4449719167129544, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3381974248927039, "Recall": 0.985, "F1 score": 0.5035143769968051, "PR_Thresholds": 0.4449719167129544, "PR_Thresholds_Shift": 0.4464622773495231, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.341421143847487, "Recall": 0.985, "F1 score": 0.5070785070785071, "PR_Thresholds": 0.4464622773495231, "PR_Thresholds_Shift": 0.4450526484213783, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3384879725085911, "Recall": 0.985, "F1 score": 0.5038363171355499, "PR_Thresholds": 0.4450526484213783, "PR_Thresholds_Shift": 0.4452667687997924, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33936261843238585, "Recall": 0.985, "F1 score": 0.5048046124279308, "PR_Thresholds": 0.4452667687997924, "PR_Thresholds_Shift": 0.44528542241119673, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3396551724137931, "Recall": 0.985, "F1 score": 0.5051282051282051, "PR_Thresholds": 0.44528542241119673, "PR_Thresholds_Shift": 0.4454174031812694, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3399482312338223, "Recall": 0.985, "F1 score": 0.5054522129570237, "PR_Thresholds": 0.4454174031812694, "PR_Thresholds_Shift": 0.44553351133523206, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34024179620034545, "Recall": 0.985, "F1 score": 0.5057766367137356, "PR_Thresholds": 0.44553351133523206, "PR_Thresholds_Shift": 0.4460545764057914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.34053586862575624, "Recall": 0.985, "F1 score": 0.5061014771997431, "PR_Thresholds": 0.4460545764057914, "PR_Thresholds_Shift": 0.44622076550404977, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3408304498269896, "Recall": 0.985, "F1 score": 0.506426735218509, "PR_Thresholds": 0.44622076550404977, "PR_Thresholds_Shift": 0.44509075684018007, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.33877901977644026, "Recall": 0.985, "F1 score": 0.5041586692258477, "PR_Thresholds": 0.44509075684018007, "PR_Thresholds_Shift": 0.43633387053618056, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32669983416252074, "Recall": 0.985, "F1 score": 0.4906600249066002, "PR_Thresholds": 0.43633387053618056, "PR_Thresholds_Shift": 0.4362390649179163, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3264291632145816, "Recall": 0.985, "F1 score": 0.4903546981953952, "PR_Thresholds": 0.4362390649179163, "PR_Thresholds_Shift": 0.43572867638127366, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32588916459884204, "Recall": 0.985, "F1 score": 0.4897451833436917, "PR_Thresholds": 0.43572867638127366, "PR_Thresholds_Shift": 0.4308077176220431, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3187702265372168, "Recall": 0.985, "F1 score": 0.48166259168704156, "PR_Thresholds": 0.4308077176220431, "PR_Thresholds_Shift": 0.43057245981106057, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3185125303152789, "Recall": 0.985, "F1 score": 0.48136835675015266, "PR_Thresholds": 0.43057245981106057, "PR_Thresholds_Shift": 0.43050595558105453, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3182552504038772, "Recall": 0.985, "F1 score": 0.4810744810744811, "PR_Thresholds": 0.43050595558105453, "PR_Thresholds_Shift": 0.430479878371846, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31799838579499595, "Recall": 0.985, "F1 score": 0.48078096400244047, "PR_Thresholds": 0.430479878371846, "PR_Thresholds_Shift": 0.43032203308747324, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.317741935483871, "Recall": 0.985, "F1 score": 0.48048780487804876, "PR_Thresholds": 0.43032203308747324, "PR_Thresholds_Shift": 0.4303046483527512, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3174858984689766, "Recall": 0.985, "F1 score": 0.4801950030469226, "PR_Thresholds": 0.4303046483527512, "PR_Thresholds_Shift": 0.43008983592468364, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3172302737520129, "Recall": 0.985, "F1 score": 0.4799025578562729, "PR_Thresholds": 0.43008983592468364, "PR_Thresholds_Shift": 0.43007087700029323, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3169750603378922, "Recall": 0.985, "F1 score": 0.4796104686548996, "PR_Thresholds": 0.43007087700029323, "PR_Thresholds_Shift": 0.4298976190666337, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3167202572347267, "Recall": 0.985, "F1 score": 0.4793187347931874, "PR_Thresholds": 0.4298976190666337, "PR_Thresholds_Shift": 0.42948421010183835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3164658634538153, "Recall": 0.985, "F1 score": 0.47902735562310034, "PR_Thresholds": 0.42948421010183835, "PR_Thresholds_Shift": 0.42940251110551053, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3162118780096308, "Recall": 0.985, "F1 score": 0.47873633049817743, "PR_Thresholds": 0.42940251110551053, "PR_Thresholds_Shift": 0.4292228464501508, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31595829991980756, "Recall": 0.985, "F1 score": 0.4784456587735276, "PR_Thresholds": 0.4292228464501508, "PR_Thresholds_Shift": 0.42911350719816443, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3157051282051282, "Recall": 0.985, "F1 score": 0.4781553398058253, "PR_Thresholds": 0.42911350719816443, "PR_Thresholds_Shift": 0.4286934854767806, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3154523618895116, "Recall": 0.985, "F1 score": 0.477865372953305, "PR_Thresholds": 0.4286934854767806, "PR_Thresholds_Shift": 0.42868737312206634, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3152, "Recall": 0.985, "F1 score": 0.47757575757575754, "PR_Thresholds": 0.42868737312206634, "PR_Thresholds_Shift": 0.4286559176884488, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3149480415667466, "Recall": 0.985, "F1 score": 0.47728649303452453, "PR_Thresholds": 0.4286559176884488, "PR_Thresholds_Shift": 0.42860316252748004, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3146964856230032, "Recall": 0.985, "F1 score": 0.47699757869249393, "PR_Thresholds": 0.42860316252748004, "PR_Thresholds_Shift": 0.42804328082774296, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31444533120510776, "Recall": 0.985, "F1 score": 0.4767090139140956, "PR_Thresholds": 0.42804328082774296, "PR_Thresholds_Shift": 0.42779362319128056, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3139442231075697, "Recall": 0.985, "F1 score": 0.4761329305135952, "PR_Thresholds": 0.42779362319128056, "PR_Thresholds_Shift": 0.42776997995816063, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31369426751592355, "Recall": 0.985, "F1 score": 0.4758454106280193, "PR_Thresholds": 0.42776997995816063, "PR_Thresholds_Shift": 0.43579928806846097, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.326158940397351, "Recall": 0.985, "F1 score": 0.49004975124378114, "PR_Thresholds": 0.43579928806846097, "PR_Thresholds_Shift": 0.431205522515836, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31902834008097164, "Recall": 0.985, "F1 score": 0.48195718654434244, "PR_Thresholds": 0.431205522515836, "PR_Thresholds_Shift": 0.4317467532489543, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3192868719611021, "Recall": 0.985, "F1 score": 0.48225214198286415, "PR_Thresholds": 0.4317467532489543, "PR_Thresholds_Shift": 0.428027373366535, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3141945773524721, "Recall": 0.985, "F1 score": 0.4764207980652962, "PR_Thresholds": 0.428027373366535, "PR_Thresholds_Shift": 0.43194080252890943, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3198051948051948, "Recall": 0.985, "F1 score": 0.4828431372549019, "PR_Thresholds": 0.43194080252890943, "PR_Thresholds_Shift": 0.43178356177732397, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3195458231954582, "Recall": 0.985, "F1 score": 0.4825474586650337, "PR_Thresholds": 0.43178356177732397, "PR_Thresholds_Shift": 0.4354376191045378, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3256198347107438, "Recall": 0.985, "F1 score": 0.48944099378881983, "PR_Thresholds": 0.4354376191045378, "PR_Thresholds_Shift": 0.4354223258356602, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32535094962840627, "Recall": 0.985, "F1 score": 0.489137181874612, "PR_Thresholds": 0.4354223258356602, "PR_Thresholds_Shift": 0.43534438435398, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32481450948062657, "Recall": 0.985, "F1 score": 0.4885306881587105, "PR_Thresholds": 0.43534438435398, "PR_Thresholds_Shift": 0.43471619752589796, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3245469522240527, "Recall": 0.985, "F1 score": 0.4882280049566295, "PR_Thresholds": 0.43471619752589796, "PR_Thresholds_Shift": 0.43445822993544003, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3242798353909465, "Recall": 0.985, "F1 score": 0.48792569659442725, "PR_Thresholds": 0.43445822993544003, "PR_Thresholds_Shift": 0.43444021534774385, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32401315789473684, "Recall": 0.985, "F1 score": 0.48762376237623756, "PR_Thresholds": 0.43444021534774385, "PR_Thresholds_Shift": 0.4344286579586598, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.323746918652424, "Recall": 0.985, "F1 score": 0.4873222016079159, "PR_Thresholds": 0.4344286579586598, "PR_Thresholds_Shift": 0.4343675531815065, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32348111658456485, "Recall": 0.985, "F1 score": 0.48702101359703337, "PR_Thresholds": 0.4343675531815065, "PR_Thresholds_Shift": 0.43425317341036573, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3232157506152584, "Recall": 0.985, "F1 score": 0.48672019765287217, "PR_Thresholds": 0.43425317341036573, "PR_Thresholds_Shift": 0.4337838704028486, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32295081967213113, "Recall": 0.985, "F1 score": 0.4864197530864198, "PR_Thresholds": 0.4337838704028486, "PR_Thresholds_Shift": 0.43539792037788316, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3250825082508251, "Recall": 0.985, "F1 score": 0.48883374689826303, "PR_Thresholds": 0.43539792037788316, "PR_Thresholds_Shift": 0.4334842050844954, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32242225859247137, "Recall": 0.985, "F1 score": 0.48581997533908755, "PR_Thresholds": 0.4334842050844954, "PR_Thresholds_Shift": 0.4336291386922298, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3226863226863227, "Recall": 0.985, "F1 score": 0.486119679210364, "PR_Thresholds": 0.4336291386922298, "PR_Thresholds_Shift": 0.43210111638025034, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3203252032520325, "Recall": 0.985, "F1 score": 0.48343558282208593, "PR_Thresholds": 0.43210111638025034, "PR_Thresholds_Shift": 0.4327204075792808, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32084690553745926, "Recall": 0.985, "F1 score": 0.484029484029484, "PR_Thresholds": 0.4327204075792808, "PR_Thresholds_Shift": 0.43302027639677004, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3211083944580277, "Recall": 0.985, "F1 score": 0.4843269821757836, "PR_Thresholds": 0.43302027639677004, "PR_Thresholds_Shift": 0.4322122536917006, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3205858421480879, "Recall": 0.985, "F1 score": 0.48373235113566604, "PR_Thresholds": 0.4322122536917006, "PR_Thresholds_Shift": 0.4331558352782962, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3216326530612245, "Recall": 0.985, "F1 score": 0.48492307692307696, "PR_Thresholds": 0.4331558352782962, "PR_Thresholds_Shift": 0.4332143802872395, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32189542483660133, "Recall": 0.985, "F1 score": 0.4852216748768473, "PR_Thresholds": 0.4332143802872395, "PR_Thresholds_Shift": 0.4332313785220206, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3221586263286999, "Recall": 0.985, "F1 score": 0.4855206407886629, "PR_Thresholds": 0.4332313785220206, "PR_Thresholds_Shift": 0.4330857805851831, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.32137030995106036, "Recall": 0.985, "F1 score": 0.48462484624846247, "PR_Thresholds": 0.4330857805851831, "PR_Thresholds_Shift": 0.4319961590009843, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3200649878147847, "Recall": 0.985, "F1 score": 0.4831391784181484, "PR_Thresholds": 0.4319961590009843, "PR_Thresholds_Shift": 0.4162672439680152, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29946929492039426, "Recall": 0.9875, "F1 score": 0.45956951716114025, "PR_Thresholds": 0.4162672439680152, "PR_Thresholds_Shift": 0.4164717575613301, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29969650986342944, "Recall": 0.9875, "F1 score": 0.459837019790454, "PR_Thresholds": 0.4164717575613301, "PR_Thresholds_Shift": 0.4181260509804569, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3012967200610221, "Recall": 0.9875, "F1 score": 0.46171829339567505, "PR_Thresholds": 0.4181260509804569, "PR_Thresholds_Shift": 0.4165728521261367, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2999240698557327, "Recall": 0.9875, "F1 score": 0.460104834012813, "PR_Thresholds": 0.4165728521261367, "PR_Thresholds_Shift": 0.41696674925702654, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30015197568389057, "Recall": 0.9875, "F1 score": 0.4603729603729604, "PR_Thresholds": 0.41696674925702654, "PR_Thresholds_Shift": 0.4173347277408667, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30038022813688214, "Recall": 0.9875, "F1 score": 0.4606413994169096, "PR_Thresholds": 0.4173347277408667, "PR_Thresholds_Shift": 0.4176315270949872, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3006088280060883, "Recall": 0.9875, "F1 score": 0.46091015169194866, "PR_Thresholds": 0.4176315270949872, "PR_Thresholds_Shift": 0.4179356094019919, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3008377760853008, "Recall": 0.9875, "F1 score": 0.4611792177466434, "PR_Thresholds": 0.4179356094019919, "PR_Thresholds_Shift": 0.418067901420149, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3010670731707317, "Recall": 0.9875, "F1 score": 0.4614485981308412, "PR_Thresholds": 0.418067901420149, "PR_Thresholds_Shift": 0.41884861254249756, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3022188217291507, "Recall": 0.9875, "F1 score": 0.4628002343292326, "PR_Thresholds": 0.41884861254249756, "PR_Thresholds_Shift": 0.41837349044725336, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3017570664629488, "Recall": 0.9875, "F1 score": 0.4622586307782329, "PR_Thresholds": 0.41837349044725336, "PR_Thresholds_Shift": 0.4183946094968444, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30198776758409784, "Recall": 0.9875, "F1 score": 0.46252927400468385, "PR_Thresholds": 0.4183946094968444, "PR_Thresholds_Shift": 0.41899311281129537, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30245022970903523, "Recall": 0.9875, "F1 score": 0.46307151230949595, "PR_Thresholds": 0.41899311281129537, "PR_Thresholds_Shift": 0.4190276425146557, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30268199233716475, "Recall": 0.9875, "F1 score": 0.46334310850439886, "PR_Thresholds": 0.4190276425146557, "PR_Thresholds_Shift": 0.419093223823544, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3029141104294479, "Recall": 0.9875, "F1 score": 0.46361502347417843, "PR_Thresholds": 0.419093223823544, "PR_Thresholds_Shift": 0.4191382731873209, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3031465848042978, "Recall": 0.9875, "F1 score": 0.46388725778038764, "PR_Thresholds": 0.4191382731873209, "PR_Thresholds_Shift": 0.41594007896498914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29924242424242425, "Recall": 0.9875, "F1 score": 0.45930232558139533, "PR_Thresholds": 0.41594007896498914, "PR_Thresholds_Shift": 0.419171523899356, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3033794162826421, "Recall": 0.9875, "F1 score": 0.464159811985899, "PR_Thresholds": 0.419171523899356, "PR_Thresholds_Shift": 0.4181751815039259, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3015267175572519, "Recall": 0.9875, "F1 score": 0.4619883040935672, "PR_Thresholds": 0.4181751815039259, "PR_Thresholds_Shift": 0.41576626544636724, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29901589704769116, "Recall": 0.9875, "F1 score": 0.45903544450900635, "PR_Thresholds": 0.41576626544636724, "PR_Thresholds_Shift": 0.4141061335532957, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29632408102025504, "Recall": 0.9875, "F1 score": 0.45585689555683784, "PR_Thresholds": 0.4141061335532957, "PR_Thresholds_Shift": 0.41519671826683185, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29856386999244144, "Recall": 0.9875, "F1 score": 0.4585026117237377, "PR_Thresholds": 0.41519671826683185, "PR_Thresholds_Shift": 0.41925903355555577, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30361260568793236, "Recall": 0.9875, "F1 score": 0.4644326866549089, "PR_Thresholds": 0.41925903355555577, "PR_Thresholds_Shift": 0.41212060687927726, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29455630126771065, "Recall": 0.9875, "F1 score": 0.4537622056289489, "PR_Thresholds": 0.41212060687927726, "PR_Thresholds_Shift": 0.41217622308367274, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2947761194029851, "Recall": 0.9875, "F1 score": 0.4540229885057471, "PR_Thresholds": 0.41217622308367274, "PR_Thresholds_Shift": 0.4127236834987108, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2949962658700523, "Recall": 0.9875, "F1 score": 0.45428407130534787, "PR_Thresholds": 0.4127236834987108, "PR_Thresholds_Shift": 0.41301514458790917, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2952167414050822, "Recall": 0.9875, "F1 score": 0.45454545454545453, "PR_Thresholds": 0.41301514458790917, "PR_Thresholds_Shift": 0.41306494490299006, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2954375467464473, "Recall": 0.9875, "F1 score": 0.4548071387449627, "PR_Thresholds": 0.41306494490299006, "PR_Thresholds_Shift": 0.41308528683347123, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29565868263473055, "Recall": 0.9875, "F1 score": 0.4550691244239632, "PR_Thresholds": 0.41308528683347123, "PR_Thresholds_Shift": 0.4134349966512459, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2958801498127341, "Recall": 0.9875, "F1 score": 0.45533141210374634, "PR_Thresholds": 0.4134349966512459, "PR_Thresholds_Shift": 0.41531474073316405, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2987897125567322, "Recall": 0.9875, "F1 score": 0.4587688734030197, "PR_Thresholds": 0.41531474073316405, "PR_Thresholds_Shift": 0.4140208086784598, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29610194902548725, "Recall": 0.9875, "F1 score": 0.4555940023068051, "PR_Thresholds": 0.4140208086784598, "PR_Thresholds_Shift": 0.4142568765938364, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29676934635612323, "Recall": 0.9875, "F1 score": 0.45638359329867134, "PR_Thresholds": 0.4142568765938364, "PR_Thresholds_Shift": 0.4143776872173654, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29699248120300753, "Recall": 0.9875, "F1 score": 0.45664739884393063, "PR_Thresholds": 0.4143776872173654, "PR_Thresholds_Shift": 0.41468080959938064, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29721595184349137, "Recall": 0.9875, "F1 score": 0.45691150954308846, "PR_Thresholds": 0.41468080959938064, "PR_Thresholds_Shift": 0.4148353405560194, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29743975903614456, "Recall": 0.9875, "F1 score": 0.45717592592592593, "PR_Thresholds": 0.4148353405560194, "PR_Thresholds_Shift": 0.4149016502495101, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29766390354182365, "Recall": 0.9875, "F1 score": 0.45744064852345107, "PR_Thresholds": 0.4149016502495101, "PR_Thresholds_Shift": 0.41490235883602056, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29788838612368024, "Recall": 0.9875, "F1 score": 0.45770567786790267, "PR_Thresholds": 0.41490235883602056, "PR_Thresholds_Shift": 0.41493683760245903, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2981132075471698, "Recall": 0.9875, "F1 score": 0.4579710144927536, "PR_Thresholds": 0.41493683760245903, "PR_Thresholds_Shift": 0.4150067962702723, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2983383685800604, "Recall": 0.9875, "F1 score": 0.4582366589327146, "PR_Thresholds": 0.4150067962702723, "PR_Thresholds_Shift": 0.4141500965898492, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29654654654654655, "Recall": 0.9875, "F1 score": 0.4561200923787529, "PR_Thresholds": 0.4141500965898492, "PR_Thresholds_Shift": 0.41966537260741643, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3038461538461538, "Recall": 0.9875, "F1 score": 0.4647058823529411, "PR_Thresholds": 0.41966537260741643, "PR_Thresholds_Shift": 0.4225617082265875, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30739299610894943, "Recall": 0.9875, "F1 score": 0.46884272997032644, "PR_Thresholds": 0.4225617082265875, "PR_Thresholds_Shift": 0.4200195402755703, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30431432973805855, "Recall": 0.9875, "F1 score": 0.4652532391048292, "PR_Thresholds": 0.4200195402755703, "PR_Thresholds_Shift": 0.425066115236706, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31004709576138145, "Recall": 0.9875, "F1 score": 0.47192353643966545, "PR_Thresholds": 0.425066115236706, "PR_Thresholds_Shift": 0.4250921281424628, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3102906520031422, "Recall": 0.9875, "F1 score": 0.47220561864913335, "PR_Thresholds": 0.4250921281424628, "PR_Thresholds_Shift": 0.42529343575270656, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31053459119496857, "Recall": 0.9875, "F1 score": 0.47248803827751196, "PR_Thresholds": 0.42529343575270656, "PR_Thresholds_Shift": 0.4258064444517142, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3107789142407553, "Recall": 0.9875, "F1 score": 0.4727707959305805, "PR_Thresholds": 0.4258064444517142, "PR_Thresholds_Shift": 0.42598560793098805, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3110236220472441, "Recall": 0.9875, "F1 score": 0.47305389221556887, "PR_Thresholds": 0.42598560793098805, "PR_Thresholds_Shift": 0.4260486760150244, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3112687155240347, "Recall": 0.9875, "F1 score": 0.4733373277411624, "PR_Thresholds": 0.4260486760150244, "PR_Thresholds_Shift": 0.41987191920755534, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3040800615858353, "Recall": 0.9875, "F1 score": 0.46497939964685114, "PR_Thresholds": 0.41987191920755534, "PR_Thresholds_Shift": 0.4262772810366773, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31176006314127863, "Recall": 0.9875, "F1 score": 0.47390521895620874, "PR_Thresholds": 0.4262772810366773, "PR_Thresholds_Shift": 0.42428229514669835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30980392156862746, "Recall": 0.9875, "F1 score": 0.47164179104477616, "PR_Thresholds": 0.42428229514669835, "PR_Thresholds_Shift": 0.4263733409901856, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31200631911532384, "Recall": 0.9875, "F1 score": 0.4741896758703481, "PR_Thresholds": 0.4263733409901856, "PR_Thresholds_Shift": 0.4265397825414463, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3125, "Recall": 0.9875, "F1 score": 0.47475961538461536, "PR_Thresholds": 0.4265397825414463, "PR_Thresholds_Shift": 0.42694823055000347, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31274742676167855, "Recall": 0.9875, "F1 score": 0.4750450992182802, "PR_Thresholds": 0.42694823055000347, "PR_Thresholds_Shift": 0.4270427873939722, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31299524564183834, "Recall": 0.9875, "F1 score": 0.47533092659446446, "PR_Thresholds": 0.4270427873939722, "PR_Thresholds_Shift": 0.42718087595512766, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3132434575733545, "Recall": 0.9875, "F1 score": 0.47561709813365444, "PR_Thresholds": 0.42718087595512766, "PR_Thresholds_Shift": 0.4274369079971361, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3134920634920635, "Recall": 0.9875, "F1 score": 0.4759036144578313, "PR_Thresholds": 0.4274369079971361, "PR_Thresholds_Shift": 0.4274753594246681, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31374106433677523, "Recall": 0.9875, "F1 score": 0.47619047619047616, "PR_Thresholds": 0.4274753594246681, "PR_Thresholds_Shift": 0.427512377113447, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3139904610492846, "Recall": 0.9875, "F1 score": 0.4764776839565742, "PR_Thresholds": 0.427512377113447, "PR_Thresholds_Shift": 0.42756608221252823, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3142402545743834, "Recall": 0.9875, "F1 score": 0.47676523838261914, "PR_Thresholds": 0.42756608221252823, "PR_Thresholds_Shift": 0.42639505630648905, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.31225296442687744, "Recall": 0.9875, "F1 score": 0.47447447447447444, "PR_Thresholds": 0.42639505630648905, "PR_Thresholds_Shift": 0.42412190287371315, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30956112852664575, "Recall": 0.9875, "F1 score": 0.4713603818615752, "PR_Thresholds": 0.42412190287371315, "PR_Thresholds_Shift": 0.4260901072312826, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3115141955835962, "Recall": 0.9875, "F1 score": 0.473621103117506, "PR_Thresholds": 0.4260901072312826, "PR_Thresholds_Shift": 0.4239318143940494, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30907668231611896, "Recall": 0.9875, "F1 score": 0.4707985697258641, "PR_Thresholds": 0.4239318143940494, "PR_Thresholds_Shift": 0.4240827105033592, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3093187157400157, "Recall": 0.9875, "F1 score": 0.4710793082886106, "PR_Thresholds": 0.4240827105033592, "PR_Thresholds_Shift": 0.4203717298076852, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30478395061728397, "Recall": 0.9875, "F1 score": 0.4658018867924529, "PR_Thresholds": 0.4203717298076852, "PR_Thresholds_Shift": 0.42039035990862983, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.305019305019305, "Recall": 0.9875, "F1 score": 0.46607669616519176, "PR_Thresholds": 0.42039035990862983, "PR_Thresholds_Shift": 0.42066160524762836, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30525502318392583, "Recall": 0.9875, "F1 score": 0.4663518299881936, "PR_Thresholds": 0.42066160524762836, "PR_Thresholds_Shift": 0.42072658793653417, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30549110595514306, "Recall": 0.9875, "F1 score": 0.4666272888363851, "PR_Thresholds": 0.42072658793653417, "PR_Thresholds_Shift": 0.4208689223167835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30572755417956654, "Recall": 0.9875, "F1 score": 0.466903073286052, "PR_Thresholds": 0.4208689223167835, "PR_Thresholds_Shift": 0.4211127476061782, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3059643687064291, "Recall": 0.9875, "F1 score": 0.4671791839148433, "PR_Thresholds": 0.4211127476061782, "PR_Thresholds_Shift": 0.4215775717452297, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3062015503875969, "Recall": 0.9875, "F1 score": 0.4674556213017752, "PR_Thresholds": 0.4215775717452297, "PR_Thresholds_Shift": 0.4216127101672942, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3064391000775795, "Recall": 0.9875, "F1 score": 0.46773238602723505, "PR_Thresholds": 0.4216127101672942, "PR_Thresholds_Shift": 0.4201147695098052, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3045489591364688, "Recall": 0.9875, "F1 score": 0.4655274012964055, "PR_Thresholds": 0.4201147695098052, "PR_Thresholds_Shift": 0.4220915292614281, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30691530691530694, "Recall": 0.9875, "F1 score": 0.46828689982216953, "PR_Thresholds": 0.4220915292614281, "PR_Thresholds_Shift": 0.42176318465039214, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30667701863354035, "Recall": 0.9875, "F1 score": 0.46800947867298576, "PR_Thresholds": 0.42176318465039214, "PR_Thresholds_Shift": 0.42370526344536336, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.30859375, "Recall": 0.9875, "F1 score": 0.47023809523809523, "PR_Thresholds": 0.42370526344536336, "PR_Thresholds_Shift": 0.4234314285358758, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3083528493364559, "Recall": 0.9875, "F1 score": 0.4699583581201667, "PR_Thresholds": 0.4234314285358758, "PR_Thresholds_Shift": 0.42334988203687196, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3081123244929797, "Recall": 0.9875, "F1 score": 0.4696789536266349, "PR_Thresholds": 0.42334988203687196, "PR_Thresholds_Shift": 0.42392653174746286, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.308835027365129, "Recall": 0.9875, "F1 score": 0.4705181655747469, "PR_Thresholds": 0.42392653174746286, "PR_Thresholds_Shift": 0.4229224429547368, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3076323987538941, "Recall": 0.9875, "F1 score": 0.4691211401425179, "PR_Thresholds": 0.4229224429547368, "PR_Thresholds_Shift": 0.4221039887479895, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.307153965785381, "Recall": 0.9875, "F1 score": 0.46856465005931197, "PR_Thresholds": 0.4221039887479895, "PR_Thresholds_Shift": 0.423087142421378, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.3078721745908028, "Recall": 0.9875, "F1 score": 0.46939988116458703, "PR_Thresholds": 0.423087142421378, "PR_Thresholds_Shift": 0.40704952160066676, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28989751098096633, "Recall": 0.99, "F1 score": 0.44847112117780297, "PR_Thresholds": 0.40704952160066676, "PR_Thresholds_Shift": 0.40610659167031676, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2884195193008012, "Recall": 0.99, "F1 score": 0.44670050761421315, "PR_Thresholds": 0.40610659167031676, "PR_Thresholds_Shift": 0.40695546256532544, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2896854425749817, "Recall": 0.99, "F1 score": 0.4482173174872665, "PR_Thresholds": 0.40695546256532544, "PR_Thresholds_Shift": 0.4066697045668659, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2894736842105263, "Recall": 0.99, "F1 score": 0.44796380090497734, "PR_Thresholds": 0.4066697045668659, "PR_Thresholds_Shift": 0.4066623836718127, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2892622352081812, "Recall": 0.99, "F1 score": 0.4477105709440362, "PR_Thresholds": 0.4066623836718127, "PR_Thresholds_Shift": 0.40649596010497946, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28905109489051095, "Recall": 0.99, "F1 score": 0.447457627118644, "PR_Thresholds": 0.40649596010497946, "PR_Thresholds_Shift": 0.40644105963386945, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2888402625820569, "Recall": 0.99, "F1 score": 0.4472049689440994, "PR_Thresholds": 0.40644105963386945, "PR_Thresholds_Shift": 0.4064329588918757, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2886297376093295, "Recall": 0.99, "F1 score": 0.4469525959367946, "PR_Thresholds": 0.4064329588918757, "PR_Thresholds_Shift": 0.40606714063924076, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28820960698689957, "Recall": 0.99, "F1 score": 0.4464487034949267, "PR_Thresholds": 0.40606714063924076, "PR_Thresholds_Shift": 0.40548051808737623, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28737300435413643, "Recall": 0.99, "F1 score": 0.44544431946006746, "PR_Thresholds": 0.40548051808737623, "PR_Thresholds_Shift": 0.4056312896116383, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2877906976744186, "Recall": 0.99, "F1 score": 0.44594594594594594, "PR_Thresholds": 0.4056312896116383, "PR_Thresholds_Shift": 0.40551937393212895, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2875816993464052, "Recall": 0.99, "F1 score": 0.4456949915588069, "PR_Thresholds": 0.40551937393212895, "PR_Thresholds_Shift": 0.4054586320645436, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2871646120377085, "Recall": 0.99, "F1 score": 0.44519392917369305, "PR_Thresholds": 0.4054586320645436, "PR_Thresholds_Shift": 0.40529591831990097, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28695652173913044, "Recall": 0.99, "F1 score": 0.4449438202247192, "PR_Thresholds": 0.40529591831990097, "PR_Thresholds_Shift": 0.40518619091434127, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28674873280231716, "Recall": 0.99, "F1 score": 0.44469399213924765, "PR_Thresholds": 0.40518619091434127, "PR_Thresholds_Shift": 0.40449886801238827, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28633405639913234, "Recall": 0.99, "F1 score": 0.4441951766685362, "PR_Thresholds": 0.40449886801238827, "PR_Thresholds_Shift": 0.4044890273038665, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2861271676300578, "Recall": 0.99, "F1 score": 0.4439461883408072, "PR_Thresholds": 0.4044890273038665, "PR_Thresholds_Shift": 0.40710209944288056, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29010989010989013, "Recall": 0.99, "F1 score": 0.44872521246458924, "PR_Thresholds": 0.40710209944288056, "PR_Thresholds_Shift": 0.4060099392920245, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.288, "Recall": 0.99, "F1 score": 0.4461971830985915, "PR_Thresholds": 0.4060099392920245, "PR_Thresholds_Shift": 0.4073869900471934, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2903225806451613, "Recall": 0.99, "F1 score": 0.4489795918367347, "PR_Thresholds": 0.4073869900471934, "PR_Thresholds_Shift": 0.4050510713782099, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2865412445730825, "Recall": 0.99, "F1 score": 0.44444444444444436, "PR_Thresholds": 0.4050510713782099, "PR_Thresholds_Shift": 0.4074690451408941, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2907488986784141, "Recall": 0.99, "F1 score": 0.4494892167990919, "PR_Thresholds": 0.4074690451408941, "PR_Thresholds_Shift": 0.4074418479246119, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2905355832721937, "Recall": 0.99, "F1 score": 0.44923425978445836, "PR_Thresholds": 0.4074418479246119, "PR_Thresholds_Shift": 0.4120434607609137, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29486224869694716, "Recall": 0.99, "F1 score": 0.45438898450946646, "PR_Thresholds": 0.4120434607609137, "PR_Thresholds_Shift": 0.4116975119092696, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29464285714285715, "Recall": 0.99, "F1 score": 0.4541284403669725, "PR_Thresholds": 0.4116975119092696, "PR_Thresholds_Shift": 0.41206667419240556, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29508196721311475, "Recall": 0.99, "F1 score": 0.4546498277841561, "PR_Thresholds": 0.41206667419240556, "PR_Thresholds_Shift": 0.4113390840302069, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29442379182156136, "Recall": 0.99, "F1 score": 0.4538681948424069, "PR_Thresholds": 0.4113390840302069, "PR_Thresholds_Shift": 0.41117493415215156, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29420505200594355, "Recall": 0.99, "F1 score": 0.45360824742268047, "PR_Thresholds": 0.41117493415215156, "PR_Thresholds_Shift": 0.4109744980181061, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29398663697104677, "Recall": 0.99, "F1 score": 0.45334859759587864, "PR_Thresholds": 0.4109744980181061, "PR_Thresholds_Shift": 0.41071583805413553, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29376854599406527, "Recall": 0.99, "F1 score": 0.4530892448512585, "PR_Thresholds": 0.41071583805413553, "PR_Thresholds_Shift": 0.41060528163434135, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2935507783543366, "Recall": 0.99, "F1 score": 0.45283018867924535, "PR_Thresholds": 0.41060528163434135, "PR_Thresholds_Shift": 0.41046690720022727, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29311621021465584, "Recall": 0.99, "F1 score": 0.4523129640205597, "PR_Thresholds": 0.41046690720022727, "PR_Thresholds_Shift": 0.4106001030820459, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29333333333333333, "Recall": 0.99, "F1 score": 0.4525714285714286, "PR_Thresholds": 0.4106001030820459, "PR_Thresholds_Shift": 0.4097483113162535, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2926829268292683, "Recall": 0.99, "F1 score": 0.45179691956645746, "PR_Thresholds": 0.4097483113162535, "PR_Thresholds_Shift": 0.40947078968138145, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29246676514032494, "Recall": 0.99, "F1 score": 0.4515393386545039, "PR_Thresholds": 0.40947078968138145, "PR_Thresholds_Shift": 0.40930508185689474, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2922509225092251, "Recall": 0.99, "F1 score": 0.4512820512820513, "PR_Thresholds": 0.40930508185689474, "PR_Thresholds_Shift": 0.4085447459432682, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2920353982300885, "Recall": 0.99, "F1 score": 0.4510250569476082, "PR_Thresholds": 0.4085447459432682, "PR_Thresholds_Shift": 0.408189622440753, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2918201915991157, "Recall": 0.99, "F1 score": 0.45076835515082525, "PR_Thresholds": 0.408189622440753, "PR_Thresholds_Shift": 0.4079711918257922, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2916053019145803, "Recall": 0.99, "F1 score": 0.45051194539249145, "PR_Thresholds": 0.4079711918257922, "PR_Thresholds_Shift": 0.4079371773154083, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2913907284768212, "Recall": 0.99, "F1 score": 0.450255827174531, "PR_Thresholds": 0.4079371773154083, "PR_Thresholds_Shift": 0.4077678366797264, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2911764705882353, "Recall": 0.99, "F1 score": 0.45, "PR_Thresholds": 0.4077678366797264, "PR_Thresholds_Shift": 0.40766974385943106, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2909625275532697, "Recall": 0.99, "F1 score": 0.44974446337308355, "PR_Thresholds": 0.40766974385943106, "PR_Thresholds_Shift": 0.40988107851077293, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.29289940828402367, "Recall": 0.99, "F1 score": 0.4520547945205479, "PR_Thresholds": 0.40988107851077293, "PR_Thresholds_Shift": 0.40223630242981484, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28540618260244427, "Recall": 0.9925, "F1 score": 0.4433277498604132, "PR_Thresholds": 0.40223630242981484, "PR_Thresholds_Shift": 0.40200665101799415, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28499641062455133, "Recall": 0.9925, "F1 score": 0.4428332403792527, "PR_Thresholds": 0.40200665101799415, "PR_Thresholds_Shift": 0.4022152325828832, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28520114942528735, "Recall": 0.9925, "F1 score": 0.4430803571428571, "PR_Thresholds": 0.4022152325828832, "PR_Thresholds_Shift": 0.402262221636584, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28561151079136693, "Recall": 0.9925, "F1 score": 0.4435754189944135, "PR_Thresholds": 0.402262221636584, "PR_Thresholds_Shift": 0.40311792505327226, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2862292718096611, "Recall": 0.9925, "F1 score": 0.4443200895355344, "PR_Thresholds": 0.40311792505327226, "PR_Thresholds_Shift": 0.40308515946463047, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28602305475504325, "Recall": 0.9925, "F1 score": 0.4440715883668905, "PR_Thresholds": 0.40308515946463047, "PR_Thresholds_Shift": 0.4035993008042521, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28643578643578643, "Recall": 0.9925, "F1 score": 0.4445688689809631, "PR_Thresholds": 0.4035993008042521, "PR_Thresholds_Shift": 0.4037671713037126, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28664259927797836, "Recall": 0.9925, "F1 score": 0.44481792717086843, "PR_Thresholds": 0.4037671713037126, "PR_Thresholds_Shift": 0.4023395556926437, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28581713462922964, "Recall": 0.9925, "F1 score": 0.44382336500838454, "PR_Thresholds": 0.4023395556926437, "PR_Thresholds_Shift": 0.3907758473542345, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2754325259515571, "Recall": 0.995, "F1 score": 0.43143631436314367, "PR_Thresholds": 0.3907758473542345, "PR_Thresholds_Shift": 0.3909602127474674, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2756232686980609, "Recall": 0.995, "F1 score": 0.43167028199566154, "PR_Thresholds": 0.3909602127474674, "PR_Thresholds_Shift": 0.3915224174247516, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2758142758142758, "Recall": 0.995, "F1 score": 0.4319045035268584, "PR_Thresholds": 0.3915224174247516, "PR_Thresholds_Shift": 0.3916163543023074, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27600554785020803, "Recall": 0.995, "F1 score": 0.4321389793702497, "PR_Thresholds": 0.3916163543023074, "PR_Thresholds_Shift": 0.3916887381039708, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2761970853573907, "Recall": 0.995, "F1 score": 0.4323737099402499, "PR_Thresholds": 0.3916887381039708, "PR_Thresholds_Shift": 0.3928409794797343, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2763888888888889, "Recall": 0.995, "F1 score": 0.4326086956521739, "PR_Thresholds": 0.3928409794797343, "PR_Thresholds_Shift": 0.3930650437506766, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27658095899930507, "Recall": 0.995, "F1 score": 0.4328439369222404, "PR_Thresholds": 0.3930650437506766, "PR_Thresholds_Shift": 0.39335464102347123, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27696590118302017, "Recall": 0.995, "F1 score": 0.4333151878062057, "PR_Thresholds": 0.39335464102347123, "PR_Thresholds_Shift": 0.3934101650971405, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27715877437325903, "Recall": 0.995, "F1 score": 0.43355119825708066, "PR_Thresholds": 0.3934101650971405, "PR_Thresholds_Shift": 0.39341806509590627, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27735191637630663, "Recall": 0.995, "F1 score": 0.43378746594005446, "PR_Thresholds": 0.39341806509590627, "PR_Thresholds_Shift": 0.39342351223050953, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2775453277545328, "Recall": 0.995, "F1 score": 0.43402399127589963, "PR_Thresholds": 0.39342351223050953, "PR_Thresholds_Shift": 0.3934780422352208, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2777390090718772, "Recall": 0.995, "F1 score": 0.4342607746863067, "PR_Thresholds": 0.3934780422352208, "PR_Thresholds_Shift": 0.39367129929258055, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2779329608938548, "Recall": 0.995, "F1 score": 0.43449781659388653, "PR_Thresholds": 0.39367129929258055, "PR_Thresholds_Shift": 0.3905918544547893, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2752420470262794, "Recall": 0.995, "F1 score": 0.4312026002166847, "PR_Thresholds": 0.3905918544547893, "PR_Thresholds_Shift": 0.3932121798988447, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2767732962447844, "Recall": 0.995, "F1 score": 0.4330794341675735, "PR_Thresholds": 0.3932121798988447, "PR_Thresholds_Shift": 0.3905763341814481, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2750518313752592, "Recall": 0.995, "F1 score": 0.43096913914455875, "PR_Thresholds": 0.3905763341814481, "PR_Thresholds_Shift": 0.38740483942112297, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2722298221614227, "Recall": 0.995, "F1 score": 0.4274973147153599, "PR_Thresholds": 0.38740483942112297, "PR_Thresholds_Shift": 0.3901407694116193, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.274672187715666, "Recall": 0.995, "F1 score": 0.4305029745808545, "PR_Thresholds": 0.3901407694116193, "PR_Thresholds_Shift": 0.3872781791698722, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2718579234972678, "Recall": 0.995, "F1 score": 0.4270386266094421, "PR_Thresholds": 0.3872781791698722, "PR_Thresholds_Shift": 0.38736638752490515, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27204374572795625, "Recall": 0.995, "F1 score": 0.42726784755770264, "PR_Thresholds": 0.38736638752490515, "PR_Thresholds_Shift": 0.39402264841531875, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2781271837875611, "Recall": 0.995, "F1 score": 0.4347351174221737, "PR_Thresholds": 0.39402264841531875, "PR_Thresholds_Shift": 0.3874369523240167, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2724161533196441, "Recall": 0.995, "F1 score": 0.42772702847931227, "PR_Thresholds": 0.3874369523240167, "PR_Thresholds_Shift": 0.38747211997157105, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2726027397260274, "Recall": 0.995, "F1 score": 0.42795698924731185, "PR_Thresholds": 0.38747211997157105, "PR_Thresholds_Shift": 0.38765359948333117, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2729766803840878, "Recall": 0.995, "F1 score": 0.4284176533907428, "PR_Thresholds": 0.38765359948333117, "PR_Thresholds_Shift": 0.3901953834924077, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27486187845303867, "Recall": 0.995, "F1 score": 0.43073593073593075, "PR_Thresholds": 0.3901953834924077, "PR_Thresholds_Shift": 0.3878248295846031, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2731640356897735, "Recall": 0.995, "F1 score": 0.4286483575659666, "PR_Thresholds": 0.3878248295846031, "PR_Thresholds_Shift": 0.3881481891008173, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27353951890034367, "Recall": 0.995, "F1 score": 0.42911051212938006, "PR_Thresholds": 0.3881481891008173, "PR_Thresholds_Shift": 0.38837811092336055, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2737276478679505, "Recall": 0.995, "F1 score": 0.42934196332254587, "PR_Thresholds": 0.38837811092336055, "PR_Thresholds_Shift": 0.3886331455637008, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27391603578802476, "Recall": 0.995, "F1 score": 0.42957366432811656, "PR_Thresholds": 0.3886331455637008, "PR_Thresholds_Shift": 0.38867283717774176, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2741046831955923, "Recall": 0.995, "F1 score": 0.42980561555075586, "PR_Thresholds": 0.38867283717774176, "PR_Thresholds_Shift": 0.388737626272726, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2742935906271537, "Recall": 0.995, "F1 score": 0.4300378173960022, "PR_Thresholds": 0.388737626272726, "PR_Thresholds_Shift": 0.3894193278902039, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27448275862068966, "Recall": 0.995, "F1 score": 0.4302702702702703, "PR_Thresholds": 0.3894193278902039, "PR_Thresholds_Shift": 0.3881238758697445, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2733516483516483, "Recall": 0.995, "F1 score": 0.4288793103448275, "PR_Thresholds": 0.3881238758697445, "PR_Thresholds_Shift": 0.39419165533973305, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2783216783216783, "Recall": 0.995, "F1 score": 0.4349726775956284, "PR_Thresholds": 0.39419165533973305, "PR_Thresholds_Shift": 0.3874749508810783, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2727895819054147, "Recall": 0.995, "F1 score": 0.4281871974179667, "PR_Thresholds": 0.3874749508810783, "PR_Thresholds_Shift": 0.394699155142298, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27871148459383754, "Recall": 0.995, "F1 score": 0.43544857768052514, "PR_Thresholds": 0.394699155142298, "PR_Thresholds_Shift": 0.39809975592674873, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28267045454545453, "Recall": 0.995, "F1 score": 0.44026548672566373, "PR_Thresholds": 0.39809975592674873, "PR_Thresholds_Shift": 0.3982295955238896, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2828713574982232, "Recall": 0.995, "F1 score": 0.4405091311566131, "PR_Thresholds": 0.3982295955238896, "PR_Thresholds_Shift": 0.39832912153017186, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.283072546230441, "Recall": 0.995, "F1 score": 0.4407530454042082, "PR_Thresholds": 0.39832912153017186, "PR_Thresholds_Shift": 0.3985463025505063, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28327402135231317, "Recall": 0.995, "F1 score": 0.44099722991689755, "PR_Thresholds": 0.3985463025505063, "PR_Thresholds_Shift": 0.3988897828264827, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28347578347578345, "Recall": 0.995, "F1 score": 0.44124168514412415, "PR_Thresholds": 0.3988897828264827, "PR_Thresholds_Shift": 0.3990153193607606, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28367783321454026, "Recall": 0.995, "F1 score": 0.44148641153632834, "PR_Thresholds": 0.3990153193607606, "PR_Thresholds_Shift": 0.39909431471581225, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2838801711840228, "Recall": 0.995, "F1 score": 0.44173140954495005, "PR_Thresholds": 0.39909431471581225, "PR_Thresholds_Shift": 0.399876699532753, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2842857142857143, "Recall": 0.995, "F1 score": 0.44222222222222224, "PR_Thresholds": 0.399876699532753, "PR_Thresholds_Shift": 0.39991351118839613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28448892065761255, "Recall": 0.995, "F1 score": 0.4424680377987771, "PR_Thresholds": 0.39991351118839613, "PR_Thresholds_Shift": 0.4000249648135885, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28469241773962806, "Recall": 0.995, "F1 score": 0.44271412680756395, "PR_Thresholds": 0.4000249648135885, "PR_Thresholds_Shift": 0.400841734499991, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28489620615604866, "Recall": 0.995, "F1 score": 0.442960489705064, "PR_Thresholds": 0.400841734499991, "PR_Thresholds_Shift": 0.4008648365415655, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2851002865329513, "Recall": 0.995, "F1 score": 0.4432071269487751, "PR_Thresholds": 0.4008648365415655, "PR_Thresholds_Shift": 0.4011780839752705, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2853046594982079, "Recall": 0.995, "F1 score": 0.4434540389972145, "PR_Thresholds": 0.4011780839752705, "PR_Thresholds_Shift": 0.4017989934752565, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2855093256814921, "Recall": 0.995, "F1 score": 0.44370122630992204, "PR_Thresholds": 0.4017989934752565, "PR_Thresholds_Shift": 0.39466143524166786, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27851644506648005, "Recall": 0.995, "F1 score": 0.43521049753963914, "PR_Thresholds": 0.39466143524166786, "PR_Thresholds_Shift": 0.3979157242363587, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28246983676366216, "Recall": 0.995, "F1 score": 0.4400221116639027, "PR_Thresholds": 0.3979157242363587, "PR_Thresholds_Shift": 0.3976471516467151, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2822695035460993, "Recall": 0.995, "F1 score": 0.43977900552486193, "PR_Thresholds": 0.3976471516467151, "PR_Thresholds_Shift": 0.3997142148627357, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28408279800142755, "Recall": 0.995, "F1 score": 0.44197667962243203, "PR_Thresholds": 0.3997142148627357, "PR_Thresholds_Shift": 0.3974275649151178, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2818696883852691, "Recall": 0.995, "F1 score": 0.43929359823399555, "PR_Thresholds": 0.3974275649151178, "PR_Thresholds_Shift": 0.39486115530153965, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27890679747722497, "Recall": 0.995, "F1 score": 0.43568691844553914, "PR_Thresholds": 0.39486115530153965, "PR_Thresholds_Shift": 0.39751800835830603, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2820694542877392, "Recall": 0.995, "F1 score": 0.43953616786305916, "PR_Thresholds": 0.39751800835830603, "PR_Thresholds_Shift": 0.39487500875795306, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2791023842917251, "Recall": 0.995, "F1 score": 0.4359255202628696, "PR_Thresholds": 0.39487500875795306, "PR_Thresholds_Shift": 0.3948935226075743, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2792982456140351, "Recall": 0.995, "F1 score": 0.4361643835616439, "PR_Thresholds": 0.3948935226075743, "PR_Thresholds_Shift": 0.39501838209761075, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2794943820224719, "Recall": 0.995, "F1 score": 0.4364035087719298, "PR_Thresholds": 0.39501838209761075, "PR_Thresholds_Shift": 0.39602689423664833, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.279887482419128, "Recall": 0.995, "F1 score": 0.43688254665203075, "PR_Thresholds": 0.39602689423664833, "PR_Thresholds_Shift": 0.39614427334076674, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2800844475721323, "Recall": 0.995, "F1 score": 0.4371224601867105, "PR_Thresholds": 0.39614427334076674, "PR_Thresholds_Shift": 0.3961618429011036, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2802816901408451, "Recall": 0.995, "F1 score": 0.43736263736263736, "PR_Thresholds": 0.3961618429011036, "PR_Thresholds_Shift": 0.39525407301941967, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2796907940969782, "Recall": 0.995, "F1 score": 0.43664289632473946, "PR_Thresholds": 0.39525407301941967, "PR_Thresholds_Shift": 0.39616294020900356, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28047921071176884, "Recall": 0.995, "F1 score": 0.43760307861462344, "PR_Thresholds": 0.39616294020900356, "PR_Thresholds_Shift": 0.39689995790613614, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28067700987306066, "Recall": 0.995, "F1 score": 0.43784378437843785, "PR_Thresholds": 0.39689995790613614, "PR_Thresholds_Shift": 0.3969387426990387, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.28087508821453777, "Recall": 0.995, "F1 score": 0.438084755090809, "PR_Thresholds": 0.3969387426990387, "PR_Thresholds_Shift": 0.39729186907693115, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2810734463276836, "Recall": 0.995, "F1 score": 0.43832599118942733, "PR_Thresholds": 0.39729186907693115, "PR_Thresholds_Shift": 0.39735503775297004, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2812720848056537, "Recall": 0.995, "F1 score": 0.4385674931129477, "PR_Thresholds": 0.39735503775297004, "PR_Thresholds_Shift": 0.3973940540297035, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2814710042432815, "Recall": 0.995, "F1 score": 0.4388092613009923, "PR_Thresholds": 0.3973940540297035, "PR_Thresholds_Shift": 0.3974083815669946, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2816702052370842, "Recall": 0.995, "F1 score": 0.43905129619415334, "PR_Thresholds": 0.3974083815669946, "PR_Thresholds_Shift": 0.3627615441941423, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2511013215859031, "Recall": 0.9975, "F1 score": 0.40120663650075417, "PR_Thresholds": 0.3627615441941423, "PR_Thresholds_Shift": 0.36410966244408494, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2518939393939394, "Recall": 0.9975, "F1 score": 0.4022177419354839, "PR_Thresholds": 0.36410966244408494, "PR_Thresholds_Shift": 0.36392696238562783, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25173501577287066, "Recall": 0.9975, "F1 score": 0.40201511335012596, "PR_Thresholds": 0.36392696238562783, "PR_Thresholds_Shift": 0.3638990643622161, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2515762925598991, "Recall": 0.9975, "F1 score": 0.4018126888217523, "PR_Thresholds": 0.3638990643622161, "PR_Thresholds_Shift": 0.3638910742168116, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2514177693761815, "Recall": 0.9975, "F1 score": 0.4016104680422748, "PR_Thresholds": 0.3638910742168116, "PR_Thresholds_Shift": 0.363018962268441, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2512594458438287, "Recall": 0.9975, "F1 score": 0.4014084507042253, "PR_Thresholds": 0.363018962268441, "PR_Thresholds_Shift": 0.3642808873824663, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2520530638029059, "Recall": 0.9975, "F1 score": 0.40242057488653554, "PR_Thresholds": 0.3642808873824663, "PR_Thresholds_Shift": 0.3626337148282439, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2509433962264151, "Recall": 0.9975, "F1 score": 0.4010050251256282, "PR_Thresholds": 0.3626337148282439, "PR_Thresholds_Shift": 0.36170946939806214, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24968710888610762, "Recall": 0.9975, "F1 score": 0.3993993993993994, "PR_Thresholds": 0.36170946939806214, "PR_Thresholds_Shift": 0.3623110329112314, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2506281407035176, "Recall": 0.9975, "F1 score": 0.4006024096385542, "PR_Thresholds": 0.3623110329112314, "PR_Thresholds_Shift": 0.3622737266260459, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2504708097928437, "Recall": 0.9975, "F1 score": 0.40040140491721027, "PR_Thresholds": 0.3622737266260459, "PR_Thresholds_Shift": 0.36203501043491576, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25031367628607276, "Recall": 0.9975, "F1 score": 0.4002006018054163, "PR_Thresholds": 0.36203501043491576, "PR_Thresholds_Shift": 0.3619874364911894, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2501567398119122, "Recall": 0.9975, "F1 score": 0.4, "PR_Thresholds": 0.3619874364911894, "PR_Thresholds_Shift": 0.36191129902681074, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25, "Recall": 0.9975, "F1 score": 0.3997995991983968, "PR_Thresholds": 0.36191129902681074, "PR_Thresholds_Shift": 0.3618916290788326, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2498434564809017, "Recall": 0.9975, "F1 score": 0.399599399098648, "PR_Thresholds": 0.3618916290788326, "PR_Thresholds_Shift": 0.3613506747619491, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24953095684803, "Recall": 0.9975, "F1 score": 0.3991995997999, "PR_Thresholds": 0.3613506747619491, "PR_Thresholds_Shift": 0.36110862289874895, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.249375, "Recall": 0.9975, "F1 score": 0.39899999999999997, "PR_Thresholds": 0.36110862289874895, "PR_Thresholds_Shift": 0.36429088786426866, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.252212389380531, "Recall": 0.9975, "F1 score": 0.40262361251261347, "PR_Thresholds": 0.36429088786426866, "PR_Thresholds_Shift": 0.3623329431120007, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25078566939032054, "Recall": 0.9975, "F1 score": 0.4008036162732295, "PR_Thresholds": 0.3623329431120007, "PR_Thresholds_Shift": 0.3643623197026059, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2523719165085389, "Recall": 0.9975, "F1 score": 0.40282685512367494, "PR_Thresholds": 0.3643623197026059, "PR_Thresholds_Shift": 0.3662589699934139, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.255278310940499, "Recall": 0.9975, "F1 score": 0.40652063168619457, "PR_Thresholds": 0.3662589699934139, "PR_Thresholds_Shift": 0.36465347975561124, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2526915769474351, "Recall": 0.9975, "F1 score": 0.40323395654370897, "PR_Thresholds": 0.36465347975561124, "PR_Thresholds_Shift": 0.3667657068818914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25593329057087877, "Recall": 0.9975, "F1 score": 0.4073506891271057, "PR_Thresholds": 0.3667657068818914, "PR_Thresholds_Shift": 0.36669354742187776, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25576923076923075, "Recall": 0.9975, "F1 score": 0.40714285714285714, "PR_Thresholds": 0.36669354742187776, "PR_Thresholds_Shift": 0.3666523727538887, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2556053811659193, "Recall": 0.9975, "F1 score": 0.4069352371239164, "PR_Thresholds": 0.3666523727538887, "PR_Thresholds_Shift": 0.36664443771658894, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2554417413572343, "Recall": 0.9975, "F1 score": 0.40672782874617736, "PR_Thresholds": 0.36664443771658894, "PR_Thresholds_Shift": 0.36007161342137556, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24921923797626483, "Recall": 0.9975, "F1 score": 0.3988005997001499, "PR_Thresholds": 0.36007161342137556, "PR_Thresholds_Shift": 0.36616046379277506, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2551150895140665, "Recall": 0.9975, "F1 score": 0.4063136456211813, "PR_Thresholds": 0.36616046379277506, "PR_Thresholds_Shift": 0.365946571834833, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2549520766773163, "Recall": 0.9975, "F1 score": 0.4061068702290076, "PR_Thresholds": 0.365946571834833, "PR_Thresholds_Shift": 0.36591684055016865, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2547892720306513, "Recall": 0.9975, "F1 score": 0.4059003051881994, "PR_Thresholds": 0.36591684055016865, "PR_Thresholds_Shift": 0.36590866232746505, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2546266751754946, "Recall": 0.9975, "F1 score": 0.40569395017793597, "PR_Thresholds": 0.36590866232746505, "PR_Thresholds_Shift": 0.36458807646096675, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25253164556962027, "Recall": 0.9975, "F1 score": 0.403030303030303, "PR_Thresholds": 0.36458807646096675, "PR_Thresholds_Shift": 0.36586597955211486, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2544642857142857, "Recall": 0.9975, "F1 score": 0.4054878048780488, "PR_Thresholds": 0.36586597955211486, "PR_Thresholds_Shift": 0.36579576390212953, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25414012738853503, "Recall": 0.9975, "F1 score": 0.4050761421319797, "PR_Thresholds": 0.36579576390212953, "PR_Thresholds_Shift": 0.36565941611881736, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25397835773392746, "Recall": 0.9975, "F1 score": 0.4048706240487063, "PR_Thresholds": 0.36565941611881736, "PR_Thresholds_Shift": 0.36558741475302775, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2538167938931298, "Recall": 0.9975, "F1 score": 0.4046653144016228, "PR_Thresholds": 0.36558741475302775, "PR_Thresholds_Shift": 0.3653786106317193, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2536554354736173, "Recall": 0.9975, "F1 score": 0.4044602128737962, "PR_Thresholds": 0.3653786106317193, "PR_Thresholds_Shift": 0.36519814081086693, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25349428208386277, "Recall": 0.9975, "F1 score": 0.40425531914893614, "PR_Thresholds": 0.36519814081086693, "PR_Thresholds_Shift": 0.365190265116775, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25333333333333335, "Recall": 0.9975, "F1 score": 0.4040506329113924, "PR_Thresholds": 0.365190265116775, "PR_Thresholds_Shift": 0.3651353705541952, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25317258883248733, "Recall": 0.9975, "F1 score": 0.40384615384615385, "PR_Thresholds": 0.3651353705541952, "PR_Thresholds_Shift": 0.364989649483821, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25301204819277107, "Recall": 0.9975, "F1 score": 0.4036418816388467, "PR_Thresholds": 0.364989649483821, "PR_Thresholds_Shift": 0.3646725702643919, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25285171102661597, "Recall": 0.9975, "F1 score": 0.4034378159757331, "PR_Thresholds": 0.3646725702643919, "PR_Thresholds_Shift": 0.3658112482574832, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25430210325047803, "Recall": 0.9975, "F1 score": 0.4052818689690198, "PR_Thresholds": 0.3658112482574832, "PR_Thresholds_Shift": 0.3590012323444899, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24906367041198502, "Recall": 0.9975, "F1 score": 0.3986013986013986, "PR_Thresholds": 0.3590012323444899, "PR_Thresholds_Shift": 0.3549921791084204, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2461443553362122, "Recall": 0.9975, "F1 score": 0.39485403265710045, "PR_Thresholds": 0.3549921791084204, "PR_Thresholds_Shift": 0.3588955113021792, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24875311720698254, "Recall": 0.9975, "F1 score": 0.39820359281437123, "PR_Thresholds": 0.3588955113021792, "PR_Thresholds_Shift": 0.3530704425565341, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24478527607361963, "Recall": 0.9975, "F1 score": 0.39310344827586213, "PR_Thresholds": 0.3530704425565341, "PR_Thresholds_Shift": 0.3530402822561406, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2446351931330472, "Recall": 0.9975, "F1 score": 0.39290989660265874, "PR_Thresholds": 0.3530402822561406, "PR_Thresholds_Shift": 0.35300656644832834, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24448529411764705, "Recall": 0.9975, "F1 score": 0.3927165354330709, "PR_Thresholds": 0.35300656644832834, "PR_Thresholds_Shift": 0.35296954853826984, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2443355786895285, "Recall": 0.9975, "F1 score": 0.3925233644859813, "PR_Thresholds": 0.35296954853826984, "PR_Thresholds_Shift": 0.35253487550987656, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2441860465116279, "Recall": 0.9975, "F1 score": 0.39233038348082594, "PR_Thresholds": 0.35253487550987656, "PR_Thresholds_Shift": 0.35250901302609633, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24403669724770644, "Recall": 0.9975, "F1 score": 0.3921375921375922, "PR_Thresholds": 0.35250901302609633, "PR_Thresholds_Shift": 0.35244301006843476, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2438875305623472, "Recall": 0.9975, "F1 score": 0.39194499017681733, "PR_Thresholds": 0.35244301006843476, "PR_Thresholds_Shift": 0.35232740889686864, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24373854612095297, "Recall": 0.9975, "F1 score": 0.3917525773195876, "PR_Thresholds": 0.35232740889686864, "PR_Thresholds_Shift": 0.35211103846703395, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24358974358974358, "Recall": 0.9975, "F1 score": 0.3915603532875368, "PR_Thresholds": 0.35211103846703395, "PR_Thresholds_Shift": 0.351802887539474, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24344112263575352, "Recall": 0.9975, "F1 score": 0.39136831780284453, "PR_Thresholds": 0.351802887539474, "PR_Thresholds_Shift": 0.35175843766948983, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24329268292682926, "Recall": 0.9975, "F1 score": 0.39117647058823535, "PR_Thresholds": 0.35175843766948983, "PR_Thresholds_Shift": 0.35147847324134374, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24314442413162707, "Recall": 0.9975, "F1 score": 0.39098481136697694, "PR_Thresholds": 0.35147847324134374, "PR_Thresholds_Shift": 0.35132725658624914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24299634591961022, "Recall": 0.9975, "F1 score": 0.3907933398628795, "PR_Thresholds": 0.35132725658624914, "PR_Thresholds_Shift": 0.35127665339040853, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24284844796104688, "Recall": 0.9975, "F1 score": 0.3906020558002937, "PR_Thresholds": 0.35127665339040853, "PR_Thresholds_Shift": 0.3511477063447424, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2427007299270073, "Recall": 0.9975, "F1 score": 0.39041095890410954, "PR_Thresholds": 0.3511477063447424, "PR_Thresholds_Shift": 0.35063336437800374, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2425531914893617, "Recall": 0.9975, "F1 score": 0.3902200488997555, "PR_Thresholds": 0.35063336437800374, "PR_Thresholds_Shift": 0.3504816075510803, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24240583232077764, "Recall": 0.9975, "F1 score": 0.3900293255131965, "PR_Thresholds": 0.3504816075510803, "PR_Thresholds_Shift": 0.35023792399866754, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24225865209471767, "Recall": 0.9975, "F1 score": 0.38983878847093306, "PR_Thresholds": 0.35023792399866754, "PR_Thresholds_Shift": 0.36698265993925083, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25609756097560976, "Recall": 0.9975, "F1 score": 0.40755873340143006, "PR_Thresholds": 0.36698265993925083, "PR_Thresholds_Shift": 0.3535245577226608, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24493554327808473, "Recall": 0.9975, "F1 score": 0.39329719073435193, "PR_Thresholds": 0.3535245577226608, "PR_Thresholds_Shift": 0.3589033471142438, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24890829694323144, "Recall": 0.9975, "F1 score": 0.3984023964053919, "PR_Thresholds": 0.3589033471142438, "PR_Thresholds_Shift": 0.35395560467780207, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24508599508599507, "Recall": 0.9975, "F1 score": 0.393491124260355, "PR_Thresholds": 0.35395560467780207, "PR_Thresholds_Shift": 0.3541969901994453, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24538745387453875, "Recall": 0.9975, "F1 score": 0.39387956564659427, "PR_Thresholds": 0.3541969901994453, "PR_Thresholds_Shift": 0.35882478271714874, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2485981308411215, "Recall": 0.9975, "F1 score": 0.3980049875311721, "PR_Thresholds": 0.35882478271714874, "PR_Thresholds_Shift": 0.3587767644194704, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24844333748443337, "Recall": 0.9975, "F1 score": 0.3978065802592224, "PR_Thresholds": 0.3587767644194704, "PR_Thresholds_Shift": 0.35867826012638654, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24828873677660238, "Recall": 0.9975, "F1 score": 0.3976083707025411, "PR_Thresholds": 0.35867826012638654, "PR_Thresholds_Shift": 0.3580697394444911, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24813432835820895, "Recall": 0.9975, "F1 score": 0.39741035856573703, "PR_Thresholds": 0.3580697394444911, "PR_Thresholds_Shift": 0.3580155077721839, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24798011187072716, "Recall": 0.9975, "F1 score": 0.3972125435540069, "PR_Thresholds": 0.3580155077721839, "PR_Thresholds_Shift": 0.35779327755986806, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24782608695652175, "Recall": 0.9975, "F1 score": 0.3970149253731343, "PR_Thresholds": 0.35779327755986806, "PR_Thresholds_Shift": 0.35762705666910083, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24767225325884543, "Recall": 0.9975, "F1 score": 0.3968175037294879, "PR_Thresholds": 0.35762705666910083, "PR_Thresholds_Shift": 0.3572605330833106, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24751861042183623, "Recall": 0.9975, "F1 score": 0.3966202783300199, "PR_Thresholds": 0.3572605330833106, "PR_Thresholds_Shift": 0.35719120203069044, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24736515809051457, "Recall": 0.9975, "F1 score": 0.3964232488822653, "PR_Thresholds": 0.35719120203069044, "PR_Thresholds_Shift": 0.3570007870531316, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24721189591078066, "Recall": 0.9975, "F1 score": 0.3962264150943396, "PR_Thresholds": 0.3570007870531316, "PR_Thresholds_Shift": 0.35669983653857174, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2469059405940594, "Recall": 0.9975, "F1 score": 0.3958333333333333, "PR_Thresholds": 0.35669983653857174, "PR_Thresholds_Shift": 0.3562299840890724, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24675324675324675, "Recall": 0.9975, "F1 score": 0.3956370847793753, "PR_Thresholds": 0.3562299840890724, "PR_Thresholds_Shift": 0.35559884742095244, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2466007416563659, "Recall": 0.9975, "F1 score": 0.3954410307234887, "PR_Thresholds": 0.35559884742095244, "PR_Thresholds_Shift": 0.35552021115499316, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2464484249536751, "Recall": 0.9975, "F1 score": 0.3952451708766716, "PR_Thresholds": 0.35552021115499316, "PR_Thresholds_Shift": 0.35543523434142477, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2462962962962963, "Recall": 0.9975, "F1 score": 0.39504950495049507, "PR_Thresholds": 0.35543523434142477, "PR_Thresholds_Shift": 0.3549197993240718, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24599260172626386, "Recall": 0.9975, "F1 score": 0.3946587537091988, "PR_Thresholds": 0.3549197993240718, "PR_Thresholds_Shift": 0.35478055588471813, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24584103512014788, "Recall": 0.9975, "F1 score": 0.3944636678200692, "PR_Thresholds": 0.35478055588471813, "PR_Thresholds_Shift": 0.35452889674096677, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24568965517241378, "Recall": 0.9975, "F1 score": 0.3942687747035573, "PR_Thresholds": 0.35452889674096677, "PR_Thresholds_Shift": 0.3543535881611186, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24553846153846154, "Recall": 0.9975, "F1 score": 0.39407407407407413, "PR_Thresholds": 0.3543535881611186, "PR_Thresholds_Shift": 0.3540496950623906, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24523663183773817, "Recall": 0.9975, "F1 score": 0.3936852491366552, "PR_Thresholds": 0.3540496950623906, "PR_Thresholds_Shift": 0.3670161188443333, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25626204238921, "Recall": 0.9975, "F1 score": 0.4077669902912622, "PR_Thresholds": 0.3670161188443333, "PR_Thresholds_Shift": 0.35680464548555624, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24705882352941178, "Recall": 0.9975, "F1 score": 0.39602977667493794, "PR_Thresholds": 0.35680464548555624, "PR_Thresholds_Shift": 0.36716520917183726, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2565916398713826, "Recall": 0.9975, "F1 score": 0.4081841432225064, "PR_Thresholds": 0.36716520917183726, "PR_Thresholds_Shift": 0.37959413087484073, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26814516129032256, "Recall": 0.9975, "F1 score": 0.4226694915254237, "PR_Thresholds": 0.37959413087484073, "PR_Thresholds_Shift": 0.3795189926913853, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2677852348993289, "Recall": 0.9975, "F1 score": 0.4222222222222223, "PR_Thresholds": 0.3795189926913853, "PR_Thresholds_Shift": 0.37936874276819255, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2676056338028169, "Recall": 0.9975, "F1 score": 0.4219989423585404, "PR_Thresholds": 0.37936874276819255, "PR_Thresholds_Shift": 0.37890702066030035, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26742627345844505, "Recall": 0.9975, "F1 score": 0.42177589852008457, "PR_Thresholds": 0.37890702066030035, "PR_Thresholds_Shift": 0.3785168678828594, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2672471533824514, "Recall": 0.9975, "F1 score": 0.4215530903328051, "PR_Thresholds": 0.3785168678828594, "PR_Thresholds_Shift": 0.3782598197201605, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26706827309236947, "Recall": 0.9975, "F1 score": 0.4213305174234424, "PR_Thresholds": 0.3782598197201605, "PR_Thresholds_Shift": 0.3779521268690139, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26688963210702343, "Recall": 0.9975, "F1 score": 0.42110817941952505, "PR_Thresholds": 0.3779521268690139, "PR_Thresholds_Shift": 0.3778367051018811, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2667112299465241, "Recall": 0.9975, "F1 score": 0.4208860759493671, "PR_Thresholds": 0.3778367051018811, "PR_Thresholds_Shift": 0.3774730054848645, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2665330661322645, "Recall": 0.9975, "F1 score": 0.4206642066420664, "PR_Thresholds": 0.3774730054848645, "PR_Thresholds_Shift": 0.3772194962374256, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26635514018691586, "Recall": 0.9975, "F1 score": 0.4204425711275026, "PR_Thresholds": 0.3772194962374256, "PR_Thresholds_Shift": 0.37700675639007386, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26617745163442297, "Recall": 0.9975, "F1 score": 0.4202211690363349, "PR_Thresholds": 0.37700675639007386, "PR_Thresholds_Shift": 0.37685104457440893, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.266, "Recall": 0.9975, "F1 score": 0.42000000000000004, "PR_Thresholds": 0.37685104457440893, "PR_Thresholds_Shift": 0.3767711115166965, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26582278481012656, "Recall": 0.9975, "F1 score": 0.4197790636507101, "PR_Thresholds": 0.3767711115166965, "PR_Thresholds_Shift": 0.3763237068902877, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26564580559254325, "Recall": 0.9975, "F1 score": 0.41955835962145105, "PR_Thresholds": 0.3763237068902877, "PR_Thresholds_Shift": 0.376139764067705, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2654690618762475, "Recall": 0.9975, "F1 score": 0.41933788754598006, "PR_Thresholds": 0.376139764067705, "PR_Thresholds_Shift": 0.3759606099369229, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26529255319148937, "Recall": 0.9975, "F1 score": 0.4191176470588236, "PR_Thresholds": 0.3759606099369229, "PR_Thresholds_Shift": 0.3758471903848481, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2651162790697674, "Recall": 0.9975, "F1 score": 0.4188976377952756, "PR_Thresholds": 0.3758471903848481, "PR_Thresholds_Shift": 0.37572217955002624, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2649402390438247, "Recall": 0.9975, "F1 score": 0.41867785939139557, "PR_Thresholds": 0.37572217955002624, "PR_Thresholds_Shift": 0.37567211255632577, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2647644326476443, "Recall": 0.9975, "F1 score": 0.41845831148400625, "PR_Thresholds": 0.37567211255632577, "PR_Thresholds_Shift": 0.380567951867189, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26832548755884333, "Recall": 0.9975, "F1 score": 0.42289348171701113, "PR_Thresholds": 0.380567951867189, "PR_Thresholds_Shift": 0.38061953429703643, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26850605652759085, "Recall": 0.9975, "F1 score": 0.4231177094379639, "PR_Thresholds": 0.38061953429703643, "PR_Thresholds_Shift": 0.3807144570254626, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2686868686868687, "Recall": 0.9975, "F1 score": 0.42334217506631305, "PR_Thresholds": 0.3807144570254626, "PR_Thresholds_Shift": 0.38097184974143433, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2688679245283019, "Recall": 0.9975, "F1 score": 0.42356687898089174, "PR_Thresholds": 0.38097184974143433, "PR_Thresholds_Shift": 0.3670683712770192, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.256426735218509, "Recall": 0.9975, "F1 score": 0.40797546012269936, "PR_Thresholds": 0.3670683712770192, "PR_Thresholds_Shift": 0.38718706335263725, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27235494880546074, "Recall": 0.9975, "F1 score": 0.427882037533512, "PR_Thresholds": 0.38718706335263725, "PR_Thresholds_Shift": 0.3871767891125448, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27216916780354705, "Recall": 0.9975, "F1 score": 0.42765273311897106, "PR_Thresholds": 0.3871767891125448, "PR_Thresholds_Shift": 0.38648582983962637, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2719836400817996, "Recall": 0.9975, "F1 score": 0.4274236743438672, "PR_Thresholds": 0.38648582983962637, "PR_Thresholds_Shift": 0.38637805545800835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2717983651226158, "Recall": 0.9975, "F1 score": 0.4271948608137045, "PR_Thresholds": 0.38637805545800835, "PR_Thresholds_Shift": 0.3860422707271004, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27161334240980256, "Recall": 0.9975, "F1 score": 0.42696629213483145, "PR_Thresholds": 0.3860422707271004, "PR_Thresholds_Shift": 0.3852179691207758, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2714285714285714, "Recall": 0.9975, "F1 score": 0.4267379679144385, "PR_Thresholds": 0.3852179691207758, "PR_Thresholds_Shift": 0.3851133738024376, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27124405166553367, "Recall": 0.9975, "F1 score": 0.42650988776055593, "PR_Thresholds": 0.3851133738024376, "PR_Thresholds_Shift": 0.38497990789780884, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2710597826086957, "Recall": 0.9975, "F1 score": 0.4262820512820513, "PR_Thresholds": 0.38497990789780884, "PR_Thresholds_Shift": 0.375474849904524, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2645888594164456, "Recall": 0.9975, "F1 score": 0.4182389937106918, "PR_Thresholds": 0.375474849904524, "PR_Thresholds_Shift": 0.3847310477360882, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2708757637474542, "Recall": 0.9975, "F1 score": 0.4260544580886279, "PR_Thresholds": 0.3847310477360882, "PR_Thresholds_Shift": 0.38451686900481286, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2705084745762712, "Recall": 0.9975, "F1 score": 0.4256000000000001, "PR_Thresholds": 0.38451686900481286, "PR_Thresholds_Shift": 0.38346436060164535, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2703252032520325, "Recall": 0.9975, "F1 score": 0.4253731343283582, "PR_Thresholds": 0.38346436060164535, "PR_Thresholds_Shift": 0.3830604860637175, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.27014218009478674, "Recall": 0.9975, "F1 score": 0.42514651038891854, "PR_Thresholds": 0.3830604860637175, "PR_Thresholds_Shift": 0.3824482922929736, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2699594046008119, "Recall": 0.9975, "F1 score": 0.42492012779552707, "PR_Thresholds": 0.3824482922929736, "PR_Thresholds_Shift": 0.38240098173694054, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2697768762677485, "Recall": 0.9975, "F1 score": 0.42469398616285264, "PR_Thresholds": 0.38240098173694054, "PR_Thresholds_Shift": 0.3822547098013548, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2695945945945946, "Recall": 0.9975, "F1 score": 0.424468085106383, "PR_Thresholds": 0.3822547098013548, "PR_Thresholds_Shift": 0.38213352398085254, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26941255908170153, "Recall": 0.9975, "F1 score": 0.42424242424242414, "PR_Thresholds": 0.38213352398085254, "PR_Thresholds_Shift": 0.3817648939970132, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2692307692307692, "Recall": 0.9975, "F1 score": 0.4240170031880978, "PR_Thresholds": 0.3817648939970132, "PR_Thresholds_Shift": 0.38118554993453624, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26904922454484154, "Recall": 0.9975, "F1 score": 0.4237918215613384, "PR_Thresholds": 0.38118554993453624, "PR_Thresholds_Shift": 0.3846760238057966, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2706919945725916, "Recall": 0.9975, "F1 score": 0.4258271077908217, "PR_Thresholds": 0.3846760238057966, "PR_Thresholds_Shift": 0.3752861197486027, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2644135188866799, "Recall": 0.9975, "F1 score": 0.41801990570979575, "PR_Thresholds": 0.3752861197486027, "PR_Thresholds_Shift": 0.37958123876501554, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2679650772330423, "Recall": 0.9975, "F1 score": 0.4224457384859714, "PR_Thresholds": 0.37958123876501554, "PR_Thresholds_Shift": 0.3751735901761097, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2640635340833885, "Recall": 0.9975, "F1 score": 0.41758241758241754, "PR_Thresholds": 0.3751735901761097, "PR_Thresholds_Shift": 0.37038380465113835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26010430247718386, "Recall": 0.9975, "F1 score": 0.4126163391933816, "PR_Thresholds": 0.37038380465113835, "PR_Thresholds_Shift": 0.3702239138737697, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25993485342019546, "Recall": 0.9975, "F1 score": 0.41240310077519376, "PR_Thresholds": 0.3702239138737697, "PR_Thresholds_Shift": 0.3698658100318733, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.259765625, "Recall": 0.9975, "F1 score": 0.41219008264462814, "PR_Thresholds": 0.3698658100318733, "PR_Thresholds_Shift": 0.36971672135861744, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25959661678594664, "Recall": 0.9975, "F1 score": 0.4119772844605059, "PR_Thresholds": 0.36971672135861744, "PR_Thresholds_Shift": 0.3696626507600719, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25942782834850453, "Recall": 0.9975, "F1 score": 0.411764705882353, "PR_Thresholds": 0.3696626507600719, "PR_Thresholds_Shift": 0.3695360747839532, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25925925925925924, "Recall": 0.9975, "F1 score": 0.4115523465703971, "PR_Thresholds": 0.3695360747839532, "PR_Thresholds_Shift": 0.36936588382287694, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2590909090909091, "Recall": 0.9975, "F1 score": 0.411340206185567, "PR_Thresholds": 0.36936588382287694, "PR_Thresholds_Shift": 0.3690672107978457, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2587548638132296, "Recall": 0.9975, "F1 score": 0.4109165808444903, "PR_Thresholds": 0.3690672107978457, "PR_Thresholds_Shift": 0.3687986526754841, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25858716785482827, "Recall": 0.9975, "F1 score": 0.4107050952135873, "PR_Thresholds": 0.3687986526754841, "PR_Thresholds_Shift": 0.370858991889354, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2602739726027397, "Recall": 0.9975, "F1 score": 0.4128297982410761, "PR_Thresholds": 0.370858991889354, "PR_Thresholds_Shift": 0.3686887933730027, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25841968911917096, "Recall": 0.9975, "F1 score": 0.41049382716049376, "PR_Thresholds": 0.3686887933730027, "PR_Thresholds_Shift": 0.3684923185586928, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25808538163001293, "Recall": 0.9975, "F1 score": 0.41007194244604317, "PR_Thresholds": 0.3684923185586928, "PR_Thresholds_Shift": 0.36841729473599927, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2579185520361991, "Recall": 0.9975, "F1 score": 0.4098613251155625, "PR_Thresholds": 0.36841729473599927, "PR_Thresholds_Shift": 0.36837538424099137, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25775193798449614, "Recall": 0.9975, "F1 score": 0.40965092402464065, "PR_Thresholds": 0.36837538424099137, "PR_Thresholds_Shift": 0.3683596258744622, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2575855390574564, "Recall": 0.9975, "F1 score": 0.4094407388404309, "PR_Thresholds": 0.3683596258744622, "PR_Thresholds_Shift": 0.3682593227514933, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2574193548387097, "Recall": 0.9975, "F1 score": 0.40923076923076934, "PR_Thresholds": 0.3682593227514933, "PR_Thresholds_Shift": 0.3681459572228782, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2572533849129594, "Recall": 0.9975, "F1 score": 0.4090210148641722, "PR_Thresholds": 0.3681459572228782, "PR_Thresholds_Shift": 0.3681141773172552, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25708762886597936, "Recall": 0.9975, "F1 score": 0.40881147540983603, "PR_Thresholds": 0.3681141773172552, "PR_Thresholds_Shift": 0.3751948651639376, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2642384105960265, "Recall": 0.9975, "F1 score": 0.4178010471204189, "PR_Thresholds": 0.3751948651639376, "PR_Thresholds_Shift": 0.36757725932688673, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25692208628461044, "Recall": 0.9975, "F1 score": 0.40860215053763443, "PR_Thresholds": 0.36757725932688673, "PR_Thresholds_Shift": 0.368621444744434, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.258252427184466, "Recall": 0.9975, "F1 score": 0.41028277634961435, "PR_Thresholds": 0.368621444744434, "PR_Thresholds_Shift": 0.37088877963400396, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.260443864229765, "Recall": 0.9975, "F1 score": 0.4130434782608695, "PR_Thresholds": 0.37088877963400396, "PR_Thresholds_Shift": 0.3693317774121385, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2589227774172615, "Recall": 0.9975, "F1 score": 0.4111282843894899, "PR_Thresholds": 0.3693317774121385, "PR_Thresholds_Shift": 0.37145159014039597, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2607843137254902, "Recall": 0.9975, "F1 score": 0.4134715025906736, "PR_Thresholds": 0.37145159014039597, "PR_Thresholds_Shift": 0.3751447971100019, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2638888888888889, "Recall": 0.9975, "F1 score": 0.4173640167364017, "PR_Thresholds": 0.3751447971100019, "PR_Thresholds_Shift": 0.37089793398105797, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2606139777922926, "Recall": 0.9975, "F1 score": 0.4132573795960642, "PR_Thresholds": 0.37089793398105797, "PR_Thresholds_Shift": 0.37509124625287515, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26354029062087186, "Recall": 0.9975, "F1 score": 0.4169278996865204, "PR_Thresholds": 0.37509124625287515, "PR_Thresholds_Shift": 0.37507638905513047, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2633663366336634, "Recall": 0.9975, "F1 score": 0.416710182767624, "PR_Thresholds": 0.37507638905513047, "PR_Thresholds_Shift": 0.37490966593339525, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2631926121372032, "Recall": 0.9975, "F1 score": 0.4164926931106471, "PR_Thresholds": 0.37490966593339525, "PR_Thresholds_Shift": 0.3747183773893819, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26301911667765326, "Recall": 0.9975, "F1 score": 0.4162754303599374, "PR_Thresholds": 0.3747183773893819, "PR_Thresholds_Shift": 0.3743824050638352, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2628458498023715, "Recall": 0.9975, "F1 score": 0.41605839416058393, "PR_Thresholds": 0.3743824050638352, "PR_Thresholds_Shift": 0.3741611921810863, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2626728110599078, "Recall": 0.9975, "F1 score": 0.4158415841584158, "PR_Thresholds": 0.3741611921810863, "PR_Thresholds_Shift": 0.37413232127791196, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2625, "Recall": 0.9975, "F1 score": 0.4156250000000001, "PR_Thresholds": 0.37413232127791196, "PR_Thresholds_Shift": 0.3736436107606705, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26232741617357, "Recall": 0.9975, "F1 score": 0.4154086413326393, "PR_Thresholds": 0.3736436107606705, "PR_Thresholds_Shift": 0.37512429595136026, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2637144745538665, "Recall": 0.9975, "F1 score": 0.41714584422373235, "PR_Thresholds": 0.37512429595136026, "PR_Thresholds_Shift": 0.37316424471132403, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2621550591327201, "Recall": 0.9975, "F1 score": 0.41519250780437045, "PR_Thresholds": 0.37316424471132403, "PR_Thresholds_Shift": 0.3675140144622035, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.25675675675675674, "Recall": 0.9975, "F1 score": 0.4083930399181166, "PR_Thresholds": 0.3675140144622035, "PR_Thresholds_Shift": 0.3716949287404912, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26112565445026176, "Recall": 0.9975, "F1 score": 0.41390041493775925, "PR_Thresholds": 0.3716949287404912, "PR_Thresholds_Shift": 0.37183252201535516, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26129666011787817, "Recall": 0.9975, "F1 score": 0.41411520498183707, "PR_Thresholds": 0.37183252201535516, "PR_Thresholds_Shift": 0.37252983481993096, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26146788990825687, "Recall": 0.9975, "F1 score": 0.41433021806853576, "PR_Thresholds": 0.37252983481993096, "PR_Thresholds_Shift": 0.3715729783805784, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26095487246566385, "Recall": 0.9975, "F1 score": 0.41368584758942456, "PR_Thresholds": 0.3715729783805784, "PR_Thresholds_Shift": 0.3728236703661922, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2618110236220472, "Recall": 0.9975, "F1 score": 0.41476091476091476, "PR_Thresholds": 0.3728236703661922, "PR_Thresholds_Shift": 0.3729676197324351, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26198292843072885, "Recall": 0.9975, "F1 score": 0.4149765990639626, "PR_Thresholds": 0.3729676197324351, "PR_Thresholds_Shift": 0.37270166368133467, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.26163934426229507, "Recall": 0.9975, "F1 score": 0.41454545454545455, "PR_Thresholds": 0.37270166368133467, "PR_Thresholds_Shift": 0.23281208639226683, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1865671641791045, "Recall": 1.0, "F1 score": 0.3144654088050315, "PR_Thresholds": 0.23281208639226683, "PR_Thresholds_Shift": 0.22988637319025135, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18604651162790697, "Recall": 1.0, "F1 score": 0.3137254901960785, "PR_Thresholds": 0.22988637319025135, "PR_Thresholds_Shift": 0.23169659628371103, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1864801864801865, "Recall": 1.0, "F1 score": 0.31434184675834975, "PR_Thresholds": 0.23169659628371103, "PR_Thresholds_Shift": 0.23050035071407898, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1863932898415657, "Recall": 1.0, "F1 score": 0.31421838177533384, "PR_Thresholds": 0.23050035071407898, "PR_Thresholds_Shift": 0.2300429128187134, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18630647414997673, "Recall": 1.0, "F1 score": 0.3140950137416569, "PR_Thresholds": 0.2300429128187134, "PR_Thresholds_Shift": 0.22992309676482245, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.186219739292365, "Recall": 1.0, "F1 score": 0.3139717425431711, "PR_Thresholds": 0.22992309676482245, "PR_Thresholds_Shift": 0.22552957868786347, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18509949097639983, "Recall": 1.0, "F1 score": 0.31237797735259665, "PR_Thresholds": 0.22552957868786347, "PR_Thresholds_Shift": 0.22990092784018423, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18613308515588645, "Recall": 1.0, "F1 score": 0.31384856806590816, "PR_Thresholds": 0.22990092784018423, "PR_Thresholds_Shift": 0.22920383418338705, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18596001859600186, "Recall": 1.0, "F1 score": 0.31360250882007057, "PR_Thresholds": 0.22920383418338705, "PR_Thresholds_Shift": 0.22880610618453268, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18561484918793503, "Recall": 1.0, "F1 score": 0.3131115459882583, "PR_Thresholds": 0.22880610618453268, "PR_Thresholds_Shift": 0.22892586438241166, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18578727357176034, "Recall": 1.0, "F1 score": 0.31335683509596557, "PR_Thresholds": 0.22892586438241166, "PR_Thresholds_Shift": 0.22882162295547234, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18570102135561745, "Recall": 1.0, "F1 score": 0.31323414252153486, "PR_Thresholds": 0.22882162295547234, "PR_Thresholds_Shift": 0.22859324842489784, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18552875695732837, "Recall": 1.0, "F1 score": 0.3129890453834116, "PR_Thresholds": 0.22859324842489784, "PR_Thresholds_Shift": 0.22823891660670292, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1854427445526194, "Recall": 1.0, "F1 score": 0.31286664059444663, "PR_Thresholds": 0.22823891660670292, "PR_Thresholds_Shift": 0.22807314132226716, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18535681186283595, "Recall": 1.0, "F1 score": 0.3127443315089914, "PR_Thresholds": 0.22807314132226716, "PR_Thresholds_Shift": 0.22735596771094363, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18527095877721167, "Recall": 1.0, "F1 score": 0.31262211801484957, "PR_Thresholds": 0.22735596771094363, "PR_Thresholds_Shift": 0.22654679590687657, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18518518518518517, "Recall": 1.0, "F1 score": 0.3125, "PR_Thresholds": 0.22654679590687657, "PR_Thresholds_Shift": 0.23284718591442452, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18665422305179655, "Recall": 1.0, "F1 score": 0.314589068029886, "PR_Thresholds": 0.23284718591442452, "PR_Thresholds_Shift": 0.229070770423246, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18587360594795538, "Recall": 1.0, "F1 score": 0.3134796238244514, "PR_Thresholds": 0.229070770423246, "PR_Thresholds_Shift": 0.2328930324684876, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18674136321195145, "Recall": 1.0, "F1 score": 0.3147128245476003, "PR_Thresholds": 0.2328930324684876, "PR_Thresholds_Shift": 0.2400533956194569, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1885902876001886, "Recall": 1.0, "F1 score": 0.31733439111463707, "PR_Thresholds": 0.2400533956194569, "PR_Thresholds_Shift": 0.23316019464567006, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18691588785046728, "Recall": 1.0, "F1 score": 0.31496062992125984, "PR_Thresholds": 0.23316019464567006, "PR_Thresholds_Shift": 0.2400786520541106, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18867924528301888, "Recall": 1.0, "F1 score": 0.3174603174603175, "PR_Thresholds": 0.2400786520541106, "PR_Thresholds_Shift": 0.22515268453730317, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18501387604070305, "Recall": 1.0, "F1 score": 0.312256049960968, "PR_Thresholds": 0.22515268453730317, "PR_Thresholds_Shift": 0.2397616408367775, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1885014137606032, "Recall": 1.0, "F1 score": 0.317208564631245, "PR_Thresholds": 0.2397616408367775, "PR_Thresholds_Shift": 0.23971345192145777, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18841262364578426, "Recall": 1.0, "F1 score": 0.31708283789139907, "PR_Thresholds": 0.23971345192145777, "PR_Thresholds_Shift": 0.23930550240740311, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18832391713747645, "Recall": 1.0, "F1 score": 0.31695721077654515, "PR_Thresholds": 0.23930550240740311, "PR_Thresholds_Shift": 0.23895444086499712, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18823529411764706, "Recall": 1.0, "F1 score": 0.31683168316831684, "PR_Thresholds": 0.23895444086499712, "PR_Thresholds_Shift": 0.2385446640699122, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18814675446848542, "Recall": 1.0, "F1 score": 0.3167062549485352, "PR_Thresholds": 0.2385446640699122, "PR_Thresholds_Shift": 0.23852175319013985, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18805829807240246, "Recall": 1.0, "F1 score": 0.31658092599920856, "PR_Thresholds": 0.23852175319013985, "PR_Thresholds_Shift": 0.23791876210073745, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18796992481203006, "Recall": 1.0, "F1 score": 0.3164556962025316, "PR_Thresholds": 0.23791876210073745, "PR_Thresholds_Shift": 0.2329461303035091, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18682858477347034, "Recall": 1.0, "F1 score": 0.3148366784730421, "PR_Thresholds": 0.2329461303035091, "PR_Thresholds_Shift": 0.23780524189905655, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18788163457022075, "Recall": 1.0, "F1 score": 0.3163305654408857, "PR_Thresholds": 0.23780524189905655, "PR_Thresholds_Shift": 0.2368356477154029, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18770530267480057, "Recall": 1.0, "F1 score": 0.3160806005531411, "PR_Thresholds": 0.2368356477154029, "PR_Thresholds_Shift": 0.23681741420374164, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18761726078799248, "Recall": 1.0, "F1 score": 0.315955766192733, "PR_Thresholds": 0.23681741420374164, "PR_Thresholds_Shift": 0.23630683775449968, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1875293014533521, "Recall": 1.0, "F1 score": 0.31583103039873667, "PR_Thresholds": 0.23630683775449968, "PR_Thresholds_Shift": 0.2357804586810528, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18744142455482662, "Recall": 1.0, "F1 score": 0.31570639305445936, "PR_Thresholds": 0.2357804586810528, "PR_Thresholds_Shift": 0.2346040003421618, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1873536299765808, "Recall": 1.0, "F1 score": 0.3155818540433925, "PR_Thresholds": 0.2346040003421618, "PR_Thresholds_Shift": 0.23433593635839828, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18726591760299627, "Recall": 1.0, "F1 score": 0.3154574132492114, "PR_Thresholds": 0.23433593635839828, "PR_Thresholds_Shift": 0.23423772040222482, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18717828731867103, "Recall": 1.0, "F1 score": 0.3153330705557746, "PR_Thresholds": 0.23423772040222482, "PR_Thresholds_Shift": 0.23387972724884779, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18709073900841908, "Recall": 1.0, "F1 score": 0.31520882584712373, "PR_Thresholds": 0.23387972724884779, "PR_Thresholds_Shift": 0.23375587008818374, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18700327255726976, "Recall": 1.0, "F1 score": 0.31508467900748327, "PR_Thresholds": 0.23375587008818374, "PR_Thresholds_Shift": 0.23774906278367, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18779342723004694, "Recall": 1.0, "F1 score": 0.3162055335968379, "PR_Thresholds": 0.23774906278367, "PR_Thresholds_Shift": 0.22512862891331942, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18492834026814609, "Recall": 1.0, "F1 score": 0.3121342177136168, "PR_Thresholds": 0.22512862891331942, "PR_Thresholds_Shift": 0.20897471525216121, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18124150430448574, "Recall": 1.0, "F1 score": 0.3068661296509398, "PR_Thresholds": 0.20897471525216121, "PR_Thresholds_Shift": 0.22434868726791493, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18475750577367206, "Recall": 1.0, "F1 score": 0.31189083820662766, "PR_Thresholds": 0.22434868726791493, "PR_Thresholds_Shift": 0.2154933683857841, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.182648401826484, "Recall": 1.0, "F1 score": 0.3088803088803089, "PR_Thresholds": 0.2154933683857841, "PR_Thresholds_Shift": 0.21498433197230632, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18256503879507074, "Recall": 1.0, "F1 score": 0.3087610961018912, "PR_Thresholds": 0.21498433197230632, "PR_Thresholds_Shift": 0.21475095010320347, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18248175182481752, "Recall": 1.0, "F1 score": 0.30864197530864196, "PR_Thresholds": 0.21475095010320347, "PR_Thresholds_Shift": 0.2145356307359984, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1823985408116735, "Recall": 1.0, "F1 score": 0.3085229463941381, "PR_Thresholds": 0.2145356307359984, "PR_Thresholds_Shift": 0.2138674516149949, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18231540565177756, "Recall": 1.0, "F1 score": 0.30840400925212025, "PR_Thresholds": 0.2138674516149949, "PR_Thresholds_Shift": 0.21347273310796613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18223234624145787, "Recall": 1.0, "F1 score": 0.3082851637764933, "PR_Thresholds": 0.21347273310796613, "PR_Thresholds_Shift": 0.21214643228443186, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18214936247723132, "Recall": 1.0, "F1 score": 0.3081664098613251, "PR_Thresholds": 0.21214643228443186, "PR_Thresholds_Shift": 0.21204713507234946, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18206645425580337, "Recall": 1.0, "F1 score": 0.3080477474008471, "PR_Thresholds": 0.21204713507234946, "PR_Thresholds_Shift": 0.21197479714281173, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18198362147406733, "Recall": 1.0, "F1 score": 0.30792917628945343, "PR_Thresholds": 0.21197479714281173, "PR_Thresholds_Shift": 0.21189466709818813, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18190086402910413, "Recall": 1.0, "F1 score": 0.3078106964217006, "PR_Thresholds": 0.21189466709818813, "PR_Thresholds_Shift": 0.21188446628589486, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18181818181818182, "Recall": 1.0, "F1 score": 0.3076923076923077, "PR_Thresholds": 0.21188446628589486, "PR_Thresholds_Shift": 0.21175569423022914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18173557473875512, "Recall": 1.0, "F1 score": 0.30757400999615536, "PR_Thresholds": 0.21175569423022914, "PR_Thresholds_Shift": 0.21140074984363666, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18165304268846502, "Recall": 1.0, "F1 score": 0.3074558032282859, "PR_Thresholds": 0.21140074984363666, "PR_Thresholds_Shift": 0.2112093114215041, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18157058556513844, "Recall": 1.0, "F1 score": 0.3073376872839032, "PR_Thresholds": 0.2112093114215041, "PR_Thresholds_Shift": 0.21092117939068109, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18148820326678766, "Recall": 1.0, "F1 score": 0.3072196620583717, "PR_Thresholds": 0.21092117939068109, "PR_Thresholds_Shift": 0.20941344614222135, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18140589569160998, "Recall": 1.0, "F1 score": 0.30710172744721687, "PR_Thresholds": 0.20941344614222135, "PR_Thresholds_Shift": 0.20938438171870793, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1813236627379873, "Recall": 1.0, "F1 score": 0.3069838833461243, "PR_Thresholds": 0.20938438171870793, "PR_Thresholds_Shift": 0.24034880238622278, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18876828692779613, "Recall": 1.0, "F1 score": 0.3175863437872171, "PR_Thresholds": 0.24034880238622278, "PR_Thresholds_Shift": 0.2086566808630803, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18115942028985507, "Recall": 1.0, "F1 score": 0.3067484662576687, "PR_Thresholds": 0.2086566808630803, "PR_Thresholds_Shift": 0.2158458300708312, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1827318410232983, "Recall": 1.0, "F1 score": 0.3089996137504828, "PR_Thresholds": 0.2158458300708312, "PR_Thresholds_Shift": 0.21606880604477205, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18281535648994515, "Recall": 1.0, "F1 score": 0.3091190108191654, "PR_Thresholds": 0.21606880604477205, "PR_Thresholds_Shift": 0.21662810383569656, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18289894833104708, "Recall": 1.0, "F1 score": 0.30923850019327404, "PR_Thresholds": 0.21662810383569656, "PR_Thresholds_Shift": 0.21756014644017788, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18298261665141813, "Recall": 1.0, "F1 score": 0.30935808197989173, "PR_Thresholds": 0.21756014644017788, "PR_Thresholds_Shift": 0.2238233282806616, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18467220683287167, "Recall": 1.0, "F1 score": 0.31176929072486365, "PR_Thresholds": 0.2238233282806616, "PR_Thresholds_Shift": 0.2224726211615294, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18458698661744347, "Recall": 1.0, "F1 score": 0.3116478379431243, "PR_Thresholds": 0.2224726211615294, "PR_Thresholds_Shift": 0.22195848046069136, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18450184501845018, "Recall": 1.0, "F1 score": 0.31152647975077885, "PR_Thresholds": 0.22195848046069136, "PR_Thresholds_Shift": 0.2213353742672385, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18441678192715538, "Recall": 1.0, "F1 score": 0.31140521603736865, "PR_Thresholds": 0.2213353742672385, "PR_Thresholds_Shift": 0.22113198975545767, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18433179723502305, "Recall": 1.0, "F1 score": 0.311284046692607, "PR_Thresholds": 0.22113198975545767, "PR_Thresholds_Shift": 0.22082462363058256, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18424689083371718, "Recall": 1.0, "F1 score": 0.31116297160637885, "PR_Thresholds": 0.22082462363058256, "PR_Thresholds_Shift": 0.22081325259753484, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1841620626151013, "Recall": 1.0, "F1 score": 0.3110419906687403, "PR_Thresholds": 0.22081325259753484, "PR_Thresholds_Shift": 0.22061224694455797, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18407731247123793, "Recall": 1.0, "F1 score": 0.3109211037699184, "PR_Thresholds": 0.22061224694455797, "PR_Thresholds_Shift": 0.21974743519810216, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18399264029438822, "Recall": 1.0, "F1 score": 0.31080031080031084, "PR_Thresholds": 0.21974743519810216, "PR_Thresholds_Shift": 0.22483088781745292, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18484288354898337, "Recall": 1.0, "F1 score": 0.3120124804992199, "PR_Thresholds": 0.22483088781745292, "PR_Thresholds_Shift": 0.21959158989605626, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1839080459770115, "Recall": 1.0, "F1 score": 0.3106796116504854, "PR_Thresholds": 0.21959158989605626, "PR_Thresholds_Shift": 0.21941596192301696, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18373909049150206, "Recall": 1.0, "F1 score": 0.3104384943733023, "PR_Thresholds": 0.21941596192301696, "PR_Thresholds_Shift": 0.21933142309617495, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18365472910927455, "Recall": 1.0, "F1 score": 0.3103180760279286, "PR_Thresholds": 0.21933142309617495, "PR_Thresholds_Shift": 0.21911690458912567, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18357044515832951, "Recall": 1.0, "F1 score": 0.31019775106630476, "PR_Thresholds": 0.21911690458912567, "PR_Thresholds_Shift": 0.2187873025914597, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1834862385321101, "Recall": 1.0, "F1 score": 0.31007751937984496, "PR_Thresholds": 0.2187873025914597, "PR_Thresholds_Shift": 0.21865502858186994, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18340210912425492, "Recall": 1.0, "F1 score": 0.3099573808601317, "PR_Thresholds": 0.21865502858186994, "PR_Thresholds_Shift": 0.21856245447317657, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18331805682859761, "Recall": 1.0, "F1 score": 0.30983733539891556, "PR_Thresholds": 0.21856245447317657, "PR_Thresholds_Shift": 0.21844261270314733, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1832340815391663, "Recall": 1.0, "F1 score": 0.3097173828881146, "PR_Thresholds": 0.21844261270314733, "PR_Thresholds_Shift": 0.21785345529146366, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18315018315018314, "Recall": 1.0, "F1 score": 0.3095975232198142, "PR_Thresholds": 0.21785345529146366, "PR_Thresholds_Shift": 0.2176596294208616, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18306636155606407, "Recall": 1.0, "F1 score": 0.3094777562862669, "PR_Thresholds": 0.2176596294208616, "PR_Thresholds_Shift": 0.21957680993738848, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18382352941176472, "Recall": 1.0, "F1 score": 0.31055900621118016, "PR_Thresholds": 0.21957680993738848, "PR_Thresholds_Shift": 0.24073778012017685, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18885741265344666, "Recall": 1.0, "F1 score": 0.317712470214456, "PR_Thresholds": 0.24073778012017685, "PR_Thresholds_Shift": 0.2542233678220298, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1929570670525808, "Recall": 1.0, "F1 score": 0.3234937323089365, "PR_Thresholds": 0.2542233678220298, "PR_Thresholds_Shift": 0.24200612827664955, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1890359168241966, "Recall": 1.0, "F1 score": 0.3179650238473768, "PR_Thresholds": 0.24200612827664955, "PR_Thresholds_Shift": 0.26247217922330723, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19521717911176184, "Recall": 1.0, "F1 score": 0.32666394446712943, "PR_Thresholds": 0.26247217922330723, "PR_Thresholds_Shift": 0.26221741246849706, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1951219512195122, "Recall": 1.0, "F1 score": 0.326530612244898, "PR_Thresholds": 0.26221741246849706, "PR_Thresholds_Shift": 0.261845840698116, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19502681618722575, "Recall": 1.0, "F1 score": 0.3263973888208895, "PR_Thresholds": 0.261845840698116, "PR_Thresholds_Shift": 0.261811119054308, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1949317738791423, "Recall": 1.0, "F1 score": 0.3262642740619902, "PR_Thresholds": 0.261811119054308, "PR_Thresholds_Shift": 0.26101363720627435, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1948368241597662, "Recall": 1.0, "F1 score": 0.3261312678353037, "PR_Thresholds": 0.26101363720627435, "PR_Thresholds_Shift": 0.2609130563061165, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19474196689386564, "Recall": 1.0, "F1 score": 0.32599837000814996, "PR_Thresholds": 0.2609130563061165, "PR_Thresholds_Shift": 0.2608281479546804, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19464720194647203, "Recall": 1.0, "F1 score": 0.3258655804480652, "PR_Thresholds": 0.2608281479546804, "PR_Thresholds_Shift": 0.26065328262107257, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19455252918287938, "Recall": 1.0, "F1 score": 0.32573289902280134, "PR_Thresholds": 0.26065328262107257, "PR_Thresholds_Shift": 0.26047163864900996, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19445794846864364, "Recall": 1.0, "F1 score": 0.32560032560032554, "PR_Thresholds": 0.26047163864900996, "PR_Thresholds_Shift": 0.260352417346794, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19436345966958213, "Recall": 1.0, "F1 score": 0.3254678600488202, "PR_Thresholds": 0.260352417346794, "PR_Thresholds_Shift": 0.2595928578928578, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1942690626517727, "Recall": 1.0, "F1 score": 0.3253355022366816, "PR_Thresholds": 0.2595928578928578, "PR_Thresholds_Shift": 0.2595116926600046, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1941747572815534, "Recall": 1.0, "F1 score": 0.3252032520325203, "PR_Thresholds": 0.2595116926600046, "PR_Thresholds_Shift": 0.25944832712626476, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19408054342552158, "Recall": 1.0, "F1 score": 0.32507110930516053, "PR_Thresholds": 0.25944832712626476, "PR_Thresholds_Shift": 0.2593101445461832, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19398642095053345, "Recall": 1.0, "F1 score": 0.3249390739236393, "PR_Thresholds": 0.2593101445461832, "PR_Thresholds_Shift": 0.25848321499851445, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19389238972370335, "Recall": 1.0, "F1 score": 0.3248071457572067, "PR_Thresholds": 0.25848321499851445, "PR_Thresholds_Shift": 0.2583071558154203, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1937984496124031, "Recall": 1.0, "F1 score": 0.32467532467532473, "PR_Thresholds": 0.2583071558154203, "PR_Thresholds_Shift": 0.2581898379402799, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1937046004842615, "Recall": 1.0, "F1 score": 0.32454361054766734, "PR_Thresholds": 0.2581898379402799, "PR_Thresholds_Shift": 0.2578355013779974, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1936108422071636, "Recall": 1.0, "F1 score": 0.32441200324412, "PR_Thresholds": 0.2578355013779974, "PR_Thresholds_Shift": 0.257172003969766, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1935171746492501, "Recall": 1.0, "F1 score": 0.3242805026347791, "PR_Thresholds": 0.257172003969766, "PR_Thresholds_Shift": 0.2629292964606045, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1953125, "Recall": 1.0, "F1 score": 0.32679738562091504, "PR_Thresholds": 0.2629292964606045, "PR_Thresholds_Shift": 0.2629829988410538, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19540791402051783, "Recall": 1.0, "F1 score": 0.3269309358398038, "PR_Thresholds": 0.2629829988410538, "PR_Thresholds_Shift": 0.26311173938723864, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19550342130987292, "Recall": 1.0, "F1 score": 0.3270645952575633, "PR_Thresholds": 0.26311173938723864, "PR_Thresholds_Shift": 0.26327756981362205, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19559902200489, "Recall": 1.0, "F1 score": 0.32719836400818, "PR_Thresholds": 0.26327756981362205, "PR_Thresholds_Shift": 0.2674113764823, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19753086419753085, "Recall": 1.0, "F1 score": 0.32989690721649484, "PR_Thresholds": 0.2674113764823, "PR_Thresholds_Shift": 0.26736183505182853, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19743336623889438, "Recall": 1.0, "F1 score": 0.3297609233305854, "PR_Thresholds": 0.26736183505182853, "PR_Thresholds_Shift": 0.2672384502717972, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1973359644795264, "Recall": 1.0, "F1 score": 0.3296250515039143, "PR_Thresholds": 0.2672384502717972, "PR_Thresholds_Shift": 0.26716998152210525, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19723865877712032, "Recall": 1.0, "F1 score": 0.32948929159802304, "PR_Thresholds": 0.26716998152210525, "PR_Thresholds_Shift": 0.26712969538759485, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19714144898965008, "Recall": 1.0, "F1 score": 0.32935364347468093, "PR_Thresholds": 0.26712969538759485, "PR_Thresholds_Shift": 0.2669181429248142, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19704433497536947, "Recall": 1.0, "F1 score": 0.3292181069958848, "PR_Thresholds": 0.2669181429248142, "PR_Thresholds_Shift": 0.2666954809206773, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19694731659281142, "Recall": 1.0, "F1 score": 0.3290826820238585, "PR_Thresholds": 0.2666954809206773, "PR_Thresholds_Shift": 0.2661741372307594, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1968503937007874, "Recall": 1.0, "F1 score": 0.3289473684210526, "PR_Thresholds": 0.2661741372307594, "PR_Thresholds_Shift": 0.2658346080680196, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19675356615838663, "Recall": 1.0, "F1 score": 0.3288121660501439, "PR_Thresholds": 0.2658346080680196, "PR_Thresholds_Shift": 0.2569634233197295, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19342359767891681, "Recall": 1.0, "F1 score": 0.3241491085899514, "PR_Thresholds": 0.2569634233197295, "PR_Thresholds_Shift": 0.26581197302389953, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19665683382497542, "Recall": 1.0, "F1 score": 0.3286770747740345, "PR_Thresholds": 0.26581197302389953, "PR_Thresholds_Shift": 0.26540406216592105, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19646365422396855, "Recall": 1.0, "F1 score": 0.3284072249589491, "PR_Thresholds": 0.26540406216592105, "PR_Thresholds_Shift": 0.2643759654929164, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19636720667648502, "Recall": 1.0, "F1 score": 0.3282724661469019, "PR_Thresholds": 0.2643759654929164, "PR_Thresholds_Shift": 0.26423667428525727, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19627085377821393, "Recall": 1.0, "F1 score": 0.3281378178835111, "PR_Thresholds": 0.26423667428525727, "PR_Thresholds_Shift": 0.26416391756833213, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.196174595389897, "Recall": 1.0, "F1 score": 0.3280032800328003, "PR_Thresholds": 0.26416391756833213, "PR_Thresholds_Shift": 0.2640853176815666, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19607843137254902, "Recall": 1.0, "F1 score": 0.3278688524590164, "PR_Thresholds": 0.2640853176815666, "PR_Thresholds_Shift": 0.263974724232931, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19598236158745713, "Recall": 1.0, "F1 score": 0.3277345350266284, "PR_Thresholds": 0.263974724232931, "PR_Thresholds_Shift": 0.2635948467621911, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1958863858961802, "Recall": 1.0, "F1 score": 0.3276003276003276, "PR_Thresholds": 0.2635948467621911, "PR_Thresholds_Shift": 0.2635011200026242, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19579050416054822, "Recall": 1.0, "F1 score": 0.3274662300450266, "PR_Thresholds": 0.2635011200026242, "PR_Thresholds_Shift": 0.2634707243427269, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19569471624266144, "Recall": 1.0, "F1 score": 0.3273322422258592, "PR_Thresholds": 0.2634707243427269, "PR_Thresholds_Shift": 0.2658075527876613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19656019656019655, "Recall": 1.0, "F1 score": 0.32854209445585214, "PR_Thresholds": 0.2658075527876613, "PR_Thresholds_Shift": 0.25670428692678926, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1933301111648139, "Recall": 1.0, "F1 score": 0.3240178209801539, "PR_Thresholds": 0.25670428692678926, "PR_Thresholds_Shift": 0.25633536395141565, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1932367149758454, "Recall": 1.0, "F1 score": 0.32388663967611336, "PR_Thresholds": 0.25633536395141565, "PR_Thresholds_Shift": 0.2550953850815586, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19314340898116852, "Recall": 1.0, "F1 score": 0.3237555645487657, "PR_Thresholds": 0.2550953850815586, "PR_Thresholds_Shift": 0.24688735883383237, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19083969465648856, "Recall": 1.0, "F1 score": 0.32051282051282054, "PR_Thresholds": 0.24688735883383237, "PR_Thresholds_Shift": 0.2468737793709513, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19074868860276586, "Recall": 1.0, "F1 score": 0.32038446135362436, "PR_Thresholds": 0.2468737793709513, "PR_Thresholds_Shift": 0.24663882766507889, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19065776930409914, "Recall": 1.0, "F1 score": 0.32025620496397117, "PR_Thresholds": 0.24663882766507889, "PR_Thresholds_Shift": 0.24631223691126444, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19056693663649357, "Recall": 1.0, "F1 score": 0.3201280512204882, "PR_Thresholds": 0.24631223691126444, "PR_Thresholds_Shift": 0.24627431040796835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19047619047619047, "Recall": 1.0, "F1 score": 0.32, "PR_Thresholds": 0.24627431040796835, "PR_Thresholds_Shift": 0.2455957906984623, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19038553069966682, "Recall": 1.0, "F1 score": 0.31987205117952816, "PR_Thresholds": 0.2455957906984623, "PR_Thresholds_Shift": 0.2454888839070074, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19029495718363462, "Recall": 1.0, "F1 score": 0.319744204636291, "PR_Thresholds": 0.2454888839070074, "PR_Thresholds_Shift": 0.24546825253942037, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1902044698050404, "Recall": 1.0, "F1 score": 0.31961646024770274, "PR_Thresholds": 0.24546825253942037, "PR_Thresholds_Shift": 0.24520597765573968, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19011406844106463, "Recall": 1.0, "F1 score": 0.3194888178913738, "PR_Thresholds": 0.24520597765573968, "PR_Thresholds_Shift": 0.24690522559626063, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1909307875894988, "Recall": 1.0, "F1 score": 0.32064128256513025, "PR_Thresholds": 0.24690522559626063, "PR_Thresholds_Shift": 0.24507276512101023, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19002375296912113, "Recall": 1.0, "F1 score": 0.3193612774451098, "PR_Thresholds": 0.24507276512101023, "PR_Thresholds_Shift": 0.244971499925392, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18984337921214997, "Recall": 1.0, "F1 score": 0.3191065017949741, "PR_Thresholds": 0.244971499925392, "PR_Thresholds_Shift": 0.2449601015796405, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18975332068311196, "Recall": 1.0, "F1 score": 0.3189792663476874, "PR_Thresholds": 0.2449601015796405, "PR_Thresholds_Shift": 0.24467531867469322, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1896633475580844, "Recall": 1.0, "F1 score": 0.3188521323236349, "PR_Thresholds": 0.24467531867469322, "PR_Thresholds_Shift": 0.24464475348423081, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1895734597156398, "Recall": 1.0, "F1 score": 0.3187250996015936, "PR_Thresholds": 0.24464475348423081, "PR_Thresholds_Shift": 0.2446106635752134, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18948365703458075, "Recall": 1.0, "F1 score": 0.3185981680605336, "PR_Thresholds": 0.2446106635752134, "PR_Thresholds_Shift": 0.24385064457269265, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1893939393939394, "Recall": 1.0, "F1 score": 0.3184713375796178, "PR_Thresholds": 0.24385064457269265, "PR_Thresholds_Shift": 0.24340127792169633, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18930430667297682, "Recall": 1.0, "F1 score": 0.3183446080382014, "PR_Thresholds": 0.24340127792169633, "PR_Thresholds_Shift": 0.24300539268610527, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1892147587511826, "Recall": 1.0, "F1 score": 0.31821797931583135, "PR_Thresholds": 0.24300539268610527, "PR_Thresholds_Shift": 0.2427194772955373, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18912529550827423, "Recall": 1.0, "F1 score": 0.3180914512922465, "PR_Thresholds": 0.2427194772955373, "PR_Thresholds_Shift": 0.24503306462348898, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1899335232668566, "Recall": 1.0, "F1 score": 0.3192338387869114, "PR_Thresholds": 0.24503306462348898, "PR_Thresholds_Shift": 0.24106217868525212, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1889466225791214, "Recall": 1.0, "F1 score": 0.31783869686134286, "PR_Thresholds": 0.24106217868525212, "PR_Thresholds_Shift": 0.24714410390757735, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19102196752626552, "Recall": 1.0, "F1 score": 0.32076984763432237, "PR_Thresholds": 0.24714410390757735, "PR_Thresholds_Shift": 0.2474003570388138, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19120458891013384, "Recall": 1.0, "F1 score": 0.3210272873194221, "PR_Thresholds": 0.2474003570388138, "PR_Thresholds_Shift": 0.2545051383510357, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19305019305019305, "Recall": 1.0, "F1 score": 0.32362459546925565, "PR_Thresholds": 0.2545051383510357, "PR_Thresholds_Shift": 0.20847456355003544, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1810774105930285, "Recall": 1.0, "F1 score": 0.306630893062476, "PR_Thresholds": 0.20847456355003544, "PR_Thresholds_Shift": 0.2540293682420116, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19286403085824494, "Recall": 1.0, "F1 score": 0.32336297493936944, "PR_Thresholds": 0.2540293682420116, "PR_Thresholds_Shift": 0.25394933169305556, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1927710843373494, "Recall": 1.0, "F1 score": 0.32323232323232326, "PR_Thresholds": 0.25394933169305556, "PR_Thresholds_Shift": 0.25379506259771467, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1926782273603083, "Recall": 1.0, "F1 score": 0.32310177705977383, "PR_Thresholds": 0.25379506259771467, "PR_Thresholds_Shift": 0.2529030260646962, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19258545979778527, "Recall": 1.0, "F1 score": 0.32297133629390395, "PR_Thresholds": 0.2529030260646962, "PR_Thresholds_Shift": 0.25247572221524794, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19249278152069296, "Recall": 1.0, "F1 score": 0.3228410008071025, "PR_Thresholds": 0.25247572221524794, "PR_Thresholds_Shift": 0.2524031326002896, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1924001924001924, "Recall": 1.0, "F1 score": 0.3227107704719645, "PR_Thresholds": 0.2524031326002896, "PR_Thresholds_Shift": 0.2522703342838906, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19230769230769232, "Recall": 1.0, "F1 score": 0.32258064516129037, "PR_Thresholds": 0.2522703342838906, "PR_Thresholds_Shift": 0.24719195401852526, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19111323459149546, "Recall": 1.0, "F1 score": 0.32089851584436424, "PR_Thresholds": 0.24719195401852526, "PR_Thresholds_Shift": 0.2518507938085224, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19221528111484862, "Recall": 1.0, "F1 score": 0.32245062474808545, "PR_Thresholds": 0.2518507938085224, "PR_Thresholds_Shift": 0.25159555487360613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19203072491598655, "Recall": 1.0, "F1 score": 0.3221908981071285, "PR_Thresholds": 0.25159555487360613, "PR_Thresholds_Shift": 0.2514697391722233, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19193857965451055, "Recall": 1.0, "F1 score": 0.322061191626409, "PR_Thresholds": 0.2514697391722233, "PR_Thresholds_Shift": 0.2514655072635433, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19184652278177458, "Recall": 1.0, "F1 score": 0.32193158953722334, "PR_Thresholds": 0.2514655072635433, "PR_Thresholds_Shift": 0.2511416850429391, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19175455417066156, "Recall": 1.0, "F1 score": 0.32180209171359614, "PR_Thresholds": 0.2511416850429391, "PR_Thresholds_Shift": 0.25066095229996216, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19166267369429804, "Recall": 1.0, "F1 score": 0.32167269802975473, "PR_Thresholds": 0.25066095229996216, "PR_Thresholds_Shift": 0.24971940420101799, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19157088122605365, "Recall": 1.0, "F1 score": 0.3215434083601286, "PR_Thresholds": 0.24971940420101799, "PR_Thresholds_Shift": 0.24954738847949307, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19147917663954045, "Recall": 1.0, "F1 score": 0.3214142225793491, "PR_Thresholds": 0.24954738847949307, "PR_Thresholds_Shift": 0.24913591501908697, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19138755980861244, "Recall": 1.0, "F1 score": 0.32128514056224894, "PR_Thresholds": 0.24913591501908697, "PR_Thresholds_Shift": 0.248014779781595, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1912960306073649, "Recall": 1.0, "F1 score": 0.32115616218386184, "PR_Thresholds": 0.248014779781595, "PR_Thresholds_Shift": 0.2516891401376379, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19212295869356388, "Recall": 1.0, "F1 score": 0.32232070910556, "PR_Thresholds": 0.2516891401376379, "PR_Thresholds_Shift": 0.20845628351274134, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18099547511312217, "Recall": 1.0, "F1 score": 0.3065134099616858, "PR_Thresholds": 0.20845628351274134, "PR_Thresholds_Shift": 0.1886871275080053, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17738359201773837, "Recall": 1.0, "F1 score": 0.3013182674199623, "PR_Thresholds": 0.1886871275080053, "PR_Thresholds_Shift": 0.20598701936072977, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18083182640144665, "Recall": 1.0, "F1 score": 0.3062787136294028, "PR_Thresholds": 0.20598701936072977, "PR_Thresholds_Shift": 0.13193807967756377, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17152658662092624, "Recall": 1.0, "F1 score": 0.29282576866764276, "PR_Thresholds": 0.13193807967756377, "PR_Thresholds_Shift": 0.1275255679869114, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17145306472353194, "Recall": 1.0, "F1 score": 0.2927186242224662, "PR_Thresholds": 0.1275255679869114, "PR_Thresholds_Shift": 0.12603056328308, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1713796058269066, "Recall": 1.0, "F1 score": 0.29261155815654716, "PR_Thresholds": 0.12603056328308, "PR_Thresholds_Shift": 0.12584253862506756, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17130620985010706, "Recall": 1.0, "F1 score": 0.29250457038391225, "PR_Thresholds": 0.12584253862506756, "PR_Thresholds_Shift": 0.12440994077713319, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17123287671232876, "Recall": 1.0, "F1 score": 0.29239766081871343, "PR_Thresholds": 0.12440994077713319, "PR_Thresholds_Shift": 0.1242423204875876, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17115960633290545, "Recall": 1.0, "F1 score": 0.2922908293752284, "PR_Thresholds": 0.1242423204875876, "PR_Thresholds_Shift": 0.12332323637378878, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1710863986313088, "Recall": 1.0, "F1 score": 0.2921840759678598, "PR_Thresholds": 0.12332323637378878, "PR_Thresholds_Shift": 0.12089833247801557, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17101325352714836, "Recall": 1.0, "F1 score": 0.29207740051113545, "PR_Thresholds": 0.12089833247801557, "PR_Thresholds_Shift": 0.12023211297751007, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17094017094017094, "Recall": 1.0, "F1 score": 0.291970802919708, "PR_Thresholds": 0.12023211297751007, "PR_Thresholds_Shift": 0.11878687204598076, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17086715079026057, "Recall": 1.0, "F1 score": 0.2918642831083546, "PR_Thresholds": 0.11878687204598076, "PR_Thresholds_Shift": 0.11858263078565529, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1707941929974381, "Recall": 1.0, "F1 score": 0.29175784099197666, "PR_Thresholds": 0.11858263078565529, "PR_Thresholds_Shift": 0.11417335120038424, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17072129748186085, "Recall": 1.0, "F1 score": 0.2916514764855997, "PR_Thresholds": 0.11417335120038424, "PR_Thresholds_Shift": 0.11305248806219337, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17064846416382254, "Recall": 1.0, "F1 score": 0.2915451895043732, "PR_Thresholds": 0.11305248806219337, "PR_Thresholds_Shift": 0.11254395288510571, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17057569296375266, "Recall": 1.0, "F1 score": 0.2914389799635701, "PR_Thresholds": 0.11254395288510571, "PR_Thresholds_Shift": 0.11093957088863055, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17050298380221654, "Recall": 1.0, "F1 score": 0.29133284777858703, "PR_Thresholds": 0.11093957088863055, "PR_Thresholds_Shift": 0.10956036702745808, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17043033659991477, "Recall": 1.0, "F1 score": 0.2912267928649436, "PR_Thresholds": 0.10956036702745808, "PR_Thresholds_Shift": 0.10824772257538201, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17035775127768313, "Recall": 1.0, "F1 score": 0.2911208151382824, "PR_Thresholds": 0.10824772257538201, "PR_Thresholds_Shift": 0.10795344759158648, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17028522775649213, "Recall": 1.0, "F1 score": 0.2910149145143689, "PR_Thresholds": 0.10795344759158648, "PR_Thresholds_Shift": 0.106006265791048, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1702127659574468, "Recall": 1.0, "F1 score": 0.2909090909090909, "PR_Thresholds": 0.106006265791048, "PR_Thresholds_Shift": 0.13196450803943227, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1716001716001716, "Recall": 1.0, "F1 score": 0.2929329915781765, "PR_Thresholds": 0.13196450803943227, "PR_Thresholds_Shift": 0.13567894429920357, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17167381974248927, "Recall": 1.0, "F1 score": 0.29304029304029305, "PR_Thresholds": 0.13567894429920357, "PR_Thresholds_Shift": 0.13747793624081833, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17174753112924002, "Recall": 1.0, "F1 score": 0.29314767314034446, "PR_Thresholds": 0.13747793624081833, "PR_Thresholds_Shift": 0.13794913963557476, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1718213058419244, "Recall": 1.0, "F1 score": 0.29325513196480935, "PR_Thresholds": 0.13794913963557476, "PR_Thresholds_Shift": 0.1540900481186566, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1733102253032929, "Recall": 1.0, "F1 score": 0.29542097488921715, "PR_Thresholds": 0.1540900481186566, "PR_Thresholds_Shift": 0.15345121481804483, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17323516673884798, "Recall": 1.0, "F1 score": 0.29531192321889993, "PR_Thresholds": 0.15345121481804483, "PR_Thresholds_Shift": 0.15336523239583, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17316017316017315, "Recall": 1.0, "F1 score": 0.2952029520295203, "PR_Thresholds": 0.15336523239583, "PR_Thresholds_Shift": 0.15315508803931108, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17308524448290782, "Recall": 1.0, "F1 score": 0.2950940612320177, "PR_Thresholds": 0.15315508803931108, "PR_Thresholds_Shift": 0.15076050159384874, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17301038062283736, "Recall": 1.0, "F1 score": 0.2949852507374631, "PR_Thresholds": 0.15076050159384874, "PR_Thresholds_Shift": 0.14873037568142988, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17293558149589278, "Recall": 1.0, "F1 score": 0.2948765204570586, "PR_Thresholds": 0.14873037568142988, "PR_Thresholds_Shift": 0.1481750720208233, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17286084701815038, "Recall": 1.0, "F1 score": 0.2947678703021371, "PR_Thresholds": 0.1481750720208233, "PR_Thresholds_Shift": 0.14776484444113686, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17278617710583152, "Recall": 1.0, "F1 score": 0.2946593001841621, "PR_Thresholds": 0.14776484444113686, "PR_Thresholds_Shift": 0.14736225751019616, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17271157167530224, "Recall": 1.0, "F1 score": 0.29455081001472755, "PR_Thresholds": 0.14736225751019616, "PR_Thresholds_Shift": 0.10563244013512929, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1701403658017865, "Recall": 1.0, "F1 score": 0.2908033442384587, "PR_Thresholds": 0.10563244013512929, "PR_Thresholds_Shift": 0.14700796025319607, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17263703064307295, "Recall": 1.0, "F1 score": 0.29444239970555763, "PR_Thresholds": 0.14700796025319607, "PR_Thresholds_Shift": 0.1462730070007962, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.172488141440276, "Recall": 1.0, "F1 score": 0.2942258183155572, "PR_Thresholds": 0.1462730070007962, "PR_Thresholds_Shift": 0.14536460311729837, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1724137931034483, "Recall": 1.0, "F1 score": 0.29411764705882354, "PR_Thresholds": 0.14536460311729837, "PR_Thresholds_Shift": 0.1450201634247515, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17233950883239982, "Recall": 1.0, "F1 score": 0.29400955531054757, "PR_Thresholds": 0.1450201634247515, "PR_Thresholds_Shift": 0.14366597974182038, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17226528854435832, "Recall": 1.0, "F1 score": 0.29390154298310067, "PR_Thresholds": 0.14366597974182038, "PR_Thresholds_Shift": 0.14276942873307258, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17219113215669393, "Recall": 1.0, "F1 score": 0.29379360998898274, "PR_Thresholds": 0.14276942873307258, "PR_Thresholds_Shift": 0.1418553109248223, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1721170395869191, "Recall": 1.0, "F1 score": 0.29368575624082227, "PR_Thresholds": 0.1418553109248223, "PR_Thresholds_Shift": 0.14142883179553528, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17204301075268819, "Recall": 1.0, "F1 score": 0.29357798165137616, "PR_Thresholds": 0.14142883179553528, "PR_Thresholds_Shift": 0.13990567704953977, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17196904557179707, "Recall": 1.0, "F1 score": 0.293470286133529, "PR_Thresholds": 0.13990567704953977, "PR_Thresholds_Shift": 0.1386130984890826, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17189514396218306, "Recall": 1.0, "F1 score": 0.2933626696002934, "PR_Thresholds": 0.1386130984890826, "PR_Thresholds_Shift": 0.14687155651666983, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1725625539257981, "Recall": 1.0, "F1 score": 0.29433406916850624, "PR_Thresholds": 0.14687155651666983, "PR_Thresholds_Shift": 0.15435258237978122, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17338534893801474, "Recall": 1.0, "F1 score": 0.2955301071296638, "PR_Thresholds": 0.15435258237978122, "PR_Thresholds_Shift": 0.10422185656356836, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17006802721088435, "Recall": 1.0, "F1 score": 0.29069767441860467, "PR_Thresholds": 0.10422185656356836, "PR_Thresholds_Shift": 0.10248593408958051, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16992353440951571, "Recall": 1.0, "F1 score": 0.2904865649963689, "PR_Thresholds": 0.10248593408958051, "PR_Thresholds_Shift": 0.06618981834481902, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16813787305590586, "Recall": 1.0, "F1 score": 0.28787333573227786, "PR_Thresholds": 0.06618981834481902, "PR_Thresholds_Shift": 0.060078046170816135, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16806722689075632, "Recall": 1.0, "F1 score": 0.28776978417266186, "PR_Thresholds": 0.060078046170816135, "PR_Thresholds_Shift": 0.057441982477994036, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16799664006719867, "Recall": 1.0, "F1 score": 0.2876663070837828, "PR_Thresholds": 0.057441982477994036, "PR_Thresholds_Shift": 0.056120880433010445, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16792611251049538, "Recall": 1.0, "F1 score": 0.2875629043853343, "PR_Thresholds": 0.056120880433010445, "PR_Thresholds_Shift": 0.05495273719440713, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1678556441460344, "Recall": 1.0, "F1 score": 0.2874595759971254, "PR_Thresholds": 0.05495273719440713, "PR_Thresholds_Shift": 0.05337491882241063, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16778523489932887, "Recall": 1.0, "F1 score": 0.28735632183908044, "PR_Thresholds": 0.05337491882241063, "PR_Thresholds_Shift": 0.052200254523986245, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16771488469601678, "Recall": 1.0, "F1 score": 0.2872531418312388, "PR_Thresholds": 0.052200254523986245, "PR_Thresholds_Shift": 0.049714204849664045, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16764459346186086, "Recall": 1.0, "F1 score": 0.2871500358937545, "PR_Thresholds": 0.049714204849664045, "PR_Thresholds_Shift": 0.0465055345355071, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16757436112274823, "Recall": 1.0, "F1 score": 0.2870470039468963, "PR_Thresholds": 0.0465055345355071, "PR_Thresholds_Shift": 0.04474159477315687, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16750418760469013, "Recall": 1.0, "F1 score": 0.2869440459110474, "PR_Thresholds": 0.04474159477315687, "PR_Thresholds_Shift": 0.03918289986087914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1674340728338217, "Recall": 1.0, "F1 score": 0.28684116170670493, "PR_Thresholds": 0.03918289986087914, "PR_Thresholds_Shift": 0.037356504840554805, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16736401673640167, "Recall": 1.0, "F1 score": 0.2867383512544803, "PR_Thresholds": 0.037356504840554805, "PR_Thresholds_Shift": 0.035046137970840996, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1672940192388122, "Recall": 1.0, "F1 score": 0.28663561447509855, "PR_Thresholds": 0.035046137970840996, "PR_Thresholds_Shift": 0.03067521510129062, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16722408026755853, "Recall": 1.0, "F1 score": 0.2865329512893983, "PR_Thresholds": 0.03067521510129062, "PR_Thresholds_Shift": 0.018092396934921096, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1671541997492687, "Recall": 1.0, "F1 score": 0.2864303616183316, "PR_Thresholds": 0.018092396934921096, "PR_Thresholds_Shift": 0.012534270980203266, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1670843776106934, "Recall": 1.0, "F1 score": 0.28632784538296346, "PR_Thresholds": 0.012534270980203266, "PR_Thresholds_Shift": 0.0067742189723785096, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16701461377870563, "Recall": 1.0, "F1 score": 0.28622540250447226, "PR_Thresholds": 0.0067742189723785096, "PR_Thresholds_Shift": 0.003567290710902671, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1669449081803005, "Recall": 1.0, "F1 score": 0.28612303290414876, "PR_Thresholds": 0.003567290710902671, "PR_Thresholds_Shift": 0.2678087438254023, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1976284584980237, "Recall": 1.0, "F1 score": 0.33003300330033003, "PR_Thresholds": 0.2678087438254023, "PR_Thresholds_Shift": 0.0666989898191247, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16820857863751051, "Recall": 1.0, "F1 score": 0.28797696184305255, "PR_Thresholds": 0.0666989898191247, "PR_Thresholds_Shift": 0.06748385394249451, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16827934371055953, "Recall": 1.0, "F1 score": 0.2880806625855239, "PR_Thresholds": 0.06748385394249451, "PR_Thresholds_Shift": 0.07098511506422817, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16835016835016836, "Recall": 1.0, "F1 score": 0.2881844380403459, "PR_Thresholds": 0.07098511506422817, "PR_Thresholds_Shift": 0.07208832621856903, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16842105263157894, "Recall": 1.0, "F1 score": 0.2882882882882883, "PR_Thresholds": 0.07208832621856903, "PR_Thresholds_Shift": 0.10207362210564347, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16985138004246284, "Recall": 1.0, "F1 score": 0.29038112522686027, "PR_Thresholds": 0.10207362210564347, "PR_Thresholds_Shift": 0.10206444672340315, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1697792869269949, "Recall": 1.0, "F1 score": 0.29027576197387517, "PR_Thresholds": 0.10206444672340315, "PR_Thresholds_Shift": 0.10195042798557069, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1697072549851506, "Recall": 1.0, "F1 score": 0.29017047515415306, "PR_Thresholds": 0.10195042798557069, "PR_Thresholds_Shift": 0.10043716976895761, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16963528413910092, "Recall": 1.0, "F1 score": 0.290065264684554, "PR_Thresholds": 0.10043716976895761, "PR_Thresholds_Shift": 0.10030529142905298, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1695633743111488, "Recall": 1.0, "F1 score": 0.2899601304820587, "PR_Thresholds": 0.10030529142905298, "PR_Thresholds_Shift": 0.09778187924821591, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1694915254237288, "Recall": 1.0, "F1 score": 0.2898550724637681, "PR_Thresholds": 0.09778187924821591, "PR_Thresholds_Shift": 0.09744340108421518, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16941973739940702, "Recall": 1.0, "F1 score": 0.28975009054690326, "PR_Thresholds": 0.09744340108421518, "PR_Thresholds_Shift": 0.09565165067834824, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1693480101608806, "Recall": 1.0, "F1 score": 0.2896451846488052, "PR_Thresholds": 0.09565165067834824, "PR_Thresholds_Shift": 0.09387200952611796, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16927634363097757, "Recall": 1.0, "F1 score": 0.28954035468693445, "PR_Thresholds": 0.09387200952611796, "PR_Thresholds_Shift": 0.10331193376015446, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16999575010624735, "Recall": 1.0, "F1 score": 0.29059208136578274, "PR_Thresholds": 0.10331193376015446, "PR_Thresholds_Shift": 0.09263226581535416, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1692047377326565, "Recall": 1.0, "F1 score": 0.28943560057887124, "PR_Thresholds": 0.09263226581535416, "PR_Thresholds_Shift": 0.09026717508917725, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16906170752324598, "Recall": 1.0, "F1 score": 0.28922631959508316, "PR_Thresholds": 0.09026717508917725, "PR_Thresholds_Shift": 0.0897989146302468, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16899028305872413, "Recall": 1.0, "F1 score": 0.28912179255511383, "PR_Thresholds": 0.0897989146302468, "PR_Thresholds_Shift": 0.08973844323256436, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16891891891891891, "Recall": 1.0, "F1 score": 0.28901734104046245, "PR_Thresholds": 0.08973844323256436, "PR_Thresholds_Shift": 0.0891437828431269, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16884761502743773, "Recall": 1.0, "F1 score": 0.28891296496930297, "PR_Thresholds": 0.0891437828431269, "PR_Thresholds_Shift": 0.08808654151428252, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16877637130801687, "Recall": 1.0, "F1 score": 0.2888086642599278, "PR_Thresholds": 0.08808654151428252, "PR_Thresholds_Shift": 0.08702712767394666, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1687051876845213, "Recall": 1.0, "F1 score": 0.28870443883074703, "PR_Thresholds": 0.08702712767394666, "PR_Thresholds_Shift": 0.0784002531777, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16863406408094436, "Recall": 1.0, "F1 score": 0.28860028860028863, "PR_Thresholds": 0.0784002531777, "PR_Thresholds_Shift": 0.07670479786381607, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1685630004214075, "Recall": 1.0, "F1 score": 0.28849621348719795, "PR_Thresholds": 0.07670479786381607, "PR_Thresholds_Shift": 0.0759950047701462, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16849199663016007, "Recall": 1.0, "F1 score": 0.2883922134102379, "PR_Thresholds": 0.0759950047701462, "PR_Thresholds_Shift": 0.09257126827378065, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16913319238900634, "Recall": 1.0, "F1 score": 0.28933092224231466, "PR_Thresholds": 0.09257126827378065, "PR_Thresholds_Shift": 0.2065891438013559, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18091361374943465, "Recall": 1.0, "F1 score": 0.3063960168517809, "PR_Thresholds": 0.2065891438013559, "PR_Thresholds_Shift": 0.15437469606390697, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17346053772766695, "Recall": 1.0, "F1 score": 0.2956393200295639, "PR_Thresholds": 0.15437469606390697, "PR_Thresholds_Shift": 0.1549194124741918, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1736111111111111, "Recall": 1.0, "F1 score": 0.29585798816568043, "PR_Thresholds": 0.1549194124741918, "PR_Thresholds_Shift": 0.19507177490191097, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17881090746535538, "Recall": 1.0, "F1 score": 0.30337504740235116, "PR_Thresholds": 0.19507177490191097, "PR_Thresholds_Shift": 0.19502342230795155, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17873100983020554, "Recall": 1.0, "F1 score": 0.3032600454890068, "PR_Thresholds": 0.19502342230795155, "PR_Thresholds_Shift": 0.19453261960530807, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1786511835640911, "Recall": 1.0, "F1 score": 0.3031451307313376, "PR_Thresholds": 0.19453261960530807, "PR_Thresholds_Shift": 0.19395763730632823, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17857142857142858, "Recall": 1.0, "F1 score": 0.30303030303030304, "PR_Thresholds": 0.19395763730632823, "PR_Thresholds_Shift": 0.19328658518225794, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.178491744756805, "Recall": 1.0, "F1 score": 0.30291556228701244, "PR_Thresholds": 0.19328658518225794, "PR_Thresholds_Shift": 0.19306099002912558, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1784121320249777, "Recall": 1.0, "F1 score": 0.3028009084027252, "PR_Thresholds": 0.19306099002912558, "PR_Thresholds_Shift": 0.1929612979991664, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17833259028087384, "Recall": 1.0, "F1 score": 0.3026863412788498, "PR_Thresholds": 0.1929612979991664, "PR_Thresholds_Shift": 0.19207167089619065, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17825311942959002, "Recall": 1.0, "F1 score": 0.30257186081694404, "PR_Thresholds": 0.19207167089619065, "PR_Thresholds_Shift": 0.19204375145540786, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17817371937639198, "Recall": 1.0, "F1 score": 0.30245746691871456, "PR_Thresholds": 0.19204375145540786, "PR_Thresholds_Shift": 0.1918601056617275, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17809439002671415, "Recall": 1.0, "F1 score": 0.3023431594860166, "PR_Thresholds": 0.1918601056617275, "PR_Thresholds_Shift": 0.1913613952019102, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1780151312861593, "Recall": 1.0, "F1 score": 0.3022289384208538, "PR_Thresholds": 0.1913613952019102, "PR_Thresholds_Shift": 0.19125335227016224, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17793594306049823, "Recall": 1.0, "F1 score": 0.3021148036253776, "PR_Thresholds": 0.19125335227016224, "PR_Thresholds_Shift": 0.19069609547016664, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17785682525566918, "Recall": 1.0, "F1 score": 0.3020007550018875, "PR_Thresholds": 0.19069609547016664, "PR_Thresholds_Shift": 0.18998332642781776, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17777777777777778, "Recall": 1.0, "F1 score": 0.3018867924528302, "PR_Thresholds": 0.18998332642781776, "PR_Thresholds_Shift": 0.18955347866406438, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1776988005330964, "Recall": 1.0, "F1 score": 0.3017729158807997, "PR_Thresholds": 0.18955347866406438, "PR_Thresholds_Shift": 0.18952535464235531, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17761989342806395, "Recall": 1.0, "F1 score": 0.30165912518853694, "PR_Thresholds": 0.18952535464235531, "PR_Thresholds_Shift": 0.1891941355035434, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1775410563692854, "Recall": 1.0, "F1 score": 0.30154542027892955, "PR_Thresholds": 0.1891941355035434, "PR_Thresholds_Shift": 0.18878202977927108, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1774622892635315, "Recall": 1.0, "F1 score": 0.3014318010550113, "PR_Thresholds": 0.18878202977927108, "PR_Thresholds_Shift": 0.18864477236258337, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1773049645390071, "Recall": 1.0, "F1 score": 0.30120481927710846, "PR_Thresholds": 0.18864477236258337, "PR_Thresholds_Shift": 0.19519922603250778, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17889087656529518, "Recall": 1.0, "F1 score": 0.30349013657056145, "PR_Thresholds": 0.19519922603250778, "PR_Thresholds_Shift": 0.19558592607122582, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1789709172259508, "Recall": 1.0, "F1 score": 0.3036053130929791, "PR_Thresholds": 0.19558592607122582, "PR_Thresholds_Shift": 0.19583541709304944, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17905102954341987, "Recall": 1.0, "F1 score": 0.30372057706909644, "PR_Thresholds": 0.19583541709304944, "PR_Thresholds_Shift": 0.19645816494738835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17913121361397225, "Recall": 1.0, "F1 score": 0.3038359285985568, "PR_Thresholds": 0.19645816494738835, "PR_Thresholds_Shift": 0.2056049475029647, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1807501129688206, "Recall": 1.0, "F1 score": 0.3061615001913509, "PR_Thresholds": 0.2056049475029647, "PR_Thresholds_Shift": 0.20391957965542787, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18066847335140018, "Recall": 1.0, "F1 score": 0.30604437643458304, "PR_Thresholds": 0.20391957965542787, "PR_Thresholds_Shift": 0.20390254131378305, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18058690744920994, "Recall": 1.0, "F1 score": 0.30592734225621415, "PR_Thresholds": 0.20390254131378305, "PR_Thresholds_Shift": 0.2027853084638341, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18050541516245489, "Recall": 1.0, "F1 score": 0.30581039755351686, "PR_Thresholds": 0.2027853084638341, "PR_Thresholds_Shift": 0.20223337708726802, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18042399639152007, "Recall": 1.0, "F1 score": 0.3056935422239205, "PR_Thresholds": 0.20223337708726802, "PR_Thresholds_Shift": 0.20134691378581804, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18034265103697025, "Recall": 1.0, "F1 score": 0.30557677616501144, "PR_Thresholds": 0.20134691378581804, "PR_Thresholds_Shift": 0.2011076488916446, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18026137899954936, "Recall": 1.0, "F1 score": 0.30546009927453227, "PR_Thresholds": 0.2011076488916446, "PR_Thresholds_Shift": 0.2010606191154441, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18018018018018017, "Recall": 1.0, "F1 score": 0.3053435114503817, "PR_Thresholds": 0.2010606191154441, "PR_Thresholds_Shift": 0.2009230019402701, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.180099054479964, "Recall": 1.0, "F1 score": 0.3052270125906143, "PR_Thresholds": 0.2009230019402701, "PR_Thresholds_Shift": 0.18712206816055618, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17722640673460346, "Recall": 1.0, "F1 score": 0.301091456529921, "PR_Thresholds": 0.18712206816055618, "PR_Thresholds_Shift": 0.19970566417822588, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.18001800180018002, "Recall": 1.0, "F1 score": 0.30511060259344014, "PR_Thresholds": 0.19970566417822588, "PR_Thresholds_Shift": 0.19877484457028935, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17985611510791366, "Recall": 1.0, "F1 score": 0.3048780487804878, "PR_Thresholds": 0.19877484457028935, "PR_Thresholds_Shift": 0.1987181262618469, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1797752808988764, "Recall": 1.0, "F1 score": 0.30476190476190473, "PR_Thresholds": 0.1987181262618469, "PR_Thresholds_Shift": 0.19839052524668718, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17969451931716082, "Recall": 1.0, "F1 score": 0.30464584920030463, "PR_Thresholds": 0.19839052524668718, "PR_Thresholds_Shift": 0.19824913899843483, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1796138302649304, "Recall": 1.0, "F1 score": 0.30452988199467074, "PR_Thresholds": 0.19824913899843483, "PR_Thresholds_Shift": 0.19768150198873932, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17953321364452424, "Recall": 1.0, "F1 score": 0.30441400304414, "PR_Thresholds": 0.19768150198873932, "PR_Thresholds_Shift": 0.19742956181968943, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17945266935845672, "Recall": 1.0, "F1 score": 0.3042982122480031, "PR_Thresholds": 0.19742956181968943, "PR_Thresholds_Shift": 0.1973770394809095, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17937219730941703, "Recall": 1.0, "F1 score": 0.3041825095057034, "PR_Thresholds": 0.1973770394809095, "PR_Thresholds_Shift": 0.19723855806056287, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17929179740026893, "Recall": 1.0, "F1 score": 0.3040668947168377, "PR_Thresholds": 0.19723855806056287, "PR_Thresholds_Shift": 0.19655593129671975, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17921146953405018, "Recall": 1.0, "F1 score": 0.30395136778115506, "PR_Thresholds": 0.19655593129671975, "PR_Thresholds_Shift": 0.19895877084319027, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1799370220422852, "Recall": 1.0, "F1 score": 0.30499428135722456, "PR_Thresholds": 0.19895877084319027, "PR_Thresholds_Shift": 0.15470153078895732, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1735357917570499, "Recall": 1.0, "F1 score": 0.29574861367837335, "PR_Thresholds": 0.15470153078895732, "PR_Thresholds_Shift": 0.18638230209549878, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1771479185119575, "Recall": 1.0, "F1 score": 0.3009781790820166, "PR_Thresholds": 0.18638230209549878, "PR_Thresholds_Shift": 0.1849125599451758, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17699115044247787, "Recall": 1.0, "F1 score": 0.3007518796992481, "PR_Thresholds": 0.1849125599451758, "PR_Thresholds_Shift": 0.16811789516478914, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.175054704595186, "Recall": 1.0, "F1 score": 0.29795158286778395, "PR_Thresholds": 0.16811789516478914, "PR_Thresholds_Shift": 0.16752847424419537, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17497812773403323, "Recall": 1.0, "F1 score": 0.29784065524944153, "PR_Thresholds": 0.16752847424419537, "PR_Thresholds_Shift": 0.16749338356813767, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17490161783996502, "Recall": 1.0, "F1 score": 0.29772981019724604, "PR_Thresholds": 0.16749338356813767, "PR_Thresholds_Shift": 0.16550918447834703, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17482517482517482, "Recall": 1.0, "F1 score": 0.2976190476190476, "PR_Thresholds": 0.16550918447834703, "PR_Thresholds_Shift": 0.16417470787446306, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17474879860200962, "Recall": 1.0, "F1 score": 0.2975083674228338, "PR_Thresholds": 0.16417470787446306, "PR_Thresholds_Shift": 0.1635946986375821, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17467248908296942, "Recall": 1.0, "F1 score": 0.29739776951672864, "PR_Thresholds": 0.1635946986375821, "PR_Thresholds_Shift": 0.16336937444749045, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17459624618070713, "Recall": 1.0, "F1 score": 0.29728725380899296, "PR_Thresholds": 0.16336937444749045, "PR_Thresholds_Shift": 0.16307837381145868, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17452006980802792, "Recall": 1.0, "F1 score": 0.2971768202080237, "PR_Thresholds": 0.16307837381145868, "PR_Thresholds_Shift": 0.16132386997725545, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17444395987788922, "Recall": 1.0, "F1 score": 0.2970664686223542, "PR_Thresholds": 0.16132386997725545, "PR_Thresholds_Shift": 0.16113336098504638, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17436791630340018, "Recall": 1.0, "F1 score": 0.2969561989606533, "PR_Thresholds": 0.16113336098504638, "PR_Thresholds_Shift": 0.15990585392457102, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17429193899782136, "Recall": 1.0, "F1 score": 0.29684601113172543, "PR_Thresholds": 0.15990585392457102, "PR_Thresholds_Shift": 0.15900437043657994, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17421602787456447, "Recall": 1.0, "F1 score": 0.2967359050445104, "PR_Thresholds": 0.15900437043657994, "PR_Thresholds_Shift": 0.1589225028154036, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.174140182847192, "Recall": 1.0, "F1 score": 0.29662588060808304, "PR_Thresholds": 0.1589225028154036, "PR_Thresholds_Shift": 0.15795619776890404, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17406440382941687, "Recall": 1.0, "F1 score": 0.2965159377316531, "PR_Thresholds": 0.15795619776890404, "PR_Thresholds_Shift": 0.15753962255875892, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17398869073510223, "Recall": 1.0, "F1 score": 0.29640607632456467, "PR_Thresholds": 0.15753962255875892, "PR_Thresholds_Shift": 0.1574414925059815, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17391304347826086, "Recall": 1.0, "F1 score": 0.29629629629629634, "PR_Thresholds": 0.1574414925059815, "PR_Thresholds_Shift": 0.15706260147902634, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1738374619730552, "Recall": 1.0, "F1 score": 0.2961865975564606, "PR_Thresholds": 0.15706260147902634, "PR_Thresholds_Shift": 0.15606912742529566, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1737619461337967, "Recall": 1.0, "F1 score": 0.29607698001480387, "PR_Thresholds": 0.15606912742529566, "PR_Thresholds_Shift": 0.15542352811794213, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17368649587494572, "Recall": 1.0, "F1 score": 0.2959674435812061, "PR_Thresholds": 0.15542352811794213, "PR_Thresholds_Shift": 0.1683535231269274, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17513134851138354, "Recall": 1.0, "F1 score": 0.2980625931445604, "PR_Thresholds": 0.1683535231269274, "PR_Thresholds_Shift": 0.16878577142148976, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17520805957074026, "Recall": 1.0, "F1 score": 0.2981736861721953, "PR_Thresholds": 0.16878577142148976, "PR_Thresholds_Shift": 0.17119732950734137, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.175284837861525, "Recall": 1.0, "F1 score": 0.29828486204325133, "PR_Thresholds": 0.17119732950734137, "PR_Thresholds_Shift": 0.17123423467182378, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17536168347216133, "Recall": 1.0, "F1 score": 0.29839612085042894, "PR_Thresholds": 0.17123423467182378, "PR_Thresholds_Shift": 0.18297078809060488, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17691287041132242, "Recall": 1.0, "F1 score": 0.30063885757234127, "PR_Thresholds": 0.18297078809060488, "PR_Thresholds_Shift": 0.18247868699530975, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1768346595932803, "Recall": 1.0, "F1 score": 0.3005259203606311, "PR_Thresholds": 0.18247868699530975, "PR_Thresholds_Shift": 0.1818788670673165, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17675651789659744, "Recall": 1.0, "F1 score": 0.3004130679684566, "PR_Thresholds": 0.1818788670673165, "PR_Thresholds_Shift": 0.18167646755193725, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17667844522968199, "Recall": 1.0, "F1 score": 0.3003003003003003, "PR_Thresholds": 0.18167646755193725, "PR_Thresholds_Shift": 0.18149373917946754, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17660044150110377, "Recall": 1.0, "F1 score": 0.300187617260788, "PR_Thresholds": 0.18149373917946754, "PR_Thresholds_Shift": 0.18085854145584096, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.176522506619594, "Recall": 1.0, "F1 score": 0.30007501875468867, "PR_Thresholds": 0.18085854145584096, "PR_Thresholds_Shift": 0.17942576753131464, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17644464049404499, "Recall": 1.0, "F1 score": 0.29996250468691416, "PR_Thresholds": 0.17942576753131464, "PR_Thresholds_Shift": 0.17890420198571502, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1763668430335097, "Recall": 1.0, "F1 score": 0.29985007496251875, "PR_Thresholds": 0.17890420198571502, "PR_Thresholds_Shift": 0.17827388408912684, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17628911414720141, "Recall": 1.0, "F1 score": 0.29973772948669913, "PR_Thresholds": 0.17827388408912684, "PR_Thresholds_Shift": 0.1858413661747505, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17706949977866313, "Recall": 1.0, "F1 score": 0.30086498683715684, "PR_Thresholds": 0.1858413661747505, "PR_Thresholds_Shift": 0.17810291908551032, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1762114537444934, "Recall": 1.0, "F1 score": 0.299625468164794, "PR_Thresholds": 0.17810291908551032, "PR_Thresholds_Shift": 0.1768134254481156, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.176056338028169, "Recall": 1.0, "F1 score": 0.2994011976047904, "PR_Thresholds": 0.1768134254481156, "PR_Thresholds_Shift": 0.17661191043678362, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1759788825340959, "Recall": 1.0, "F1 score": 0.29928918817807704, "PR_Thresholds": 0.17661191043678362, "PR_Thresholds_Shift": 0.17650018867608533, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1759014951627089, "Recall": 1.0, "F1 score": 0.2991772625280479, "PR_Thresholds": 0.17650018867608533, "PR_Thresholds_Shift": 0.17574972814068449, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17582417582417584, "Recall": 1.0, "F1 score": 0.2990654205607477, "PR_Thresholds": 0.17574972814068449, "PR_Thresholds_Shift": 0.17484469335325592, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1757469244288225, "Recall": 1.0, "F1 score": 0.29895366218236175, "PR_Thresholds": 0.17484469335325592, "PR_Thresholds_Shift": 0.1746733715347067, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1756697408871322, "Recall": 1.0, "F1 score": 0.2988419872992156, "PR_Thresholds": 0.1746733715347067, "PR_Thresholds_Shift": 0.17263498062132732, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17559262510974538, "Recall": 1.0, "F1 score": 0.2987303958177745, "PR_Thresholds": 0.17263498062132732, "PR_Thresholds_Shift": 0.17238334610860417, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1755155770074594, "Recall": 1.0, "F1 score": 0.2986188876446435, "PR_Thresholds": 0.17238334610860417, "PR_Thresholds_Shift": 0.17203773502985825, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17543859649122806, "Recall": 1.0, "F1 score": 0.29850746268656714, "PR_Thresholds": 0.17203773502985825, "PR_Thresholds_Shift": 0.1780577843811935, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.17613386173491855, "Recall": 1.0, "F1 score": 0.2995132909022838, "PR_Thresholds": 0.1780577843811935, "PR_Thresholds_Shift": 0.26815620388761824, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1977261492832427, "Recall": 1.0, "F1 score": 0.330169211721007, "PR_Thresholds": 0.26815620388761824, "PR_Thresholds_Shift": 0.31580842054085334, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2218524681087077, "Recall": 1.0, "F1 score": 0.3631411711302769, "PR_Thresholds": 0.31580842054085334, "PR_Thresholds_Shift": 0.26842183173566747, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1979218208807521, "Recall": 1.0, "F1 score": 0.3304419661296985, "PR_Thresholds": 0.26842183173566747, "PR_Thresholds_Shift": 0.3214932886469828, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22650056625141562, "Recall": 1.0, "F1 score": 0.3693444136657433, "PR_Thresholds": 0.3214932886469828, "PR_Thresholds_Shift": 0.32097236471616974, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22637238256932654, "Recall": 1.0, "F1 score": 0.369173973234887, "PR_Thresholds": 0.32097236471616974, "PR_Thresholds_Shift": 0.32090179843177996, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22624434389140272, "Recall": 1.0, "F1 score": 0.36900369003690037, "PR_Thresholds": 0.32090179843177996, "PR_Thresholds_Shift": 0.32079425032696385, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22611644997173544, "Recall": 1.0, "F1 score": 0.36883356385431076, "PR_Thresholds": 0.32079425032696385, "PR_Thresholds_Shift": 0.32039553276300414, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22598870056497175, "Recall": 1.0, "F1 score": 0.3686635944700461, "PR_Thresholds": 0.32039553276300414, "PR_Thresholds_Shift": 0.3202862283289854, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22586109542631283, "Recall": 1.0, "F1 score": 0.3684937816674344, "PR_Thresholds": 0.3202862283289854, "PR_Thresholds_Shift": 0.3201387191798172, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22573363431151242, "Recall": 1.0, "F1 score": 0.3683241252302026, "PR_Thresholds": 0.3201387191798172, "PR_Thresholds_Shift": 0.3199596962867348, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22560631697687536, "Recall": 1.0, "F1 score": 0.36815462494247586, "PR_Thresholds": 0.3199596962867348, "PR_Thresholds_Shift": 0.31980391176448675, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2254791431792559, "Recall": 1.0, "F1 score": 0.3679852805887764, "PR_Thresholds": 0.31980391176448675, "PR_Thresholds_Shift": 0.31977843177890786, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22535211267605634, "Recall": 1.0, "F1 score": 0.36781609195402304, "PR_Thresholds": 0.31977843177890786, "PR_Thresholds_Shift": 0.31963701865547894, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22522522522522523, "Recall": 1.0, "F1 score": 0.36764705882352944, "PR_Thresholds": 0.31963701865547894, "PR_Thresholds_Shift": 0.3194452529034094, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22509848058525606, "Recall": 1.0, "F1 score": 0.36747818098300417, "PR_Thresholds": 0.3194452529034094, "PR_Thresholds_Shift": 0.31924406611620815, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2249718785151856, "Recall": 1.0, "F1 score": 0.36730945821854916, "PR_Thresholds": 0.31924406611620815, "PR_Thresholds_Shift": 0.31908814856055623, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22484541877459246, "Recall": 1.0, "F1 score": 0.367140890316659, "PR_Thresholds": 0.31908814856055623, "PR_Thresholds_Shift": 0.3189042489555175, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2247191011235955, "Recall": 1.0, "F1 score": 0.36697247706422015, "PR_Thresholds": 0.3189042489555175, "PR_Thresholds_Shift": 0.3181521552714005, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22459292532285233, "Recall": 1.0, "F1 score": 0.3668042182485099, "PR_Thresholds": 0.3181521552714005, "PR_Thresholds_Shift": 0.31800348318375676, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2244668911335578, "Recall": 1.0, "F1 score": 0.36663611365719523, "PR_Thresholds": 0.31800348318375676, "PR_Thresholds_Shift": 0.3179292781121608, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2243409983174425, "Recall": 1.0, "F1 score": 0.3664681630783326, "PR_Thresholds": 0.3179292781121608, "PR_Thresholds_Shift": 0.3179174436220974, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2242152466367713, "Recall": 1.0, "F1 score": 0.36630036630036633, "PR_Thresholds": 0.3179174436220974, "PR_Thresholds_Shift": 0.3215703805256841, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22662889518413598, "Recall": 1.0, "F1 score": 0.3695150115473441, "PR_Thresholds": 0.3215703805256841, "PR_Thresholds_Shift": 0.3217338693542696, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22675736961451248, "Recall": 1.0, "F1 score": 0.36968576709796674, "PR_Thresholds": 0.3217338693542696, "PR_Thresholds_Shift": 0.3218717083199526, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22688598979013047, "Recall": 1.0, "F1 score": 0.36985668053629217, "PR_Thresholds": 0.3218717083199526, "PR_Thresholds_Shift": 0.32190826071508527, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22701475595913734, "Recall": 1.0, "F1 score": 0.3700277520814061, "PR_Thresholds": 0.32190826071508527, "PR_Thresholds_Shift": 0.32710530880079286, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2296211251435132, "Recall": 1.0, "F1 score": 0.3734827264239029, "PR_Thresholds": 0.32710530880079286, "PR_Thresholds_Shift": 0.32674462713050206, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22948938611589215, "Recall": 1.0, "F1 score": 0.3733084461035931, "PR_Thresholds": 0.32674462713050206, "PR_Thresholds_Shift": 0.3266414876938989, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22935779816513763, "Recall": 1.0, "F1 score": 0.373134328358209, "PR_Thresholds": 0.3266414876938989, "PR_Thresholds_Shift": 0.32629595874230344, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22922636103151864, "Recall": 1.0, "F1 score": 0.372960372960373, "PR_Thresholds": 0.32629595874230344, "PR_Thresholds_Shift": 0.325863144750585, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2290950744558992, "Recall": 1.0, "F1 score": 0.3727865796831314, "PR_Thresholds": 0.325863144750585, "PR_Thresholds_Shift": 0.32561997930046066, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2289639381797367, "Recall": 1.0, "F1 score": 0.3726129482999534, "PR_Thresholds": 0.32561997930046066, "PR_Thresholds_Shift": 0.32516849856280566, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2288329519450801, "Recall": 1.0, "F1 score": 0.37243947858473003, "PR_Thresholds": 0.32516849856280566, "PR_Thresholds_Shift": 0.325062424660928, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22870211549456831, "Recall": 1.0, "F1 score": 0.3722661703117729, "PR_Thresholds": 0.325062424660928, "PR_Thresholds_Shift": 0.32467749048357564, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22857142857142856, "Recall": 1.0, "F1 score": 0.3720930232558139, "PR_Thresholds": 0.32467749048357564, "PR_Thresholds_Shift": 0.31775593032345517, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22408963585434175, "Recall": 1.0, "F1 score": 0.36613272311212813, "PR_Thresholds": 0.31775593032345517, "PR_Thresholds_Shift": 0.32465709552448924, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2284408909194746, "Recall": 1.0, "F1 score": 0.3719200371920037, "PR_Thresholds": 0.32465709552448924, "PR_Thresholds_Shift": 0.3238065227027586, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22818026240730177, "Recall": 1.0, "F1 score": 0.3715745471435207, "PR_Thresholds": 0.3238065227027586, "PR_Thresholds_Shift": 0.3236282967678598, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22805017103762829, "Recall": 1.0, "F1 score": 0.3714020427112349, "PR_Thresholds": 0.3236282967678598, "PR_Thresholds_Shift": 0.32348854201528415, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22792022792022792, "Recall": 1.0, "F1 score": 0.37122969837587005, "PR_Thresholds": 0.32348854201528415, "PR_Thresholds_Shift": 0.3232820400355293, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22779043280182232, "Recall": 1.0, "F1 score": 0.37105751391465674, "PR_Thresholds": 0.3232820400355293, "PR_Thresholds_Shift": 0.32306068971300456, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22766078542970974, "Recall": 1.0, "F1 score": 0.3708854891052388, "PR_Thresholds": 0.32306068971300456, "PR_Thresholds_Shift": 0.3228801485632221, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22753128555176336, "Recall": 1.0, "F1 score": 0.3707136237256719, "PR_Thresholds": 0.3228801485632221, "PR_Thresholds_Shift": 0.32284433507173327, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2274019329164298, "Recall": 1.0, "F1 score": 0.37054191755442334, "PR_Thresholds": 0.32284433507173327, "PR_Thresholds_Shift": 0.3223247368027464, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22727272727272727, "Recall": 1.0, "F1 score": 0.37037037037037035, "PR_Thresholds": 0.3223247368027464, "PR_Thresholds_Shift": 0.32222329530174615, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2271436683702442, "Recall": 1.0, "F1 score": 0.37019898195279966, "PR_Thresholds": 0.32222329530174615, "PR_Thresholds_Shift": 0.3238721534023766, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.228310502283105, "Recall": 1.0, "F1 score": 0.3717472118959108, "PR_Thresholds": 0.3238721534023766, "PR_Thresholds_Shift": 0.3272651464033754, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22975301550832855, "Recall": 1.0, "F1 score": 0.3736571695469407, "PR_Thresholds": 0.3272651464033754, "PR_Thresholds_Shift": 0.31763101021353995, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22396416573348266, "Recall": 1.0, "F1 score": 0.36596523330283626, "PR_Thresholds": 0.31763101021353995, "PR_Thresholds_Shift": 0.3171928131479662, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22371364653243847, "Recall": 1.0, "F1 score": 0.3656307129798903, "PR_Thresholds": 0.3171928131479662, "PR_Thresholds_Shift": 0.3126341311281069, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2205071664829107, "Recall": 1.0, "F1 score": 0.36133694670280037, "PR_Thresholds": 0.3126341311281069, "PR_Thresholds_Shift": 0.3126005339090943, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22038567493112948, "Recall": 1.0, "F1 score": 0.3611738148984199, "PR_Thresholds": 0.3126005339090943, "PR_Thresholds_Shift": 0.3123502684884068, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22026431718061673, "Recall": 1.0, "F1 score": 0.36101083032490977, "PR_Thresholds": 0.3123502684884068, "PR_Thresholds_Shift": 0.3120355878391231, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2201430930104568, "Recall": 1.0, "F1 score": 0.3608479927830401, "PR_Thresholds": 0.3120355878391231, "PR_Thresholds_Shift": 0.31194490795870217, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22002200220022003, "Recall": 1.0, "F1 score": 0.3606853020739405, "PR_Thresholds": 0.31194490795870217, "PR_Thresholds_Shift": 0.3117530496542083, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2199010445299615, "Recall": 1.0, "F1 score": 0.36052275799909866, "PR_Thresholds": 0.3117530496542083, "PR_Thresholds_Shift": 0.3117314244246839, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21978021978021978, "Recall": 1.0, "F1 score": 0.36036036036036034, "PR_Thresholds": 0.3117314244246839, "PR_Thresholds_Shift": 0.311549493614968, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21965952773201539, "Recall": 1.0, "F1 score": 0.36019810895992793, "PR_Thresholds": 0.311549493614968, "PR_Thresholds_Shift": 0.3115394327314404, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21953896816684962, "Recall": 1.0, "F1 score": 0.36003600360036003, "PR_Thresholds": 0.3115394327314404, "PR_Thresholds_Shift": 0.311342269275175, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21941854086670323, "Recall": 1.0, "F1 score": 0.35987404408457035, "PR_Thresholds": 0.311342269275175, "PR_Thresholds_Shift": 0.31048760054333824, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21929824561403508, "Recall": 1.0, "F1 score": 0.3597122302158273, "PR_Thresholds": 0.31048760054333824, "PR_Thresholds_Shift": 0.3104626053929927, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2191780821917808, "Recall": 1.0, "F1 score": 0.3595505617977528, "PR_Thresholds": 0.3104626053929927, "PR_Thresholds_Shift": 0.30990444393045624, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21905805038335158, "Recall": 1.0, "F1 score": 0.3593890386343216, "PR_Thresholds": 0.30990444393045624, "PR_Thresholds_Shift": 0.30989101119322926, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21893814997263272, "Recall": 1.0, "F1 score": 0.3592276605298608, "PR_Thresholds": 0.30989101119322926, "PR_Thresholds_Shift": 0.30967778725642026, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2188183807439825, "Recall": 1.0, "F1 score": 0.3590664272890485, "PR_Thresholds": 0.30967778725642026, "PR_Thresholds_Shift": 0.30954665574290513, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21869874248223073, "Recall": 1.0, "F1 score": 0.35890533871691344, "PR_Thresholds": 0.30954665574290513, "PR_Thresholds_Shift": 0.30921219775246417, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2185792349726776, "Recall": 1.0, "F1 score": 0.35874439461883406, "PR_Thresholds": 0.30921219775246417, "PR_Thresholds_Shift": 0.3091840186748834, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2184598580010923, "Recall": 1.0, "F1 score": 0.35858359480053786, "PR_Thresholds": 0.3091840186748834, "PR_Thresholds_Shift": 0.3089811127561253, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2183406113537118, "Recall": 1.0, "F1 score": 0.35842293906810035, "PR_Thresholds": 0.3089811127561253, "PR_Thresholds_Shift": 0.31283829656588813, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2206287920573635, "Recall": 1.0, "F1 score": 0.3615002259376412, "PR_Thresholds": 0.31283829656588813, "PR_Thresholds_Shift": 0.31293921847728046, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22075055187637968, "Recall": 1.0, "F1 score": 0.3616636528028933, "PR_Thresholds": 0.31293921847728046, "PR_Thresholds_Shift": 0.3134029625542675, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22087244616234125, "Recall": 1.0, "F1 score": 0.3618272274988693, "PR_Thresholds": 0.3134029625542675, "PR_Thresholds_Shift": 0.31347578377194757, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22099447513812154, "Recall": 1.0, "F1 score": 0.3619909502262444, "PR_Thresholds": 0.31347578377194757, "PR_Thresholds_Shift": 0.31713675335879365, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22358859698155395, "Recall": 1.0, "F1 score": 0.3654636820465967, "PR_Thresholds": 0.31713675335879365, "PR_Thresholds_Shift": 0.317133645187428, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22346368715083798, "Recall": 1.0, "F1 score": 0.365296803652968, "PR_Thresholds": 0.317133645187428, "PR_Thresholds_Shift": 0.31711075178760906, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22333891680625348, "Recall": 1.0, "F1 score": 0.3651300775901415, "PR_Thresholds": 0.31711075178760906, "PR_Thresholds_Shift": 0.31702174215643764, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22321428571428573, "Recall": 1.0, "F1 score": 0.36496350364963503, "PR_Thresholds": 0.31702174215643764, "PR_Thresholds_Shift": 0.3169080897897057, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22308979364194087, "Recall": 1.0, "F1 score": 0.364797081623347, "PR_Thresholds": 0.3169080897897057, "PR_Thresholds_Shift": 0.316669429741137, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2229654403567447, "Recall": 1.0, "F1 score": 0.3646308113035551, "PR_Thresholds": 0.316669429741137, "PR_Thresholds_Shift": 0.31655833364843744, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22284122562674094, "Recall": 1.0, "F1 score": 0.36446469248291574, "PR_Thresholds": 0.31655833364843744, "PR_Thresholds_Shift": 0.3165456573152847, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22271714922049, "Recall": 1.0, "F1 score": 0.3642987249544627, "PR_Thresholds": 0.3165456573152847, "PR_Thresholds_Shift": 0.31642292550251083, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22259321090706732, "Recall": 1.0, "F1 score": 0.3641329085116067, "PR_Thresholds": 0.31642292550251083, "PR_Thresholds_Shift": 0.3175606103193545, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2238388360380526, "Recall": 1.0, "F1 score": 0.3657978966620942, "PR_Thresholds": 0.3175606103193545, "PR_Thresholds_Shift": 0.3163529638850956, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22246941045606228, "Recall": 1.0, "F1 score": 0.36396724294813465, "PR_Thresholds": 0.3163529638850956, "PR_Thresholds_Shift": 0.3162880070116536, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2222222222222222, "Recall": 1.0, "F1 score": 0.3636363636363636, "PR_Thresholds": 0.3162880070116536, "PR_Thresholds_Shift": 0.31606464474834467, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2220988339811216, "Recall": 1.0, "F1 score": 0.3634711494775102, "PR_Thresholds": 0.31606464474834467, "PR_Thresholds_Shift": 0.31591822706276895, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22197558268590456, "Recall": 1.0, "F1 score": 0.3633060853769301, "PR_Thresholds": 0.31591822706276895, "PR_Thresholds_Shift": 0.31535415020278296, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22172949002217296, "Recall": 1.0, "F1 score": 0.3629764065335753, "PR_Thresholds": 0.31535415020278296, "PR_Thresholds_Shift": 0.31482357453466114, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22160664819944598, "Recall": 1.0, "F1 score": 0.3628117913832199, "PR_Thresholds": 0.31482357453466114, "PR_Thresholds_Shift": 0.3143148684091411, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22148394241417496, "Recall": 1.0, "F1 score": 0.36264732547597456, "PR_Thresholds": 0.3143148684091411, "PR_Thresholds_Shift": 0.3142258665258352, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22136137244050913, "Recall": 1.0, "F1 score": 0.3624830086089715, "PR_Thresholds": 0.3142258665258352, "PR_Thresholds_Shift": 0.31399469193521484, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22123893805309736, "Recall": 1.0, "F1 score": 0.36231884057971014, "PR_Thresholds": 0.31399469193521484, "PR_Thresholds_Shift": 0.313965992511247, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22111663902708678, "Recall": 1.0, "F1 score": 0.3621548211860571, "PR_Thresholds": 0.313965992511247, "PR_Thresholds_Shift": 0.31631897546509824, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22234574763757642, "Recall": 1.0, "F1 score": 0.3638017280582082, "PR_Thresholds": 0.31631897546509824, "PR_Thresholds_Shift": 0.30862840446116274, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2182214948172395, "Recall": 1.0, "F1 score": 0.3582624272279445, "PR_Thresholds": 0.30862840446116274, "PR_Thresholds_Shift": 0.32772385619714095, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.22988505747126436, "Recall": 1.0, "F1 score": 0.37383177570093457, "PR_Thresholds": 0.32772385619714095, "PR_Thresholds_Shift": 0.3282770581459846, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23014959723820483, "Recall": 1.0, "F1 score": 0.37418147801683815, "PR_Thresholds": 0.3282770581459846, "PR_Thresholds_Shift": 0.34648940212379326, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23923444976076555, "Recall": 1.0, "F1 score": 0.3861003861003861, "PR_Thresholds": 0.34648940212379326, "PR_Thresholds_Shift": 0.3455266755020332, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2390914524805738, "Recall": 1.0, "F1 score": 0.38591413410516157, "PR_Thresholds": 0.3455266755020332, "PR_Thresholds_Shift": 0.34540685700250573, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23894862604540024, "Recall": 1.0, "F1 score": 0.3857280617164899, "PR_Thresholds": 0.34540685700250573, "PR_Thresholds_Shift": 0.3453264683143772, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23880597014925373, "Recall": 1.0, "F1 score": 0.38554216867469876, "PR_Thresholds": 0.3453264683143772, "PR_Thresholds_Shift": 0.3449570360200469, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2386634844868735, "Recall": 1.0, "F1 score": 0.3853564547206165, "PR_Thresholds": 0.3449570360200469, "PR_Thresholds_Shift": 0.34486932313995766, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2385211687537269, "Recall": 1.0, "F1 score": 0.3851709195955705, "PR_Thresholds": 0.34486932313995766, "PR_Thresholds_Shift": 0.3448400912753659, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23837902264600716, "Recall": 1.0, "F1 score": 0.3849855630413859, "PR_Thresholds": 0.3448400912753659, "PR_Thresholds_Shift": 0.3447991150366168, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23823704586063132, "Recall": 1.0, "F1 score": 0.3848003848003848, "PR_Thresholds": 0.3447991150366168, "PR_Thresholds_Shift": 0.34437591180550226, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23809523809523808, "Recall": 1.0, "F1 score": 0.3846153846153846, "PR_Thresholds": 0.34437591180550226, "PR_Thresholds_Shift": 0.3440928284314154, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2379535990481856, "Recall": 1.0, "F1 score": 0.3844305622296973, "PR_Thresholds": 0.3440928284314154, "PR_Thresholds_Shift": 0.34401075328209413, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23781212841854935, "Recall": 1.0, "F1 score": 0.38424591738712777, "PR_Thresholds": 0.34401075328209413, "PR_Thresholds_Shift": 0.3438915070516061, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23767082590612001, "Recall": 1.0, "F1 score": 0.3840614498319731, "PR_Thresholds": 0.3438915070516061, "PR_Thresholds_Shift": 0.34363726686122925, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2375296912114014, "Recall": 1.0, "F1 score": 0.3838771593090211, "PR_Thresholds": 0.34363726686122925, "PR_Thresholds_Shift": 0.3436277232672177, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23738872403560832, "Recall": 1.0, "F1 score": 0.38369304556354916, "PR_Thresholds": 0.3436277232672177, "PR_Thresholds_Shift": 0.34357477349354915, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2372479240806643, "Recall": 1.0, "F1 score": 0.38350910834132307, "PR_Thresholds": 0.34357477349354915, "PR_Thresholds_Shift": 0.3433384475603604, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23710729104919975, "Recall": 1.0, "F1 score": 0.383325347388596, "PR_Thresholds": 0.3433384475603604, "PR_Thresholds_Shift": 0.3427393621801569, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23696682464454977, "Recall": 1.0, "F1 score": 0.3831417624521073, "PR_Thresholds": 0.3427393621801569, "PR_Thresholds_Shift": 0.3426497919877923, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23682652457075193, "Recall": 1.0, "F1 score": 0.3829583532790809, "PR_Thresholds": 0.3426497919877923, "PR_Thresholds_Shift": 0.3425519489784226, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23668639053254437, "Recall": 1.0, "F1 score": 0.3827751196172249, "PR_Thresholds": 0.3425519489784226, "PR_Thresholds_Shift": 0.34658741216482536, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23937761819269898, "Recall": 1.0, "F1 score": 0.38628681796233705, "PR_Thresholds": 0.34658741216482536, "PR_Thresholds_Shift": 0.34667929996958796, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23952095808383234, "Recall": 1.0, "F1 score": 0.38647342995169076, "PR_Thresholds": 0.34667929996958796, "PR_Thresholds_Shift": 0.34669105788433086, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2396644697423607, "Recall": 1.0, "F1 score": 0.3866602223296278, "PR_Thresholds": 0.34669105788433086, "PR_Thresholds_Shift": 0.3469479283928087, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23980815347721823, "Recall": 1.0, "F1 score": 0.38684719535783363, "PR_Thresholds": 0.3469479283928087, "PR_Thresholds_Shift": 0.3502348074078934, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24271844660194175, "Recall": 1.0, "F1 score": 0.39062500000000006, "PR_Thresholds": 0.3502348074078934, "PR_Thresholds_Shift": 0.34990024880880577, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2425712553062462, "Recall": 1.0, "F1 score": 0.3904343582235237, "PR_Thresholds": 0.34990024880880577, "PR_Thresholds_Shift": 0.34974124120441663, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24242424242424243, "Recall": 1.0, "F1 score": 0.3902439024390244, "PR_Thresholds": 0.34974124120441663, "PR_Thresholds_Shift": 0.3496315305176798, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24227740763173833, "Recall": 1.0, "F1 score": 0.3900536323744515, "PR_Thresholds": 0.3496315305176798, "PR_Thresholds_Shift": 0.34943593781734, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24213075060532688, "Recall": 1.0, "F1 score": 0.3898635477582846, "PR_Thresholds": 0.34943593781734, "PR_Thresholds_Shift": 0.3492989059196214, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24198427102238354, "Recall": 1.0, "F1 score": 0.3896736483195324, "PR_Thresholds": 0.3492989059196214, "PR_Thresholds_Shift": 0.3491411761780547, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2418379685610641, "Recall": 1.0, "F1 score": 0.3894839337877313, "PR_Thresholds": 0.3491411761780547, "PR_Thresholds_Shift": 0.3488668793926879, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24169184290030213, "Recall": 1.0, "F1 score": 0.38929440389294406, "PR_Thresholds": 0.3488668793926879, "PR_Thresholds_Shift": 0.3488400109978971, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24154589371980675, "Recall": 1.0, "F1 score": 0.38910505836575876, "PR_Thresholds": 0.3488400109978971, "PR_Thresholds_Shift": 0.34244016724533927, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23654642223536368, "Recall": 1.0, "F1 score": 0.3825920612147298, "PR_Thresholds": 0.34244016724533927, "PR_Thresholds_Shift": 0.34863125009253443, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24140012070006034, "Recall": 1.0, "F1 score": 0.38891589693728734, "PR_Thresholds": 0.34863125009253443, "PR_Thresholds_Shift": 0.34857419850278265, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24110910186859555, "Recall": 1.0, "F1 score": 0.3885381253035454, "PR_Thresholds": 0.34857419850278265, "PR_Thresholds_Shift": 0.34846364390277595, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24096385542168675, "Recall": 1.0, "F1 score": 0.38834951456310685, "PR_Thresholds": 0.34846364390277595, "PR_Thresholds_Shift": 0.34814282434791355, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2408187838651415, "Recall": 1.0, "F1 score": 0.3881610868510432, "PR_Thresholds": 0.34814282434791355, "PR_Thresholds_Shift": 0.3479935816504908, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24067388688327315, "Recall": 1.0, "F1 score": 0.3879728419010669, "PR_Thresholds": 0.3479935816504908, "PR_Thresholds_Shift": 0.34796254148446276, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24052916416115455, "Recall": 1.0, "F1 score": 0.38778477944740675, "PR_Thresholds": 0.34796254148446276, "PR_Thresholds_Shift": 0.347898276711082, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2403846153846154, "Recall": 1.0, "F1 score": 0.3875968992248062, "PR_Thresholds": 0.347898276711082, "PR_Thresholds_Shift": 0.34772753515700183, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24024024024024024, "Recall": 1.0, "F1 score": 0.38740920096852305, "PR_Thresholds": 0.34772753515700183, "PR_Thresholds_Shift": 0.34765455937607226, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24009603841536614, "Recall": 1.0, "F1 score": 0.3872216844143272, "PR_Thresholds": 0.34765455937607226, "PR_Thresholds_Shift": 0.34750960370097295, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23995200959808038, "Recall": 1.0, "F1 score": 0.3870343492985003, "PR_Thresholds": 0.34750960370097295, "PR_Thresholds_Shift": 0.3486301153849401, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.24125452352231605, "Recall": 1.0, "F1 score": 0.38872691933916426, "PR_Thresholds": 0.3486301153849401, "PR_Thresholds_Shift": 0.3279647483468762, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23001725129384704, "Recall": 1.0, "F1 score": 0.3740065451145395, "PR_Thresholds": 0.3279647483468762, "PR_Thresholds_Shift": 0.3421610910227549, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2364066193853428, "Recall": 1.0, "F1 score": 0.38240917782026773, "PR_Thresholds": 0.3421610910227549, "PR_Thresholds_Shift": 0.34186414993789477, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2361275088547816, "Recall": 1.0, "F1 score": 0.38204393505253104, "PR_Thresholds": 0.34186414993789477, "PR_Thresholds_Shift": 0.3363350817974283, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2326934264107039, "Recall": 1.0, "F1 score": 0.37753657385559225, "PR_Thresholds": 0.3363350817974283, "PR_Thresholds_Shift": 0.3362415163154393, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23255813953488372, "Recall": 1.0, "F1 score": 0.37735849056603776, "PR_Thresholds": 0.3362415163154393, "PR_Thresholds_Shift": 0.3360519431485639, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23242300987797793, "Recall": 1.0, "F1 score": 0.37718057520037723, "PR_Thresholds": 0.3360519431485639, "PR_Thresholds_Shift": 0.33598621962253095, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23228803716608595, "Recall": 1.0, "F1 score": 0.3770028275212064, "PR_Thresholds": 0.33598621962253095, "PR_Thresholds_Shift": 0.3356391545667621, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2321532211259431, "Recall": 1.0, "F1 score": 0.3768252472915685, "PR_Thresholds": 0.3356391545667621, "PR_Thresholds_Shift": 0.3344916006837624, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23201856148491878, "Recall": 1.0, "F1 score": 0.3766478342749529, "PR_Thresholds": 0.3344916006837624, "PR_Thresholds_Shift": 0.3343784703205407, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2318840579710145, "Recall": 1.0, "F1 score": 0.37647058823529417, "PR_Thresholds": 0.3343784703205407, "PR_Thresholds_Shift": 0.33386090577754235, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23174971031286212, "Recall": 1.0, "F1 score": 0.3762935089369709, "PR_Thresholds": 0.33386090577754235, "PR_Thresholds_Shift": 0.3330494725550726, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23161551823972207, "Recall": 1.0, "F1 score": 0.37611659614480486, "PR_Thresholds": 0.3330494725550726, "PR_Thresholds_Shift": 0.3321294063746213, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23148148148148148, "Recall": 1.0, "F1 score": 0.3759398496240602, "PR_Thresholds": 0.3321294063746213, "PR_Thresholds_Shift": 0.3318673577821741, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2313475997686524, "Recall": 1.0, "F1 score": 0.3757632691404415, "PR_Thresholds": 0.3318673577821741, "PR_Thresholds_Shift": 0.33087372290335504, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23121387283236994, "Recall": 1.0, "F1 score": 0.37558685446009393, "PR_Thresholds": 0.33087372290335504, "PR_Thresholds_Shift": 0.3307800967526628, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23108030040439054, "Recall": 1.0, "F1 score": 0.37541060534960113, "PR_Thresholds": 0.3307800967526628, "PR_Thresholds_Shift": 0.32978308513421306, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23094688221709006, "Recall": 1.0, "F1 score": 0.37523452157598497, "PR_Thresholds": 0.32978308513421306, "PR_Thresholds_Shift": 0.32947423261282044, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2308136180034622, "Recall": 1.0, "F1 score": 0.3750586029067042, "PR_Thresholds": 0.32947423261282044, "PR_Thresholds_Shift": 0.32935242893485395, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2306805074971165, "Recall": 1.0, "F1 score": 0.3748828491096532, "PR_Thresholds": 0.32935242893485395, "PR_Thresholds_Shift": 0.3291932516705637, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23054755043227665, "Recall": 1.0, "F1 score": 0.37470725995316156, "PR_Thresholds": 0.3291932516705637, "PR_Thresholds_Shift": 0.32906842131324204, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2304147465437788, "Recall": 1.0, "F1 score": 0.3745318352059925, "PR_Thresholds": 0.32906842131324204, "PR_Thresholds_Shift": 0.32867829544654414, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23028209556706966, "Recall": 1.0, "F1 score": 0.37435657463734207, "PR_Thresholds": 0.32867829544654414, "PR_Thresholds_Shift": 0.3365863648540571, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23282887077997672, "Recall": 1.0, "F1 score": 0.3777148253068933, "PR_Thresholds": 0.3365863648540571, "PR_Thresholds_Shift": 0.33659775989754626, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23296447291788003, "Recall": 1.0, "F1 score": 0.37789324515824285, "PR_Thresholds": 0.33659775989754626, "PR_Thresholds_Shift": 0.3368306795130772, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2331002331002331, "Recall": 1.0, "F1 score": 0.37807183364839314, "PR_Thresholds": 0.3368306795130772, "PR_Thresholds_Shift": 0.33684260841159075, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23323615160349853, "Recall": 1.0, "F1 score": 0.3782505910165485, "PR_Thresholds": 0.33684260841159075, "PR_Thresholds_Shift": 0.3414642300989021, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2359882005899705, "Recall": 1.0, "F1 score": 0.3818615751789976, "PR_Thresholds": 0.3414642300989021, "PR_Thresholds_Shift": 0.34082751412882817, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2358490566037736, "Recall": 1.0, "F1 score": 0.38167938931297707, "PR_Thresholds": 0.34082751412882817, "PR_Thresholds_Shift": 0.34055426838580277, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2357100766057749, "Recall": 1.0, "F1 score": 0.3814973772055317, "PR_Thresholds": 0.34055426838580277, "PR_Thresholds_Shift": 0.34036988667152046, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23557126030624265, "Recall": 1.0, "F1 score": 0.38131553860819833, "PR_Thresholds": 0.34036988667152046, "PR_Thresholds_Shift": 0.33995784474668433, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23543260741612712, "Recall": 1.0, "F1 score": 0.38113387327298714, "PR_Thresholds": 0.33995784474668433, "PR_Thresholds_Shift": 0.3397326733470314, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23529411764705882, "Recall": 1.0, "F1 score": 0.38095238095238093, "PR_Thresholds": 0.3397326733470314, "PR_Thresholds_Shift": 0.33960386435108936, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23515579071134626, "Recall": 1.0, "F1 score": 0.3807710613993337, "PR_Thresholds": 0.33960386435108936, "PR_Thresholds_Shift": 0.33957310228559767, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23501762632197415, "Recall": 1.0, "F1 score": 0.3805899143672693, "PR_Thresholds": 0.33957310228559767, "PR_Thresholds_Shift": 0.33936325752080454, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2348796241926013, "Recall": 1.0, "F1 score": 0.3804089396100809, "PR_Thresholds": 0.33936325752080454, "PR_Thresholds_Shift": 0.3419743967714327, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23626698168930893, "Recall": 1.0, "F1 score": 0.3822264691829909, "PR_Thresholds": 0.3419743967714327, "PR_Thresholds_Shift": 0.3392991481853057, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2347417840375587, "Recall": 1.0, "F1 score": 0.38022813688212925, "PR_Thresholds": 0.3392991481853057, "PR_Thresholds_Shift": 0.339107262617154, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23446658851113716, "Recall": 1.0, "F1 score": 0.37986704653371317, "PR_Thresholds": 0.339107262617154, "PR_Thresholds_Shift": 0.33910413666341843, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23432923257176333, "Recall": 1.0, "F1 score": 0.37968675842429994, "PR_Thresholds": 0.33910413666341843, "PR_Thresholds_Shift": 0.33775287894880834, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.234192037470726, "Recall": 1.0, "F1 score": 0.3795066413662239, "PR_Thresholds": 0.33775287894880834, "PR_Thresholds_Shift": 0.33760880935459764, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23405500292568754, "Recall": 1.0, "F1 score": 0.3793266951161688, "PR_Thresholds": 0.33760880935459764, "PR_Thresholds_Shift": 0.33759925722500134, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23391812865497075, "Recall": 1.0, "F1 score": 0.3791469194312796, "PR_Thresholds": 0.33759925722500134, "PR_Thresholds_Shift": 0.3374800999784171, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23378141437755698, "Recall": 1.0, "F1 score": 0.3789673140691615, "PR_Thresholds": 0.3374800999784171, "PR_Thresholds_Shift": 0.33732179714187144, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2336448598130841, "Recall": 1.0, "F1 score": 0.3787878787878788, "PR_Thresholds": 0.33732179714187144, "PR_Thresholds_Shift": 0.3372613456800939, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23350846468184472, "Recall": 1.0, "F1 score": 0.37860861334595364, "PR_Thresholds": 0.3372613456800939, "PR_Thresholds_Shift": 0.3370926000028529, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23337222870478413, "Recall": 1.0, "F1 score": 0.3784295175023652, "PR_Thresholds": 0.3370926000028529, "PR_Thresholds_Shift": 0.3392621584626062, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.23460410557184752, "Recall": 1.0, "F1 score": 0.3800475059382423, "PR_Thresholds": 0.3392621584626062, "PR_Thresholds_Shift": 0.268319074099679, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19782393669634027, "Recall": 1.0, "F1 score": 0.3303055326176713, "PR_Thresholds": 0.268319074099679, "PR_Thresholds_Shift": 0.3081970808141119, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21810250817884405, "Recall": 1.0, "F1 score": 0.35810205908683973, "PR_Thresholds": 0.3081970808141119, "PR_Thresholds_Shift": 0.30764153422583995, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2178649237472767, "Recall": 1.0, "F1 score": 0.35778175313059035, "PR_Thresholds": 0.30764153422583995, "PR_Thresholds_Shift": 0.2819099782343866, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20460358056265984, "Recall": 1.0, "F1 score": 0.33970276008492567, "PR_Thresholds": 0.2819099782343866, "PR_Thresholds_Shift": 0.2818306262966472, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20449897750511248, "Recall": 1.0, "F1 score": 0.3395585738539898, "PR_Thresholds": 0.2818306262966472, "PR_Thresholds_Shift": 0.2813226660603594, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20439448134900357, "Recall": 1.0, "F1 score": 0.3394145099703012, "PR_Thresholds": 0.2813226660603594, "PR_Thresholds_Shift": 0.2812348955604692, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20429009193054137, "Recall": 1.0, "F1 score": 0.3392705682782019, "PR_Thresholds": 0.2812348955604692, "PR_Thresholds_Shift": 0.2812234837234727, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20418580908626852, "Recall": 1.0, "F1 score": 0.3391267486222976, "PR_Thresholds": 0.2812234837234727, "PR_Thresholds_Shift": 0.2809895016338131, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20408163265306123, "Recall": 1.0, "F1 score": 0.3389830508474576, "PR_Thresholds": 0.2809895016338131, "PR_Thresholds_Shift": 0.2809727948773311, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2039775624681285, "Recall": 1.0, "F1 score": 0.33883947479881404, "PR_Thresholds": 0.2809727948773311, "PR_Thresholds_Shift": 0.28095058891707747, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2038735983690112, "Recall": 1.0, "F1 score": 0.3386960203217612, "PR_Thresholds": 0.28095058891707747, "PR_Thresholds_Shift": 0.2808500622164014, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20376974019358127, "Recall": 1.0, "F1 score": 0.3385526872619552, "PR_Thresholds": 0.2808500622164014, "PR_Thresholds_Shift": 0.2805222244841555, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20366598778004075, "Recall": 1.0, "F1 score": 0.338409475465313, "PR_Thresholds": 0.2805222244841555, "PR_Thresholds_Shift": 0.28050004362825165, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2035623409669211, "Recall": 1.0, "F1 score": 0.33826638477801263, "PR_Thresholds": 0.28050004362825165, "PR_Thresholds_Shift": 0.28047894569744647, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2034587995930824, "Recall": 1.0, "F1 score": 0.338123415046492, "PR_Thresholds": 0.28047894569744647, "PR_Thresholds_Shift": 0.280478688160971, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20335536349771224, "Recall": 1.0, "F1 score": 0.3379805661174482, "PR_Thresholds": 0.280478688160971, "PR_Thresholds_Shift": 0.2804479000299439, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2032520325203252, "Recall": 1.0, "F1 score": 0.3378378378378379, "PR_Thresholds": 0.2804479000299439, "PR_Thresholds_Shift": 0.2800928467578676, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2031488065007618, "Recall": 1.0, "F1 score": 0.33769523005487545, "PR_Thresholds": 0.2800928467578676, "PR_Thresholds_Shift": 0.27986279175353324, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20304568527918782, "Recall": 1.0, "F1 score": 0.33755274261603374, "PR_Thresholds": 0.27986279175353324, "PR_Thresholds_Shift": 0.27977842605587366, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20294266869609334, "Recall": 1.0, "F1 score": 0.33741037536904256, "PR_Thresholds": 0.27977842605587366, "PR_Thresholds_Shift": 0.27953553478019233, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2028397565922921, "Recall": 1.0, "F1 score": 0.33726812816188867, "PR_Thresholds": 0.27953553478019233, "PR_Thresholds_Shift": 0.2792401519672849, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20273694880892043, "Recall": 1.0, "F1 score": 0.337126000842815, "PR_Thresholds": 0.2792401519672849, "PR_Thresholds_Shift": 0.28199679605908745, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2047082906857728, "Recall": 1.0, "F1 score": 0.33984706881903143, "PR_Thresholds": 0.28199679605908745, "PR_Thresholds_Shift": 0.28215634342296414, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2048131080389145, "Recall": 1.0, "F1 score": 0.33999150021249475, "PR_Thresholds": 0.28215634342296414, "PR_Thresholds_Shift": 0.2826462167966605, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20491803278688525, "Recall": 1.0, "F1 score": 0.3401360544217687, "PR_Thresholds": 0.2826462167966605, "PR_Thresholds_Shift": 0.2826678338985237, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20502306509482318, "Recall": 1.0, "F1 score": 0.3402807316035729, "PR_Thresholds": 0.2826678338985237, "PR_Thresholds_Shift": 0.28787370182400224, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20714655618850336, "Recall": 1.0, "F1 score": 0.3432003432003432, "PR_Thresholds": 0.28787370182400224, "PR_Thresholds_Shift": 0.2871599805729566, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2070393374741201, "Recall": 1.0, "F1 score": 0.34305317324185247, "PR_Thresholds": 0.2871599805729566, "PR_Thresholds_Shift": 0.2870935086691607, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20693222969477496, "Recall": 1.0, "F1 score": 0.3429061294470639, "PR_Thresholds": 0.2870935086691607, "PR_Thresholds_Shift": 0.286677736440908, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20682523267838676, "Recall": 1.0, "F1 score": 0.3427592116538132, "PR_Thresholds": 0.286677736440908, "PR_Thresholds_Shift": 0.2860827095656548, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20671834625322996, "Recall": 1.0, "F1 score": 0.3426124197002141, "PR_Thresholds": 0.2860827095656548, "PR_Thresholds_Shift": 0.2860234807513297, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2066115702479339, "Recall": 1.0, "F1 score": 0.34246575342465757, "PR_Thresholds": 0.2860234807513297, "PR_Thresholds_Shift": 0.285988775662784, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20650490449148168, "Recall": 1.0, "F1 score": 0.34231921266581083, "PR_Thresholds": 0.285988775662784, "PR_Thresholds_Shift": 0.28577300340738016, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20639834881320948, "Recall": 1.0, "F1 score": 0.3421727972626176, "PR_Thresholds": 0.28577300340738016, "PR_Thresholds_Shift": 0.28450101372134956, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20629190304280556, "Recall": 1.0, "F1 score": 0.34202650705429666, "PR_Thresholds": 0.28450101372134956, "PR_Thresholds_Shift": 0.27898219586114276, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20263424518743667, "Recall": 1.0, "F1 score": 0.3369839932603201, "PR_Thresholds": 0.27898219586114276, "PR_Thresholds_Shift": 0.284425387894905, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20618556701030927, "Recall": 1.0, "F1 score": 0.3418803418803419, "PR_Thresholds": 0.284425387894905, "PR_Thresholds_Shift": 0.284173525812881, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2059732234809475, "Recall": 1.0, "F1 score": 0.3415883859948762, "PR_Thresholds": 0.284173525812881, "PR_Thresholds_Shift": 0.28407094046316184, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2058672156459084, "Recall": 1.0, "F1 score": 0.3414425949637217, "PR_Thresholds": 0.28407094046316184, "PR_Thresholds_Shift": 0.283952286025553, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.205761316872428, "Recall": 1.0, "F1 score": 0.3412969283276451, "PR_Thresholds": 0.283952286025553, "PR_Thresholds_Shift": 0.28389898214875187, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20565552699228792, "Recall": 1.0, "F1 score": 0.3411513859275053, "PR_Thresholds": 0.28389898214875187, "PR_Thresholds_Shift": 0.28379077086008736, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20554984583761562, "Recall": 1.0, "F1 score": 0.3410059676044331, "PR_Thresholds": 0.28379077086008736, "PR_Thresholds_Shift": 0.28378685991272806, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2054442732408834, "Recall": 1.0, "F1 score": 0.34086067319982954, "PR_Thresholds": 0.28378685991272806, "PR_Thresholds_Shift": 0.2836388549470703, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2053388090349076, "Recall": 1.0, "F1 score": 0.34071550255536626, "PR_Thresholds": 0.2836388549470703, "PR_Thresholds_Shift": 0.2835751786661535, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20523345305284763, "Recall": 1.0, "F1 score": 0.34057045551298426, "PR_Thresholds": 0.2835751786661535, "PR_Thresholds_Shift": 0.2831291264033728, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20512820512820512, "Recall": 1.0, "F1 score": 0.3404255319148936, "PR_Thresholds": 0.2831291264033728, "PR_Thresholds_Shift": 0.28434282629573643, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20607934054611024, "Recall": 1.0, "F1 score": 0.3417343015805211, "PR_Thresholds": 0.28434282629573643, "PR_Thresholds_Shift": 0.28801748495368823, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20725388601036268, "Recall": 1.0, "F1 score": 0.3433476394849785, "PR_Thresholds": 0.28801748495368823, "PR_Thresholds_Shift": 0.27890539139740034, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20253164556962025, "Recall": 1.0, "F1 score": 0.3368421052631579, "PR_Thresholds": 0.27890539139740034, "PR_Thresholds_Shift": 0.27865691870554127, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20232675771370764, "Recall": 1.0, "F1 score": 0.3365586874211191, "PR_Thresholds": 0.27865691870554127, "PR_Thresholds_Shift": 0.27389760829141907, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1998001998001998, "Recall": 1.0, "F1 score": 0.3330557868442965, "PR_Thresholds": 0.27389760829141907, "PR_Thresholds_Shift": 0.2733661874632163, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19970044932601097, "Recall": 1.0, "F1 score": 0.33291718684977106, "PR_Thresholds": 0.2733661874632163, "PR_Thresholds_Shift": 0.27316320415067163, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1996007984031936, "Recall": 1.0, "F1 score": 0.3327787021630616, "PR_Thresholds": 0.27316320415067163, "PR_Thresholds_Shift": 0.2728525214067866, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19950124688279303, "Recall": 1.0, "F1 score": 0.33264033264033266, "PR_Thresholds": 0.2728525214067866, "PR_Thresholds_Shift": 0.27263926566356894, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19940179461615154, "Recall": 1.0, "F1 score": 0.3325020781379884, "PR_Thresholds": 0.27263926566356894, "PR_Thresholds_Shift": 0.27251959050437685, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19930244145490783, "Recall": 1.0, "F1 score": 0.3323639385126714, "PR_Thresholds": 0.27251959050437685, "PR_Thresholds_Shift": 0.2721667975482997, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.199203187250996, "Recall": 1.0, "F1 score": 0.3322259136212624, "PR_Thresholds": 0.2721667975482997, "PR_Thresholds_Shift": 0.2721145798689918, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1991040318566451, "Recall": 1.0, "F1 score": 0.33208800332088007, "PR_Thresholds": 0.2721145798689918, "PR_Thresholds_Shift": 0.27125543750114844, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19900497512437812, "Recall": 1.0, "F1 score": 0.3319502074688797, "PR_Thresholds": 0.27125543750114844, "PR_Thresholds_Shift": 0.27051534103818525, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19890601690701143, "Recall": 1.0, "F1 score": 0.3318125259228536, "PR_Thresholds": 0.27051534103818525, "PR_Thresholds_Shift": 0.27036213238651297, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1988071570576541, "Recall": 1.0, "F1 score": 0.33167495854063017, "PR_Thresholds": 0.27036213238651297, "PR_Thresholds_Shift": 0.2699508564232199, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19870839542970692, "Recall": 1.0, "F1 score": 0.33153750518027353, "PR_Thresholds": 0.2699508564232199, "PR_Thresholds_Shift": 0.269804799627304, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19860973187686196, "Recall": 1.0, "F1 score": 0.3314001657000828, "PR_Thresholds": 0.269804799627304, "PR_Thresholds_Shift": 0.2697393889890751, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19851116625310175, "Recall": 1.0, "F1 score": 0.33126293995859213, "PR_Thresholds": 0.2697393889890751, "PR_Thresholds_Shift": 0.2695378713880008, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1984126984126984, "Recall": 1.0, "F1 score": 0.3311258278145695, "PR_Thresholds": 0.2695378713880008, "PR_Thresholds_Shift": 0.2694632062948188, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1983143282102132, "Recall": 1.0, "F1 score": 0.330988829127017, "PR_Thresholds": 0.2694632062948188, "PR_Thresholds_Shift": 0.26929720331654394, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19821605550049554, "Recall": 1.0, "F1 score": 0.3308519437551696, "PR_Thresholds": 0.26929720331654394, "PR_Thresholds_Shift": 0.2692007483649338, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.1981178801386825, "Recall": 1.0, "F1 score": 0.3307151715584952, "PR_Thresholds": 0.2692007483649338, "PR_Thresholds_Shift": 0.2685481131559785, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19801980198019803, "Recall": 1.0, "F1 score": 0.3305785123966942, "PR_Thresholds": 0.2685481131559785, "PR_Thresholds_Shift": 0.2741017616800423, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.19990004997501248, "Recall": 1.0, "F1 score": 0.3331945022907122, "PR_Thresholds": 0.2741017616800423, "PR_Thresholds_Shift": 0.27411992995452306, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2, "Recall": 1.0, "F1 score": 0.33333333333333337, "PR_Thresholds": 0.27411992995452306, "PR_Thresholds_Shift": 0.27435831484727613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2001000500250125, "Recall": 1.0, "F1 score": 0.33347228011671526, "PR_Thresholds": 0.27435831484727613, "PR_Thresholds_Shift": 0.2754141069049337, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2002002002002002, "Recall": 1.0, "F1 score": 0.33361134278565474, "PR_Thresholds": 0.2754141069049337, "PR_Thresholds_Shift": 0.27833205310927955, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20222446916076844, "Recall": 1.0, "F1 score": 0.33641715727502103, "PR_Thresholds": 0.27833205310927955, "PR_Thresholds_Shift": 0.27828876281355874, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20212228398180898, "Recall": 1.0, "F1 score": 0.3362757461118117, "PR_Thresholds": 0.27828876281355874, "PR_Thresholds_Shift": 0.27800075044915884, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20202020202020202, "Recall": 1.0, "F1 score": 0.33613445378151263, "PR_Thresholds": 0.27800075044915884, "PR_Thresholds_Shift": 0.2776328903251835, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20191822311963656, "Recall": 1.0, "F1 score": 0.33599328013439733, "PR_Thresholds": 0.2776328903251835, "PR_Thresholds_Shift": 0.2776241780365967, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20181634712411706, "Recall": 1.0, "F1 score": 0.33585222502099077, "PR_Thresholds": 0.2776241780365967, "PR_Thresholds_Shift": 0.277161636293821, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20171457387796268, "Recall": 1.0, "F1 score": 0.3357112882920688, "PR_Thresholds": 0.277161636293821, "PR_Thresholds_Shift": 0.27700787915394104, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20161290322580644, "Recall": 1.0, "F1 score": 0.3355704697986577, "PR_Thresholds": 0.27700787915394104, "PR_Thresholds_Shift": 0.2769549164028774, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20151133501259447, "Recall": 1.0, "F1 score": 0.3354297693920335, "PR_Thresholds": 0.2769549164028774, "PR_Thresholds_Shift": 0.2766929153486436, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2014098690835851, "Recall": 1.0, "F1 score": 0.3352891869237217, "PR_Thresholds": 0.2766929153486436, "PR_Thresholds_Shift": 0.2788582411282078, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20242914979757085, "Recall": 1.0, "F1 score": 0.3367003367003367, "PR_Thresholds": 0.2788582411282078, "PR_Thresholds_Shift": 0.27646230506366454, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20130850528434827, "Recall": 1.0, "F1 score": 0.33514872224549647, "PR_Thresholds": 0.27646230506366454, "PR_Thresholds_Shift": 0.27637824591036014, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20110608345902464, "Recall": 1.0, "F1 score": 0.3348681456676434, "PR_Thresholds": 0.27637824591036014, "PR_Thresholds_Shift": 0.2763280437184026, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20100502512562815, "Recall": 1.0, "F1 score": 0.3347280334728034, "PR_Thresholds": 0.2763280437184026, "PR_Thresholds_Shift": 0.27628964672086787, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20090406830738322, "Recall": 1.0, "F1 score": 0.3345880384776244, "PR_Thresholds": 0.27628964672086787, "PR_Thresholds_Shift": 0.27624989417771945, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20080321285140562, "Recall": 1.0, "F1 score": 0.33444816053511706, "PR_Thresholds": 0.27624989417771945, "PR_Thresholds_Shift": 0.27569189981269876, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2007024586051179, "Recall": 1.0, "F1 score": 0.3343083994985374, "PR_Thresholds": 0.27569189981269876, "PR_Thresholds_Shift": 0.27559942067558346, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20060180541624875, "Recall": 1.0, "F1 score": 0.3341687552213868, "PR_Thresholds": 0.27559942067558346, "PR_Thresholds_Shift": 0.2755828189320807, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20050125313283207, "Recall": 1.0, "F1 score": 0.33402922755741127, "PR_Thresholds": 0.2755828189320807, "PR_Thresholds_Shift": 0.2755506303259406, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20040080160320642, "Recall": 1.0, "F1 score": 0.333889816360601, "PR_Thresholds": 0.2755506303259406, "PR_Thresholds_Shift": 0.2754342145546786, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.200300450676014, "Recall": 1.0, "F1 score": 0.3337505214851898, "PR_Thresholds": 0.2754342145546786, "PR_Thresholds_Shift": 0.27643704153877313, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2012072434607646, "Recall": 1.0, "F1 score": 0.33500837520938026, "PR_Thresholds": 0.27643704153877313, "PR_Thresholds_Shift": 0.3081673527001227, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21798365122615804, "Recall": 1.0, "F1 score": 0.35794183445190153, "PR_Thresholds": 0.3081673527001227, "PR_Thresholds_Shift": 0.2886862621955617, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20736132711249353, "Recall": 1.0, "F1 score": 0.3434950622584801, "PR_Thresholds": 0.2886862621955617, "PR_Thresholds_Shift": 0.28978433922737074, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2075765438505449, "Recall": 1.0, "F1 score": 0.34379028792436617, "PR_Thresholds": 0.28978433922737074, "PR_Thresholds_Shift": 0.3023542393596219, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21493820526598603, "Recall": 1.0, "F1 score": 0.35382574082264484, "PR_Thresholds": 0.3023542393596219, "PR_Thresholds_Shift": 0.3022225394024624, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21482277121374865, "Recall": 1.0, "F1 score": 0.3536693191865605, "PR_Thresholds": 0.3022225394024624, "PR_Thresholds_Shift": 0.3021542947380289, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2147074610842727, "Recall": 1.0, "F1 score": 0.3535130357931949, "PR_Thresholds": 0.3021542947380289, "PR_Thresholds_Shift": 0.3019138870882473, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2145922746781116, "Recall": 1.0, "F1 score": 0.353356890459364, "PR_Thresholds": 0.3019138870882473, "PR_Thresholds_Shift": 0.30190689203322024, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21447721179624665, "Recall": 1.0, "F1 score": 0.35320088300220753, "PR_Thresholds": 0.30190689203322024, "PR_Thresholds_Shift": 0.30168501488207783, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21436227224008575, "Recall": 1.0, "F1 score": 0.353045013239188, "PR_Thresholds": 0.30168501488207783, "PR_Thresholds_Shift": 0.3012227104450105, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21424745581146223, "Recall": 1.0, "F1 score": 0.35288928098808997, "PR_Thresholds": 0.3012227104450105, "PR_Thresholds_Shift": 0.30110804831489224, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21413276231263384, "Recall": 1.0, "F1 score": 0.3527336860670194, "PR_Thresholds": 0.30110804831489224, "PR_Thresholds_Shift": 0.30095246866859415, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21401819154628143, "Recall": 1.0, "F1 score": 0.35257822829440283, "PR_Thresholds": 0.30095246866859415, "PR_Thresholds_Shift": 0.3002776519849864, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21390374331550802, "Recall": 1.0, "F1 score": 0.3524229074889868, "PR_Thresholds": 0.3002776519849864, "PR_Thresholds_Shift": 0.29993278230632514, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21378941742383753, "Recall": 1.0, "F1 score": 0.3522677234698371, "PR_Thresholds": 0.29993278230632514, "PR_Thresholds_Shift": 0.29986456420067015, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21367521367521367, "Recall": 1.0, "F1 score": 0.35211267605633806, "PR_Thresholds": 0.29986456420067015, "PR_Thresholds_Shift": 0.29985878796031634, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21356113187399894, "Recall": 1.0, "F1 score": 0.3519577650681918, "PR_Thresholds": 0.29985878796031634, "PR_Thresholds_Shift": 0.29977291727929534, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21344717182497333, "Recall": 1.0, "F1 score": 0.3518029903254178, "PR_Thresholds": 0.29977291727929534, "PR_Thresholds_Shift": 0.29977253178822294, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21333333333333335, "Recall": 1.0, "F1 score": 0.3516483516483517, "PR_Thresholds": 0.29977253178822294, "PR_Thresholds_Shift": 0.29959963132014894, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21321961620469082, "Recall": 1.0, "F1 score": 0.35149384885764495, "PR_Thresholds": 0.29959963132014894, "PR_Thresholds_Shift": 0.29937840848548064, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21310602024507191, "Recall": 1.0, "F1 score": 0.3513394817742644, "PR_Thresholds": 0.29937840848548064, "PR_Thresholds_Shift": 0.2991327213946491, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21299254526091588, "Recall": 1.0, "F1 score": 0.3511852502194908, "PR_Thresholds": 0.2991327213946491, "PR_Thresholds_Shift": 0.2977303787944971, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21287919105907396, "Recall": 1.0, "F1 score": 0.3510311540149188, "PR_Thresholds": 0.2977303787944971, "PR_Thresholds_Shift": 0.3025534918273052, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21505376344086022, "Recall": 1.0, "F1 score": 0.35398230088495575, "PR_Thresholds": 0.3025534918273052, "PR_Thresholds_Shift": 0.3027496109120608, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2151694459386767, "Recall": 1.0, "F1 score": 0.3541389995573263, "PR_Thresholds": 0.3027496109120608, "PR_Thresholds_Shift": 0.30292186427867934, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21528525296017223, "Recall": 1.0, "F1 score": 0.35429583702391493, "PR_Thresholds": 0.30292186427867934, "PR_Thresholds_Shift": 0.3038567377211026, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2154011847065159, "Recall": 1.0, "F1 score": 0.35445281346920693, "PR_Thresholds": 0.3038567377211026, "PR_Thresholds_Shift": 0.30756877106537794, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21774632553075668, "Recall": 1.0, "F1 score": 0.3576218149307108, "PR_Thresholds": 0.30756877106537794, "PR_Thresholds_Shift": 0.3071423474376661, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2176278563656148, "Recall": 1.0, "F1 score": 0.3574620196604111, "PR_Thresholds": 0.3071423474376661, "PR_Thresholds_Shift": 0.30614703915527786, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21750951604132682, "Recall": 1.0, "F1 score": 0.35730236712818225, "PR_Thresholds": 0.30614703915527786, "PR_Thresholds_Shift": 0.30601830204655944, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21739130434782608, "Recall": 1.0, "F1 score": 0.3571428571428571, "PR_Thresholds": 0.30601830204655944, "PR_Thresholds_Shift": 0.3056945112676442, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21727322107550245, "Recall": 1.0, "F1 score": 0.35698348951361003, "PR_Thresholds": 0.3056945112676442, "PR_Thresholds_Shift": 0.3056829295530814, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21715526601520088, "Recall": 1.0, "F1 score": 0.3568242640499554, "PR_Thresholds": 0.3056829295530814, "PR_Thresholds_Shift": 0.305681844565166, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21703743895822028, "Recall": 1.0, "F1 score": 0.3566651805617476, "PR_Thresholds": 0.305681844565166, "PR_Thresholds_Shift": 0.3055269920301519, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21691973969631237, "Recall": 1.0, "F1 score": 0.3565062388591801, "PR_Thresholds": 0.3055269920301519, "PR_Thresholds_Shift": 0.3053407226572825, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21680216802168023, "Recall": 1.0, "F1 score": 0.35634743875278396, "PR_Thresholds": 0.3053407226572825, "PR_Thresholds_Shift": 0.2976964571740437, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2127659574468085, "Recall": 1.0, "F1 score": 0.3508771929824561, "PR_Thresholds": 0.2976964571740437, "PR_Thresholds_Shift": 0.3052506823176614, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21668472372697725, "Recall": 1.0, "F1 score": 0.3561887800534283, "PR_Thresholds": 0.3052506823176614, "PR_Thresholds_Shift": 0.30517594574454104, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21645021645021645, "Recall": 1.0, "F1 score": 0.35587188612099646, "PR_Thresholds": 0.30517594574454104, "PR_Thresholds_Shift": 0.30513859321524245, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21633315305570577, "Recall": 1.0, "F1 score": 0.35571365051133835, "PR_Thresholds": 0.30513859321524245, "PR_Thresholds_Shift": 0.30509326830708344, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21621621621621623, "Recall": 1.0, "F1 score": 0.35555555555555557, "PR_Thresholds": 0.30509326830708344, "PR_Thresholds_Shift": 0.30477417926738604, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21609940572663425, "Recall": 1.0, "F1 score": 0.3553976010661928, "PR_Thresholds": 0.30477417926738604, "PR_Thresholds_Shift": 0.3047167842184929, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2159827213822894, "Recall": 1.0, "F1 score": 0.3552397868561279, "PR_Thresholds": 0.3047167842184929, "PR_Thresholds_Shift": 0.3045990944946926, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21586616297895306, "Recall": 1.0, "F1 score": 0.35508211273857077, "PR_Thresholds": 0.3045990944946926, "PR_Thresholds_Shift": 0.30432110732533435, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21574973031283712, "Recall": 1.0, "F1 score": 0.35492457852706305, "PR_Thresholds": 0.30432110732533435, "PR_Thresholds_Shift": 0.30422580354235707, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.215633423180593, "Recall": 1.0, "F1 score": 0.35476718403547675, "PR_Thresholds": 0.30422580354235707, "PR_Thresholds_Shift": 0.3041856910779602, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21551724137931033, "Recall": 1.0, "F1 score": 0.3546099290780142, "PR_Thresholds": 0.3041856910779602, "PR_Thresholds_Shift": 0.305216496455227, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2165674066053059, "Recall": 1.0, "F1 score": 0.3560302625723187, "PR_Thresholds": 0.305216496455227, "PR_Thresholds_Shift": 0.2897335360311234, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2074688796680498, "Recall": 1.0, "F1 score": 0.34364261168384885, "PR_Thresholds": 0.2897335360311234, "PR_Thresholds_Shift": 0.2976450142704046, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2126528442317916, "Recall": 1.0, "F1 score": 0.35072336694432266, "PR_Thresholds": 0.2976450142704046, "PR_Thresholds_Shift": 0.29736862265401054, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21242697822623474, "Recall": 1.0, "F1 score": 0.3504161191414805, "PR_Thresholds": 0.29736862265401054, "PR_Thresholds_Shift": 0.29261226445028493, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20964360587002095, "Recall": 1.0, "F1 score": 0.34662045060658575, "PR_Thresholds": 0.29261226445028493, "PR_Thresholds_Shift": 0.2922718726340172, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20953378732320588, "Recall": 1.0, "F1 score": 0.34647033347769596, "PR_Thresholds": 0.2922718726340172, "PR_Thresholds_Shift": 0.2922102082682915, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2094240837696335, "Recall": 1.0, "F1 score": 0.3463203463203463, "PR_Thresholds": 0.2922102082682915, "PR_Thresholds_Shift": 0.2920849597741425, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20931449502878074, "Recall": 1.0, "F1 score": 0.3461704889658157, "PR_Thresholds": 0.2920849597741425, "PR_Thresholds_Shift": 0.2919701868716979, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20920502092050208, "Recall": 1.0, "F1 score": 0.3460207612456747, "PR_Thresholds": 0.2919701868716979, "PR_Thresholds_Shift": 0.29196677266554477, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20909566126502874, "Recall": 1.0, "F1 score": 0.34587116299178555, "PR_Thresholds": 0.29196677266554477, "PR_Thresholds_Shift": 0.29174244065977234, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2089864158829676, "Recall": 1.0, "F1 score": 0.34572169403630076, "PR_Thresholds": 0.29174244065977234, "PR_Thresholds_Shift": 0.291620733230655, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20887728459530025, "Recall": 1.0, "F1 score": 0.34557235421166305, "PR_Thresholds": 0.291620733230655, "PR_Thresholds_Shift": 0.29160213970558035, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20876826722338204, "Recall": 1.0, "F1 score": 0.3454231433506045, "PR_Thresholds": 0.29160213970558035, "PR_Thresholds_Shift": 0.2914277895266245, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20865936358894105, "Recall": 1.0, "F1 score": 0.34527406128614585, "PR_Thresholds": 0.2914277895266245, "PR_Thresholds_Shift": 0.291268142700406, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20855057351407716, "Recall": 1.0, "F1 score": 0.3451251078515962, "PR_Thresholds": 0.291268142700406, "PR_Thresholds_Shift": 0.2910289877888949, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20844189682126107, "Recall": 1.0, "F1 score": 0.34497628288055193, "PR_Thresholds": 0.2910289877888949, "PR_Thresholds_Shift": 0.2909548985066613, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20833333333333334, "Recall": 1.0, "F1 score": 0.3448275862068966, "PR_Thresholds": 0.2909548985066613, "PR_Thresholds_Shift": 0.29039885587865943, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20822488287350338, "Recall": 1.0, "F1 score": 0.34467901766479964, "PR_Thresholds": 0.29039885587865943, "PR_Thresholds_Shift": 0.290241796501877, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2081165452653486, "Recall": 1.0, "F1 score": 0.3445305770887166, "PR_Thresholds": 0.290241796501877, "PR_Thresholds_Shift": 0.29018170774818147, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2080083203328133, "Recall": 1.0, "F1 score": 0.3443822643133878, "PR_Thresholds": 0.29018170774818147, "PR_Thresholds_Shift": 0.2899122634093746, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2079002079002079, "Recall": 1.0, "F1 score": 0.34423407917383825, "PR_Thresholds": 0.2899122634093746, "PR_Thresholds_Shift": 0.2898932917913855, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2077922077922078, "Recall": 1.0, "F1 score": 0.34408602150537637, "PR_Thresholds": 0.2898932917913855, "PR_Thresholds_Shift": 0.28983194636150056, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.20768431983385255, "Recall": 1.0, "F1 score": 0.3439380911435942, "PR_Thresholds": 0.28983194636150056, "PR_Thresholds_Shift": 0.2929940688045857, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2097535395909806, "Recall": 1.0, "F1 score": 0.34677069787602943, "PR_Thresholds": 0.2929940688045857, "PR_Thresholds_Shift": 0.2930498556759684, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2098635886673662, "Recall": 1.0, "F1 score": 0.34692107545533385, "PR_Thresholds": 0.2930498556759684, "PR_Thresholds_Shift": 0.2931851584640955, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2099737532808399, "Recall": 1.0, "F1 score": 0.3470715835140998, "PR_Thresholds": 0.2931851584640955, "PR_Thresholds_Shift": 0.2934052727697551, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21008403361344538, "Recall": 1.0, "F1 score": 0.34722222222222227, "PR_Thresholds": 0.2934052727697551, "PR_Thresholds_Shift": 0.29732920127367657, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21231422505307856, "Recall": 1.0, "F1 score": 0.3502626970227671, "PR_Thresholds": 0.29732920127367657, "PR_Thresholds_Shift": 0.2970169372851738, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21220159151193635, "Recall": 1.0, "F1 score": 0.350109409190372, "PR_Thresholds": 0.2970169372851738, "PR_Thresholds_Shift": 0.2968121162715713, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21208907741251326, "Recall": 1.0, "F1 score": 0.3499562554680665, "PR_Thresholds": 0.2968121162715713, "PR_Thresholds_Shift": 0.29662509092872713, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21197668256491786, "Recall": 1.0, "F1 score": 0.34980323567993005, "PR_Thresholds": 0.29662509092872713, "PR_Thresholds_Shift": 0.29659860101576935, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.211864406779661, "Recall": 1.0, "F1 score": 0.3496503496503497, "PR_Thresholds": 0.29659860101576935, "PR_Thresholds_Shift": 0.29659699273109846, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21175224986765484, "Recall": 1.0, "F1 score": 0.34949759720401924, "PR_Thresholds": 0.29659699273109846, "PR_Thresholds_Shift": 0.2965221835724392, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21164021164021163, "Recall": 1.0, "F1 score": 0.34934497816593885, "PR_Thresholds": 0.2965221835724392, "PR_Thresholds_Shift": 0.2961382972871351, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21152829190904285, "Recall": 1.0, "F1 score": 0.34919249236141425, "PR_Thresholds": 0.2961382972871351, "PR_Thresholds_Shift": 0.29606600598975413, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21141649048625794, "Recall": 1.0, "F1 score": 0.34904013961605584, "PR_Thresholds": 0.29606600598975413, "PR_Thresholds_Shift": 0.2974413635155341, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21253985122210414, "Recall": 1.0, "F1 score": 0.3505696757230499, "PR_Thresholds": 0.2974413635155341, "PR_Thresholds_Shift": 0.2955908983876579, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21130480718436345, "Recall": 1.0, "F1 score": 0.34888791975577843, "PR_Thresholds": 0.2955908983876579, "PR_Thresholds_Shift": 0.29546179264947725, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21108179419525067, "Recall": 1.0, "F1 score": 0.34858387799564267, "PR_Thresholds": 0.29546179264947725, "PR_Thresholds_Shift": 0.29537633978808653, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2109704641350211, "Recall": 1.0, "F1 score": 0.3484320557491289, "PR_Thresholds": 0.29537633978808653, "PR_Thresholds_Shift": 0.2952294629301077, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21085925144965736, "Recall": 1.0, "F1 score": 0.348280365694384, "PR_Thresholds": 0.2952294629301077, "PR_Thresholds_Shift": 0.29519869539491816, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2107481559536354, "Recall": 1.0, "F1 score": 0.34812880765883375, "PR_Thresholds": 0.29519869539491816, "PR_Thresholds_Shift": 0.2950338145161517, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.210637177461822, "Recall": 1.0, "F1 score": 0.3479773814702044, "PR_Thresholds": 0.2950338145161517, "PR_Thresholds_Shift": 0.29471046619366487, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21052631578947367, "Recall": 1.0, "F1 score": 0.34782608695652173, "PR_Thresholds": 0.29471046619366487, "PR_Thresholds_Shift": 0.2944291156868567, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21041557075223566, "Recall": 1.0, "F1 score": 0.3476749239461104, "PR_Thresholds": 0.2944291156868567, "PR_Thresholds_Shift": 0.2942168632784354, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.2103049421661409, "Recall": 1.0, "F1 score": 0.3475238922675934, "PR_Thresholds": 0.2942168632784354, "PR_Thresholds_Shift": 0.2937652882889429, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21019442984760903, "Recall": 1.0, "F1 score": 0.34737299174989145, "PR_Thresholds": 0.2937652882889429, "PR_Thresholds_Shift": 0.2954649337865091, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.21119324181626187, "Recall": 1.0, "F1 score": 0.34873583260680036, "PR_Thresholds": 0.2954649337865091, "PR_Thresholds_Shift": 1e-06, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}, {"Precision": 0.16666666666666666, "Recall": 1.0, "F1 score": 0.2857142857142857, "PR_Thresholds": 1e-06, "PR_Thresholds_Shift": 0.0, "one_lbl": 1, "prec_lbl": "Precision", "rec_lbl": "Recall"}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?Precision=%5Cfrac%7BTP%7D%7BTP+FP%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?Recall=%5Cfrac%7BTP%7D%7BTP+FN%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?TPR=%5Cfrac%7BTP%7D%7BTP+FN%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?FPR=%5Cfrac%7BFP%7D%7BTN+FP%7D"></p>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li>Formulas: <a href="https://en.wikipedia.org/wiki/F-score">F-score</a></li>
<li>Original notebook: <a href="https://www.kaggle.com/code/joatom/interactive-precision-recall-curve">Interactive Precision-Recall Curve</a></li>
</ul>


</section>

 ]]></description>
  <category>Metric</category>
  <category>Basics</category>
  <category>ML</category>
  <guid>https://joatom.github.io/blog/posts/2023-12-29-pr-curve/2023-12-29-interactive-precision-recall-curve.html</guid>
  <pubDate>Thu, 28 Dec 2023 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2023-12-29-pr-curve/pr-curve2.png" medium="image" type="image/png" height="120" width="144"/>
</item>
<item>
  <title>Fill’er up!</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2023-01-03-fill-her-up/index.html</link>
  <description><![CDATA[ 




<div class="callout-warning callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This blog post is not a financial advice! This is a toy example. This blog post is full of unrealistic assumptions. All numbers are made up. Reach out to a professional financial advisor you trust, if you need financial advise. And most important, take a spreadsheet and do the math yourself with your numbers and your assumptions.</p>
</div>
</div>
<section id="a-not-that-funny-joke" class="level1">
<h1>A (not that) funny joke</h1>
<p>Once upon a time, in the last century, a teacher of mine was complaining about the latest increase of the gasoline price. The old man was finishing his complains with a misogynistic joke:</p>
<p><span class="emoji" data-emoji="boar">🐗</span>: <em>The gas price went up a gain. It doesn’t matter for my wife, though. She always refuels for 10 bugs. Hahaha.</em></p>
<p>Besides he shouldn’t have talked like this about his wife, the idea of always spending the same amount of money on the gas station to avoid price raises seamed to be pretty funny. I since used a variation of this da(e)d joke every now and then, like <em>“I always refuel for 10 bugs, lol.”</em> and you certainly have heard this joke often, too.</p>
<p align="center">
<img src="https://joatom.github.io/blog/posts/2023-01-03-fill-her-up/gas_station.jpeg" alt="Image generated with Stable Diffusion v2 (@Rombach_2022_CVPR): Gas station at night as pixel graphics." width="50%">
</p>
<p style="font-size:12pt" align="center">
Image generated with Stable Diffusion v2 (Rombach et al.&nbsp;(2022)) <br> <i>“Gas station at night as pixel graphics.”</i>
</p>
<p>Now, 25 years later …</p>
<p>I was driving with my wife to a party and she realized that I’ve filled up the car after shopping in the afternoon. She was very happy that she wouldn’t need to stop at the gas station during the upcoming week. I told here proudly that the price for gas was low and I saved 30 ct per liter compared to four weeks ago. Once again I quietly had to think about this old joke. Suddenly, when I was just about to grin, I was struck by a though: <em>“Is it possible that the person, who is always refueling for exactly 10 bugs, is right and the other person, that is laughing about this strategy, is actually the idiot?!”</em>.</p>
<p>This thought come up because the night before I’ve watched some YouTube videos about investment strategies. One example was to follow a saving plan and put the same amount of money into ETFs on a regular basis, say 100 Euro every month. In the interview a question come up: <em>What would happen when the market goes down and the portfolio looses value?</em> The answer was pretty simple: <em>If you invest regularly then you hit the market when it goes up the one day and when it goes down the other day.</em> So the volatility doesn’t matter that much on the long run. This intuitively made sense to me: The regular investments smooth out the volatility. Since you can’t predict the stock prices, it’s hard to <strong>time</strong> the market (predicting when buying is cheap over a short period of time).</p>
<p>So, I left the party with two thoughts to investigate on:</p>
<ul>
<li><ol type="1">
<li>What is a suitable refueling strategy?</li>
</ol></li>
<li><ol start="2" type="1">
<li>Is my intuition about the constant ETF investment reasonable?</li>
</ol></li>
</ul>
<p>The first question is tackled in this blog post. The second one I examined in <a href="../2023-01-03-one-dime-at-a-time/index.html">another blog post</a>.</p>
</section>
<section id="refueling-strategies" class="level1 page-columns page-full">
<h1>Refueling Strategies</h1>
<p>These are the average prices for fuel in Germany from January 2021 to November 2022 from <span class="citation" data-cites="destatis_2022">Statistisches Bundesamt (Destatis) (2022)</span>.</p>
<div class="cell" data-tags="[]" data-execution_count="3">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2023-01-03-fill-her-up/index_files/figure-html/cell-4-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>2021 was a pretty normal year, the fuel prices slightly increased, with some noisy up and downs. 2022 was really crazy with high raises and steep dives of the fuel price.</p>
<p>Since our car is using diesel I’ll do the following simulations for diesel. Our car is driving approximately <em>12,000 km</em> per year and has a consumption of <em>6.4 liters per 100 km</em>. In our example we assume we drive the same distance with the same consumption on everyday of the year.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>12,000 km/year</p>
<p>0.064 l/km</p>
<p>2.104 l/day</p>
</div></div><p>We’ll compare three different refueling strategies:</p>
<ul>
<li><p><strong>Strategy 1: Fixed payment:</strong></p>
<p>We refuel for exactly <em>€ 45</em> when tank has <em>less than 10 liters</em>. The tank has a capacity of 55 liters, hence fuel for € 45 fits when we refuel. This refers to the “joke” strategy.</p></li>
<li><p><strong>Strategy 2: Regularly, fixed amount of fuel:</strong></p>
<p>In this strategy we refill <em>every 15 days</em> the same amount of fuel regardless of the price. That’s viable, because we are consuming the same amount of fuel everyday.</p></li>
<li><p><strong>Strategy 3: Fill on lowest price:</strong></p>
<p>We have a magic crystal ball and know every price in advance. So we (partially) refuel always on the <em>lowest price</em> in a 20 day window.</p></li>
</ul>
<div class="cell" data-execution_count="6">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2023-01-03-fill-her-up/index_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>The chart shows the price of the consumed fuel on every day for each of the strategy. For example, when we refuel with strategy 2 on January 16th for € 1.24/l we’ll consume diesel worth € 1.24/l for the next 15 days.</p>
<p>Obviously, strategy 3 always has the lowest price. The average price and the yearly consumption for the three strategies are:</p>
<div class="cell" data-execution_count="7">
<div class="cell-output cell-output-display" data-execution_count="7">
<ul>
<li>Strategy 1: € 1.3812/l =&gt; € 1,061/year</li>
<li>Strategy 2: € 1.3829/l =&gt; € 1,062/year</li>
<li>Strategy 3: € 1.3628/l =&gt; € 1,047/year</li>
</ul>
<p>Which leads to a total saving of € 14.10/year if we could predict the cheapest price for the next 20 days compared to strategy 1 and € 15.38/year compared to strategy 2.</p>
<p>That doesn’t sound much, but it’s still a saving of approximately 1.33% or additional fuel for a 159 km drive.</p>
<p>When we look a bit closer at the chart, we see that the <em>best price strategy</em> line is very fine grained and the other two strategies are more bumpy with long flat plateaus. This indicates, that to accomplish the best price strategy, we need to hit the gas station more often. Here are the number of pit stops needed for the three strategies:</p>
<ul>
<li>Strategy 1: 24 stops</li>
<li>Strategy 2: 24 stops</li>
<li>Strategy 3: 54 stops</li>
</ul>
<p>This is a total different picture. To achieve a saving of € 14.10/year I would not only need the magic crystal ball, but I would also need to make 30 more stops at the gas station per year. Let’s say one stop takes 10 minutes (waiting in line, refueling, paying), that would result in an additional 5.00 hours per year spending at the gas station.</p>
<p>During this additional 5.00 hours I can walk with my daughter at 4km/h her daily 2x2km march to kindergarten 5 times. Which is 20.0 km or a diesel saving of € 1.8 in strategy 1 and if I take insurance, taxes, regular maintenance and car depreciation into account it’s a saving of € 7.2 (with 0.36 ct/km in 2021).</p>
</div>
</div>
<p>Now, that we have a picture of 2021 and can decide on our personal preference and clairvoyant abilities to abondon or to go for Strategy 3, we still don’t have a clear picture of Strategy 1 and 2. In 2021 they look pretty similar with the given parameters. But it’s also clear, that we would have to make more gas station stops, if we’d either lower the fixed paying amount of strategy 1 or if we’d shorten the refilling interval of strategy 2.</p>
<p>Let’s see what happens when the prices go crazy like in 2022.</p>
<div class="cell" data-execution_count="9">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2023-01-03-fill-her-up/index_files/figure-html/cell-10-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="cell-output cell-output-display" data-execution_count="10">
<p>These are the numbers for 2022:</p>
<ul>
<li>Strategy 1: € 1.9517/l =&gt; € 1,499/year =&gt; 33 stops</li>
<li>Strategy 2: € 1.9481/l =&gt; € 1,496/year =&gt; 24 stops</li>
<li>Strategy 3: € 1.8818/l =&gt; € 1,445/year =&gt; 111 stops</li>
</ul>
<p>Which result in savings and additional hours spent at the gas station as shown below:</p>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2023-01-03-fill-her-up/index_files/figure-html/cell-13-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>In 2022 strategy 2 is superior to strategy 1. The higher number of gas station stops results from not adjusting the fixed payment amount to the higher prices.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>The old joke is worn out.</p>
<ol type="A">
<li>No one can predict the prices precisely.</li>
<li>Waiting at the gas station for a € 3-4/hours “salary” doesn’t make sense, if you can effort a car in Germany.</li>
</ol>
<p>After comparing the three strategies with the data from 2021 and 2022 I personally prefer strategy number 2. Which leads me to these life hacks:</p>
<div class="callout-tip callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Life hacks
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Default to not taking the car, instead
<ul>
<li>commute by walking, train, bus, bike, stay at home, share rides,</li>
<li>go shopping by walking, train, bus, bike, shop online,</li>
<li>go to kindergarten/School by walking, train, bus, bike.</li>
</ul></li>
<li>Don’t bother about the fuel price.</li>
<li>Refuel the entire tank.</li>
<li>Refuel early if you fear traffic jams in winter. A diesel fueled car is basically a moving heating. A diesel car only uses about half of the fuel provided energy to actually move the car (<span class="citation" data-cites="tuev_nord_2023"><span>“Wirkungsgrade von <span>Elektroautos</span> <span></span> <span>TÜV</span> <span>NORD</span> <span>Mobilität</span>”</span> (2023)</span>). And even less if we don’t press the pedal all the way down. The rest results in heat. And if we leave the heating on, while waiting in traffic jam in winter, we can watch the tank go empty, quickly.</li>
</ul>
</div>
</div>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Rombach_2022_CVPR" class="csl-entry">
Rombach, Robin, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Björn Ommer. 2022. <span>“High-Resolution Image Synthesis with Latent Diffusion Models.”</span> In <em>Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)</em>, 10684–95. <a href="https://huggingface.co/stabilityai/stable-diffusion-2">https://huggingface.co/stabilityai/stable-diffusion-2</a>.
</div>
<div id="ref-destatis_2022" class="csl-entry">
Statistisches Bundesamt (Destatis). 2022. <span>“Kraftstoffpreise an Öffentlichen <span>Tankstellen</span>.”</span> <a href="https://www.dashboard-deutschland.de/indicator/tile_1667921381760?1671822853">https://www.dashboard-deutschland.de/indicator/tile_1667921381760?1671822853</a>.
</div>
<div id="ref-tuev_nord_2023" class="csl-entry">
<span>“Wirkungsgrade von <span>Elektroautos</span> <span></span> <span>TÜV</span> <span>NORD</span> <span>Mobilität</span>.”</span> 2023. <a href="https://www.tuev-nord.de/de/privatkunden/verkehr/auto-motorrad-caravan/elektromobilitaet/wirkungsgrad/">https://www.tuev-nord.de/de/privatkunden/verkehr/auto-motorrad-caravan/elektromobilitaet/wirkungsgrad/</a>.
</div>
</div></section></div> ]]></description>
  <category>Life hack</category>
  <category>Finance</category>
  <guid>https://joatom.github.io/blog/posts/2023-01-03-fill-her-up/index.html</guid>
  <pubDate>Mon, 02 Jan 2023 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2023-01-03-fill-her-up/gas_station.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>One dime at a time?</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2023-01-03-one-dime-at-a-time/index.html</link>
  <description><![CDATA[ 




<div class="callout-warning callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This blog post is not a financial advice! This is a toy example. This blog post is full of unrealistic assumptions. All numbers are made up. Reach out to a professional financial advisor you trust, if you need financial advise. And most important, take a spreadsheet and do the math yourself with your numbers and your assumptions.</p>
</div>
</div>
<p align="center">
<img src="https://joatom.github.io/blog/posts/2023-01-03-one-dime-at-a-time/sparschwein.jpg" alt="" width="50%" style="border-radius: 50%;">
</p>
<section id="one-dime-at-a-time" class="level1">
<h1>One dime at a time?</h1>
<p>One night I’ve watched some YouTube videos about investment strategies. One example was to follow a saving plan and put the same amount of money into ETFs on a regular basis, say 100 Euro every month. In the interview a question come up: <em>What would happen when the market goes down and the portfolio looses value?</em> The answer was pretty simple: <em>If you invest regularly then you hit the market when it goes up the one day and when it goes down the other day.</em> So the volatility doesn’t matter that much on the long run. This intuitively made sense to me: The regular investments smooth out the volatility. And since you can’t predict the stock prices, it’s hard to <strong>time</strong> the market (predicting when buying is cheap over a short period of time).</p>
<p>Is my intuition about the constant investments reasonable? Let’s find out in this blog post.</p>
<p>By the way, this question made me also think about a proper refueling strategy witch I covered in <a href="../2023-01-03-fill-her-up/index.html">another blog post</a>.</p>
</section>
<section id="a-fictional-asset" class="level1">
<h1>A fictional asset</h1>
<div class="cell" data-execution_count="3">
<div class="cell-output cell-output-display" data-execution_count="3">
<p>We will simulate some numbers for a fictional assets price time series. The prices will increase on the long run, but will have some volatility. Here is how our simulation looks like for 200 time slots:</p>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2023-01-03-one-dime-at-a-time/index_files/figure-html/cell-5-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>The <span style="color:lightblue">trend line</span> indicates the general price increase on the long run. The <span style="color:green">green dot</span> marks the lowest price and the <span style="color:red">red dot</span> the highest price in the time range.</p>
<div class="cell" data-execution_count="5">
<div class="cell-output cell-output-display" data-execution_count="5">
<p>With an investment of € 20,000 at the lowest price at t=20 and selling at the highest price at t=197 the return is 18.96% and yields € 3,792.</p>
</div>
</div>
</section>
<section id="two-investment-strategies" class="level1 page-columns page-full">
<h1>Two investment strategies</h1>
<p>Since we don’t know in advance when the price will be lowest and highest, we consider two investment strategies and see how they play out.</p>
<div class="cell" data-execution_count="6">
<div class="cell-output cell-output-display" data-execution_count="6">
<p>In both strategies we start out with € 20,000 cash.</p>
<ul>
<li><p><strong>Strategy 1: One-time investment</strong></p>
<p>The entire amount of money is investment at once. We will look how this plays out at various points in time.</p></li>
<li><p><strong>Strategy 2: Continuous investment</strong></p>
<p>The cash is split equally over the period of time and at every step the same amount of money is invested.</p>
<p>$ investment_t = 20,000 / 200 = 100.00 $</p></li>
</ul>
<p>Let’s see how many shares we can buy with both strategies:</p>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2023-01-03-one-dime-at-a-time/index_files/figure-html/cell-9-output-1.png" class="img-fluid"></p>
</div>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p><span style="color:blue"><strong>Blue dots:</strong></span> <img src="https://latex.codecogs.com/png.latex?%0Aonetime(t)%20=%20%5Cfrac%7Bcash%7D%7Bprice_t%7D%0A"></p>
<p><strong>Black line:</strong> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Acont(t)%20&amp;=%20%5Csum%5Et_i%7B%20%5Cfrac%7Bcash/t%7D%7Bprice_i%7D%7D%20%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=%20%5Cfrac%7Bcash%7D%7Bt%7D%20%5Csum%5Et_i%7B%20%5Cfrac%7B1%7D%7Bprice_i%7D%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p><span style="color:lightblue"><strong>Light blue line:</strong></span> <img src="https://latex.codecogs.com/png.latex?%0Acontmax(t)%20=%20cont(n)%0A"></p>
</div></div><p>The <span style="color:blue"><strong>blue dots</strong></span> mark the number of shares that can be purchased when the entire money is invested at once at the given time <em>t</em>.</p>
<p>The <strong>black line</strong> indicates the number of shares that can be bought when the entire investment is equally spread from <em>t=0</em> up to a given <em>t</em>.</p>
<p>The <span style="color:lightblue"><strong>light blue line</strong></span> highlights the number of shares of the last entry of the black line, hence the cash is equally invested over the entire period of time.</p>
<p>A <span style="color:green"><strong>green line</strong></span> marks the one-time investment that always reach a higher number of shares compared to the continuous investment, regardless of the holding duration.</p>
<p>A <span style="color:red"><strong>red lines</strong></span> indicates the one-time investment that can never reach the number of shares of the continuous investment at any time in <img src="https://latex.codecogs.com/png.latex?0%3Ct%3C=n">.</p>
<p>An <span style="color:orange"><strong>orange line</strong></span> marks the one-time investment that has fewer number of shares as the continuous investment at the given time, if the entire cash has been equally distributed to the given <em>t</em>. However, if the continuous investments are spread for a wider period of time, the one-time investment will be superior to the continuous investment at a later point in time.</p>
<p>With our dummy data the strategy to put a big investment at once is good if the investment can stay invested untouched for a long period of time. If the money needs to shortly be withdrawn from the investment the continuous strategy is preferable, regarding number of shares. The tipping point between the strategies is close to <img src="https://latex.codecogs.com/png.latex?t/2">.</p>
<p>Let’s see, how the amount of shares result in value at <img src="https://latex.codecogs.com/png.latex?t=n">,</p>
<div class="cell" data-execution_count="10">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2023-01-03-one-dime-at-a-time/index_files/figure-html/cell-11-output-1.png" class="img-fluid"></p>
</div>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p><span style="color:blue"><strong>Blue line:</strong></span> <img src="https://latex.codecogs.com/png.latex?%0Acash(t)=cash%0A"></p>
<p><strong>Black line:</strong> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Acont(t)%20&amp;=%20inv_%7Bacc_t%7D+cash_%7Bremaining_t%7D%20%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=%20p_n*%5Cfrac%7Bcash%7D%7Bn%7D%5Csum%5Et_i%7B%5Cfrac%7B1%7D%7Bp_i%7D%7D%20+%20cash*(1-%5Cfrac%7Bt%7D%7Bn%7D)%0A%5Cend%7Baligned%7D%0A"></p>
<p><span style="color:lightblue"><strong>Light blue line:</strong></span> <img src="https://latex.codecogs.com/png.latex?%0Acontmax(t)%20=%20cont(n)%0A"></p>
<p><strong>Dots:</strong> <img src="https://latex.codecogs.com/png.latex?%0Aonetime(t)%20=%20p_n*%5Cfrac%7Bcash%7D%7Bp_t%7D%0A"></p>
</div></div><p>The <span style="color:blue"><strong>blue line</strong></span> is our net worth if we don’t invest and keep cash for the entire period of time.</p>
<p>The <strong>black line</strong> indicates the net worth in a continuous investment strategy. At time <em>t</em> the number of shares that are accumulated sofar are multiplied by the price at the end of the time period. Also, the remaining cash at time <em>t</em> is added to the investment value.</p>
<p>The <span style="color:lightblue"><strong>light blue</strong></span> line highlights the net worth of the continuous investment at the end of the period of time.</p>
<p>The <strong>dots</strong> indicate the value of a one-time purchase at the end of the period of time.</p>
<p>A <span style="color:red"><strong>red dot</strong></span> one-time investment is always worse than the continuous strategy.</p>
<p>A <span style="color:green"><strong>green dot</strong></span> one-time investment results in a higher net value at the end of the period compared to the continuous investment.</p>
<p>An <span style="color:orange"><strong>orange dot</strong></span> one-time investment is superior to the continuous investment for a certain period of time. But if the continuous strategy will go on till the end, the orange dot will result in a smaller net worth.</p>
<p>The <span style="color:lightblue"><strong>light blue</strong></span> and <strong>black line</strong> are highly volatile, when we change the duration, since it depends only on the last price. If the period gets shortened the area of the <span style="color:green"><strong>green</strong></span>, <span style="color:orange"><strong>orange</strong></span> and <span style="color:red"><strong>red dots</strong></span> will change accordingly. One idea to reduce volatility the selling can be spread over many periods, like the continuous strategy to accumulate shares.</p>
<p>Again, the strategy to invest all at once is preferable, if the investments won’t be sold for a long time. If the investment needs to be sold at any time a continuous strategy is preferable with this dummy data.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>This example only describes a fictional scenario where the prices go up on the long run. We also haven’t thought at what point(s) in time to sell the shares to actually get the best out of the investment.</p>
<p>From a personal view a continuous strategy seams appealing. This also makes sense considering a continuous income stream (such as salary) which would make this strategy applicable.</p>
<p>More on this topic can be found under the phrase <strong>cost dollar averaging</strong>.</p>
<p>And as said in the beginning, that’s not a financial advise. So please make up your mind with your own calculations.</p>


</section>

 ]]></description>
  <category>Finance</category>
  <guid>https://joatom.github.io/blog/posts/2023-01-03-one-dime-at-a-time/index.html</guid>
  <pubDate>Mon, 02 Jan 2023 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2023-01-03-one-dime-at-a-time/sparschwein.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ingredients for successful projects</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2022-11-25-project-success/index.html</link>
  <description><![CDATA[ 




<section id="in-a-nutshell-tldr" class="level1 unnumbered">
<h1 class="unnumbered">In a nutshell <span class="emoji" data-emoji="chestnut">🌰</span> (tl;dr)</h1>
<p>Above all,</p>
<p><strong>USE COMMON SENSE</strong></p>
<p>when running projects!</p>
<p>Additionally, you can take some inspiration from the techniques described below. Make sure to always keep <span style="color:red"><strong>PROCESS</strong></span>, <span style="color:lightblue"><strong>SCOPE</strong></span> and <span style="color:green"><strong>PEOPLE</strong></span> in mind when making project related decisions.</p>
<p>Have fun!</p>
</section>
<section id="sec-focus" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Focus</h1>
<p><span style="color:lightblue"><strong>[SCOPE]</strong></span></p>
<p>The first thing to do, when a project is ready to start, is to define the scope. Depending on the project size and setup this can be done in various granularity.</p>
<p>In any case, I found it to be very useful to always make a very high level scope description. An easy way to implement it, is to draw a <strong>Focus Circle</strong> like this:</p>
<ul>
<li>Make sure the developers and product owner participate in the Focus Circle creating session.</li>
<li>Grab a physical sheet of paper.</li>
<li>Draw three circles like a dartboard.</li>
<li>Think of your MVP (minimum viable product).</li>
<li>Now, write some of the most important features in the innermost circle.</li>
<li>Continue by writing some less important features in the intermediate circle.</li>
<li>Put some nice-to-have features to the outer circle.</li>
<li>The feature list must not be complete. The listed features should rather be easy to grasp and be a great representation of mandatory, important and nice-to-have features.</li>
<li>Finally, write some out-of-scope features at the borders of the page.</li>
</ul>
<p>Now, with the Focus Circle in place, you have a nice tool which can be used through-out the project. Bring it to the first couple of meetings and just pin it to the board or to the wall.</p>
<p align="center">
<img src="https://joatom.github.io/blog/posts/2022-11-25-project-success/board.png" class="img-fluid">
</p>
<p>Then, after a few meetings, let it disappear. When you are a couple of weeks into your project and tension rises, you disagree on the urgency of topics or the team gets stuck implementing off-topic features, then you take out the Focus Circle. Slam it on the desk and remind everybody what the major goal of the project is. I’m sure you’ll be back on track, at least for a couple of hours or even days.</p>
</section>
<section id="build-a-diverse-team" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Build a diverse Team</h1>
<p><span style="color:green"><strong>[PEOPLE]</strong></span></p>
<p>Have you ever been in a team with lots of “alphas”? I once competed in such an “alpha” team against other more heterogeneous teams. Guess who did the worst?! If everyone wants to decide which dinner to cook, it is hard to agree on a recipe. And afterall, somebody still has to cut the onions and peel the potato.</p>
<p>In another project we started out with a team of highly qualified analysts and engineers. The teammates knew each other well and the hierarchies were clear. One seat still had to be filled for a project governance role. This role was assigned to a person we only had very few interactions with before. This person had different characteristics than the rest of us and therefore brought different perspectives to the project. Although the person wasn’t actually involved in building the product, it was crucial for the project success to have the person in the team.</p>
<p>It’s important to sometimes disrupt thinking in established ways, even if this thinking has been successful before. <em>“We’ve always done it like this…”</em> is the tombstone of innovation. Diverse teams will challenge this kind of thinking.</p>
</section>
<section id="sec-currency" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> The Currency of Business</h1>
<p><span style="color:green"><strong>[PEOPLE]</strong></span></p>
<p><span class="emoji" data-emoji="moneybag">💰</span> You think <em>money</em> is the currency of business? - Nope.</p>
<p><span class="emoji" data-emoji="small_orange_diamond">🔸</span> Maybe <em>rank</em>? - No.</p>
<p><span class="emoji" data-emoji="arrows_counterclockwise">🔄</span> Then it must be a great <em>network</em>? - Not really.</p>
<p>The most valuable currency you can <em>earn</em> in business is, when <strong>people want to work with you AGAIN</strong>! <em>Money</em>, <em>rank</em> and <em>network</em> will eventually be the <em>outcome</em>, if people want to work with you again.</p>
<p>What does it take for people to want to work with you again?</p>
<ol type="1">
<li>Trust / reliability</li>
<li>Sympathy / being pleasant</li>
<li>Competence / skill</li>
</ol>
<p>What if you only want to work with highly performing teammates?! Here is the trick. Just add a great <em>Environment</em> to <em>Trust</em>, <em>Sympathy</em> and <em>Competence</em> and you’ll have a great chance to see high performance happening in your team.</p>
</section>
<section id="sec-meeting" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Do Dailies, Retros &amp; Planning, but smart!</h1>
<p><span style="color:red"><strong>[PROCESS]</strong></span></p>
<p>Just do them!</p>
<p>I know, some people hate meetings, especially if the schedule is filled up with meetings. I haven’t seen projects fail because of daily meetings, but I have seen projects fail because of the absence of regular meetings.</p>
<p>But be smart. Daily Meetings don’t have to be 15 minutes long. Choose what ever suites the project. Do the recurring meeting always on the same time and place. Rather skip one meeting then moving it around in the schedules. This reduces time wasting coordination.</p>
<p>There is also no need for a four hour planning session per sprint where everybody is applying to. The planning can be prepared by few relevant people and fine-tuned later on in a half-hour session with everybody being involved.</p>
<p>Retros? Sure! Hence, no lessons learned, no improvement. No time for emotions, no chaka.</p>
</section>
<section id="train-or-get-help-on-central-issues" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Train or get help on central Issues</h1>
<p><span style="color:lightblue"><strong>[SCOPE]</strong></span></p>
<p><span class="emoji" data-emoji="rooster">🐓</span>: <em>“I’ve written HTML once before in the 90’s, I’ll design the customers landing page.”</em></p>
<p><span class="emoji" data-emoji="cold_sweat">😰</span>: <em>Are you kidding, right?</em></p>
<p><span class="emoji" data-emoji="santa">🎅</span>: <em>“I’ve organized the best Christmas party. Let me draw the BPMN for the main process.”</em></p>
<p><span class="emoji" data-emoji="worried">😟</span>: <em>Noway!</em></p>
<p>We all want to learn, improve and try out new things and it should be part of our job. But it’s not a good idea to start with critical steps. There is a reason, why people study and gather experience over time. Do some professional training (many of them are for free) or mix teams with experienced and curious people.</p>
</section>
<section id="define-roles-explicitly" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Define Roles, explicitly</h1>
<p><span style="color:green"><strong>[PEOPLE]</strong></span></p>
<p>Make sure everybody is aware of the <em>role</em> they are playing in the project. Not only define the name of the role (e.g.&nbsp;Project Manager), but explicitly define the responsibilities and expectation of the role. <em>Is the business analyst also responsible of writing a technical requirement? - Is the Product Owner joining the daily meetings or only the planning and the sprint review? - Is the project manager only doing governance or also reevaluating and sorting the tasks?</em></p>
<p>There is no one-fits-all answer to the duties of each role. Make sure everyone has the same understanding of the project members’ roles, regardless of the name.</p>
</section>
<section id="trouble-with-overlapping-roles" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Trouble with overlapping Roles</h1>
<p><span style="color:red"><strong>[PROCESS]</strong></span></p>
<p>Although you may be able to play many different roles in a project, you should avoid to hold too many. Some roles include steady interaction with other people and lot’s of interruptions throughout the day. Some roles require long lasting focus time to “go deep”. Sometimes roles have opposite objectives, e.g.&nbsp;implementing tasks perfectly vs.&nbsp;get tasks finished quickly. Uniting to many roles in the same person can case contradictions and harm the project progress.</p>
<p align="center">
<img src="https://joatom.github.io/blog/posts/2022-11-25-project-success/sand.png" class="img-fluid">
</p>
<p>As techie, do not assume that team members that are not actively writing code are a waste of resources. If you have a great analyst, you can code in lightning speed. If someone properly prepares the tasks for the upcoming sprint, you’ll save lots of time-consuming meetings. If you have a bouncer to talk to the stakeholders, you can stay focused.</p>
</section>
<section id="over-frameworkification" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Over-Frameworkification</h1>
<p><span style="color:lightblue"><strong>[SCOPE]</strong></span></p>
<p>Avoid complex project management frameworks and don’t be overly academic about them. The way you run a project should adapt your style of working and your companies culture.</p>
<p>Sometimes it can be helpful to start with an “academic” approach and adapt a framework for your purpose. But more important than religiously following a framework, is to understand, why a framework defines certain parts and how the parts interact with each other. If you understand why frameworks specify certain actions and roles it is easy to adjust it to your purpose.</p>
</section>
<section id="sec-outsourcing" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> Use Outsourcing</h1>
<p><span style="color:red"><strong>[PROCESS]</strong></span></p>
<p>Remove distractions to keep focused on the project. Delegate duties that are not related to the project to your manager. The manager can manage them. There is a reason why there is a work in progress (WiP) limit, it reduces setup time.</p>
<p align="center">
<img src="https://joatom.github.io/blog/posts/2022-11-25-project-success/wip.png" class="img-fluid">
</p>
<p>If there are tasks in your project that nobody is comfortable with, find someone who can do it. For example, your team is all technical, the stakeholders don’t understand your language and you also get exhausted following there jargon. Try to recruit somebody to do the communication, there are people who love doing that, your team will shine and you don’t get distracted doing your job.</p>
<p><span class="emoji" data-emoji="hammer">🔨</span>: Delegation, Work in Progress Limits, Recruiting</p>
</section>
<section id="sec-backlog" class="level1" data-number="10">
<h1 data-number="10"><span class="header-section-number">10</span> Keep a Backlog</h1>
<p><span style="color:lightblue"><strong>[SCOPE]</strong></span></p>
<p>Its easy to loose track about what still needs to be done in the future. Gather the tasks that come up, you can still throw them away, if they get useless. Consider to define a proper User Story (<em>Feature abc, for persona xyz, so that…</em>), so you don’t end up implementing nonsense.</p>
</section>
<section id="sec-prio" class="level1" data-number="11">
<h1 data-number="11"><span class="header-section-number">11</span> Prioritize and reevaluate</h1>
<p><span style="color:lightblue"><strong>[SCOPE]</strong></span></p>
<p>Planning is an ongoing process in a project. Prioritize important and critical tasks. Keep the big picture in mind. Reevaluate your priorizations regularly. Don’t forget to communicate your decisions.</p>
</section>
<section id="sec-feedback" class="level1" data-number="12">
<h1 data-number="12"><span class="header-section-number">12</span> Get regular Feedback</h1>
<p><span style="color:lightblue"><strong>[SCOPE]</strong></span></p>
<p>Transparency is your friend. You want a buy-in from all your stakeholders. You might get hints about issues, you wouldn’t come up on your own. You also distribute some accountability to the stakeholders. Extract tasks from the feedback and put it in the backlog. Reevaluate your prioritization.</p>
</section>
<section id="to-build-momentum-you-have-to-start-small" class="level1" data-number="13">
<h1 data-number="13"><span class="header-section-number">13</span> To build Momentum, you have to start small</h1>
<p><span style="color:red"><strong>[PROCESS]</strong></span></p>
<p>Imagine, the first project sessions are over and you have gathered way too many tasks and feature requests. For sure there will be more while the project proceeds. Say, you start your first planning session with these parameters:</p>
<ul>
<li>Project duration: 3 Months</li>
<li>Feature requests: 36</li>
<li>Sprint length: 2 weeks.</li>
</ul>
<p>At this point it is likely that one of the <strong>Epic-Project-Fails</strong> will gonna happen:</p>
<p><span class="emoji" data-emoji="hamster">🐹</span>: <em>36 features in 6 sprints? We have to built 6 features per sprint! Which 6 do we pick for sprint 1?</em></p>
<p><span class="emoji" data-emoji="goat">🐐</span>: <em>We have to pick at least 8, because there will be new tasks coming up along the way!</em></p>
<p>Now you have to be very strong because your arguments are very counter intuitive, if you haven’t worked through it and experienced it for many times. So remember your mantras:</p>
<ol type="1">
<li>You want to start your project with an success.</li>
<li>Your team is not properly formed yet and is certainly not riding this new project’s “wave”, yet.</li>
<li>You haven’t thought off every pitfall in advance. E.g. your devops environment might change and on-boarding takes longer as expected.</li>
<li>Be aware that humans think linearly not exponentially.</li>
</ol>
<p>Now, you should strongly insist on picking “only” 1-2 features for the first sprint! In case your team has an outstanding start and everything goes smooth, you still can grab an additional task throughout the sprint. Now, when you are all set and celebrate the success of the first sprint(s) you can gradually pick more task for the future sprints.</p>
<p><strong>You build up momentum.</strong></p>
<p align="center">
<img src="https://joatom.github.io/blog/posts/2022-11-25-project-success/momentum.png" class="img-fluid">
</p>
<p>Some new task will show up during the project and others will become obsolete and disappear. Stay focused and you will end up with an useful product after the three month. And whatever you end up with is exactly what three month of excellent work is worth it.</p>
</section>
<section id="define-measures-for-the-goal-not-the-spreadsheet" class="level1" data-number="14">
<h1 data-number="14"><span class="header-section-number">14</span> Define Measures for the Goal, not the Spreadsheet</h1>
<p><span style="color:red"><strong>[PROCESS]</strong></span></p>
<p>Don’t use story points!</p>
<p>If you are a software developer, you are in the creative business. If you do the same things over and over, you’ll eventually end up automating them (e.g.&nbsp;Templates, UnitTest, DevOps-Pipelines, …). Hence most of the time you’ll end up doing <em>new</em> things.</p>
<p>Very often story points are implicitly defined as a time slot. So you end up planing time slots. How do you properly estimate time for work you never did before? Right, very vaguely! You always end up with over or under estimates. But that is not the problem, yet.</p>
<p>The problem arises when you link the story points to budgets and personal/team goals.</p>
<ul>
<li><p>Personal/team goals:</p>
<p><span class="emoji" data-emoji="woman">👩</span>: <em>There are 3 more story points available for the next sprint. Which tasks should we add to the sprint?</em></p>
<p><span class="emoji" data-emoji="rabbit">🐰</span>: <em>Let’s squeeze in task xyz, it’s three <strong>easy</strong> story points.</em></p>
<p><span class="emoji" data-emoji="snail">🐌</span>: <em>Maybe task abc is <strong>not really</strong> 2 points, but rather 3 points, let’s take that one!</em></p>
<p>See, they are fooling themselves. Ok, can’t happen to you. Because you have a strict planning process where the story points are not renegotiated, when filling the sprint backlog. So your <strong>negotiation</strong> happens <em>before</em>, when estimating the story points? - Zero-sum. By the way, does anyone still want’s to work after 4 hours of “planning”/negotiating?</p></li>
<li><p>Budget:</p>
<p><span class="emoji" data-emoji="man">👨</span>: <em>Are you sure getting coffee for the team is only 1 story point? Add some buffer and make it 3, I don’t want endless discussions with the budgeting team why we are off the plan.</em></p>
<p>Once, again. They fooled themselves, and the budgeting team.</p></li>
</ul>
<p>At this point the <strong>agile mindset</strong> comes in handy: <em>fixed time</em>, <em>fixed resources</em>, <em>variable outcome</em>.</p>
<p><span class="emoji" data-emoji="boar">🐗</span>: <em>You agile folks are so naive. You need a budget to build your product. And you have to make a commitment and promise a certain outcome to get a budget.</em></p>
<ul>
<li>Naive?
<ul>
<li>No!</li>
</ul></li>
<li>Need a budged?
<ul>
<li>Yes!</li>
</ul></li>
<li>Make commitment?
<ul>
<li>Yes, we commit to give our blood, sweat and tears for the best possible outcome, given time and money.</li>
</ul></li>
<li>Promise certain outcome
<ul>
<li>We promise best possible outcome, given time and money. To archive this we are constantly reevaluating the project progress using full transparency, prioritizing and reevaluating and including regular feedback from stakeholders. This mitigates the risk for the person providing the budget.</li>
</ul></li>
</ul>
<p>If you have a healthy relationship and want to increase the currency of business you are willing to accept. It needs a lot of trust and the risk remains on the site that provides the budget and the decision makers. That’s where the risk belongs too.</p>
<p>What if you can’t convince the budget site to agree on an uncertain outcome? One possibility is to use outsourcing. There are many people who love to do communication. And very often there is a way to “spin” things so everybody looks (and sometimes even feels) like a winner. Stay focused on the project and leave politics to those who enjoy it.</p>
<p>Which measures to use instead? Define your measure as complexities rather than timely estimates. Some examples:</p>
<ul>
<li>Did we do something like this before? - Yes / No</li>
<li>Do others do this? - Yes / No</li>
<li>How clear is the request? - Shallow / crystal clear / to be defined</li>
<li>Will the expert be available to answer questions? - Sometimes / instant / on holiday</li>
<li>etc.</li>
</ul>
</section>
<section id="always-be-inclusive" class="level1" data-number="15">
<h1 data-number="15"><span class="header-section-number">15</span> Always be inclusive</h1>
<p><span style="color:green"><strong>[PEOPLE]</strong></span></p>
<p>How does it feel to be left out, when decisions are made that effect your tasks? What happens to the motivation of an expert, when the expert is not invited or ignored on discussion of their field?</p>
<p>In some case the excluded person feels transactional, they might think:</p>
<p><span class="emoji" data-emoji="expressionless">😑</span>: <em>Alright, I just do my job, don’t ask questions and take the money.</em></p>
<p>But it can also lead to self-doubt.</p>
<p><span class="emoji" data-emoji="confused">😕</span>: <em>I get mobbed. - My expertise is not as valuable as I thought. - I’m not making an impact.</em></p>
<p>Or result in a “THEY”-kind of thinking instead of “WE”.</p>
<p><span class="emoji" data-emoji="unamused">😒</span>: <em>They probably didn’t want to wast my time. - They try to hold me short. - They are stupid, anyway. - They can do their shit on their own.</em></p>
<p>It’s clear that exclusion leads to a decline of trust and loss of identification with the project.</p>
<p>If you want people to engage, you have to be inclusive. That doesn’t mean, I have to be involved in any decision at any time. But I want to have the chance to be involved in topics that are important to me and my work.</p>
<p>But what if you don’t want somebody else involved, like in the planning meeting example? The major part of the planning was done by very few people, to be more efficient. But why not add another person to be more inclusive.</p>
<p>Also, be nice to support stuff. a) It’s the right thing to do! b) It will come around. (Don’t you want the secretary to warn you, if it’s <em>“not a good time to knock on that door to ask for a favor”</em> and guess who doesn’t make it to the email distribution when you behave like a jerk.)</p>
</section>
<section id="let-outsiders-join-your-meetings" class="level1" data-number="16">
<h1 data-number="16"><span class="header-section-number">16</span> Let Outsiders join your Meetings</h1>
<p><span style="color:green"><strong>[PEOPLE]</strong></span></p>
<p>Consider to open your meetings to people outside of the project. Your company’s working culture could improve. You share ideas and might get some useful feedback from the visitors or insides by visiting others’ meetings.</p>
<p>If you fear to be disturbed by the outsiders during the meetings, just set up some rules (e.g.&nbsp;“Visitors shouldn’t actively participate. I’ll talk about your questions afterwards.” ).</p>
</section>
<section id="watch-for-breaks-and-needs" class="level1" data-number="17">
<h1 data-number="17"><span class="header-section-number">17</span> Watch for Breaks and Needs</h1>
<p><span style="color:green"><strong>[PEOPLE]</strong></span></p>
<p>If the project really goes well and people are in a flow, the chances are high that people loose track of their health (food, sleep and exercise) and their social well-being (family and friends).</p>
<p>We all love the flow! But be aware that you are running a marathon in a project and you still need power and support when situations in project occur that don’t go smoothly. Besides, you might put pressure on your mates when you are staying late every day.</p>
<p>If somebody drops out, it puts a huge burden on the project. You have to restuff, reorganize and eventually find back to the flow. You’ll lose focus in that time.</p>
</section>
<section id="celebrate" class="level1" data-number="18">
<h1 data-number="18"><span class="header-section-number">18</span> Celebrate <span class="emoji" data-emoji="tada">🎉</span></h1>
<p><span style="color:red"><strong>[PROCESS]</strong></span></p>
<p>If you reach certain milestones, celebrate! Even if the team is tired of the project and everybody is happy that it’s finally over. At least go out for lunch or dinner with the project mates.</p>
<p>There is nothing more hamsterwheelish than going from one project to the next one without a clear breaking event, such as a celebration.</p>
<p>It also effects your <em>currency of business</em>. Like the dentist, who gives candy to a kid after a dental session. It makes the kids come back again, with less fear.</p>
<p>Ending an exhausting project with a nice event is a psychological trick, too. Looking back, the last impression and feelings are those who stick later on.</p>


</section>

 ]]></description>
  <category>Project Management</category>
  <category>Business</category>
  <guid>https://joatom.github.io/blog/posts/2022-11-25-project-success/index.html</guid>
  <pubDate>Mon, 28 Nov 2022 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2022-11-25-project-success/board.png" medium="image" type="image/png" height="191" width="144"/>
</item>
<item>
  <title>Pay off Mortgage or Invest</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2022-11-13-repay-vs-invest/index.html</link>
  <description><![CDATA[ 




<p><a href="../../posts/2022-11-13-repay-vs-invest/index-de.html"><span class="emoji" data-emoji="de">🇩🇪</span></a> <a href="../../posts/2022-11-13-repay-vs-invest/index.html"><span class="emoji" data-emoji="us">🇺🇸</span></a></p>
<div class="callout-warning callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>Disclaimer:</strong> This blog post is not a financial advice! This is a toy example. This blog post is full of unrealistic assumption. All numbers are made up. Reach out to a professional financial advisor you trust, if you need financial advise. And most important, take a spreadsheet and do the math yourself with your numbers and your assumptions.</p>
</div>
</div>
<section id="a-tricky-question" class="level1">
<h1>A tricky question</h1>
<p>Last weekend I had a discussion about repaying a mortgage early or instead investing the money in a non-risky asset.</p>
<p><span class="emoji" data-emoji="man">👨</span>: <em>I just did an extra payment to reduce my mortgage.</em></p>
<p><span class="emoji" data-emoji="bust_in_silhouette">👤</span>: <em>How much is your interest rate?</em></p>
<p><span class="emoji" data-emoji="man">👨</span>: <em>2.5%</em> - again, numbers are made up</p>
<p><span class="emoji" data-emoji="bust_in_silhouette">👤</span>: <em>But didn’t you consider to invest the money instead. Even if you are risk averse, you would get 2.8% in a fixed deposit?</em></p>
<p><span class="emoji" data-emoji="man">👨</span>: <em>I thought about it. But it didn’t make sense.</em></p>
<p><span class="emoji" data-emoji="bust_in_silhouette">👤</span>: <em>But why? You would have gained 0.3% per year.</em></p>
<p>Who is right in this scenario? The answer is ambiguous.</p>
</section>
<section id="making-up-some-numbers" class="level1">
<h1>Making up some numbers</h1>
<p>Before we take it apart, let’s make up some numbers:</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">principal <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">100000</span> <span class="co" style="color: #5E5E5E;"># mortgage loan</span></span>
<span id="cb1-2">interest_rate <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.025</span> <span class="co" style="color: #5E5E5E;"># for the loan</span></span>
<span id="cb1-3">m_payment <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5000</span> <span class="co" style="color: #5E5E5E;"># yearly amount to pay for the mortgage (interest and principal)</span></span>
<span id="cb1-4">reference_rate <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.028</span> <span class="co" style="color: #5E5E5E;"># interest rate for the non-risky investment</span></span>
<span id="cb1-5">lump_sum <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">15000</span> <span class="co" style="color: #5E5E5E;"># money that can be invested or used to pay off the loan</span></span>
<span id="cb1-6">ls_year <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span> <span class="co" style="color: #5E5E5E;"># year when the lump sum is invested or used as an extra payment for the loan</span></span>
<span id="cb1-7">appreciation <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.02</span> <span class="co" style="color: #5E5E5E;">#  value gain of the house per year</span></span></code></pre></div>
</div>
<p>Besides, we make some assumption for the ease of interpretation.</p>
<ul>
<li>No fees, no taxes.</li>
<li>The yearly payment for the mortgage stayes the some.</li>
<li>As soon as the mortgage is payed off, the yearly payment stays the same and will be invested.</li>
<li>Interest rates for loan and investment are not changing during the entire time.</li>
<li>The lump sum can either be used to invest or to make an extra payment to reduce the loan.</li>
<li>The non-risky investment can’t be withdrawn before the house is payed of.</li>
<li>Interest income is being reinvested (accumulating).</li>
</ul>
<div class="callout-important callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>These assumptions are unrealistic and incomplete for a real live scenario. Also, changing the numbers can lead to other conclusions than those described in this blog post.</p>
</div>
</div>
</section>
<section id="the-simple-case" class="level1">
<h1>The simple case</h1>
<p>First, let’s have a look at the thoughts of <span class="emoji" data-emoji="bust_in_silhouette">👤</span>:</p>
<div class="cell" data-execution_count="6">
<div class="cell-output cell-output-display" data-execution_count="6">
<p>An extra payment towards the mortgage will reduces the amount I have to pay on interest every year by 2.50%. That’s a value gain of 2.50% each year.</p>
<p>If instead the money is invested in the fixed deposit with an interest rate of 2.80%, I had an value gain of 2.80% each year.</p>
<p><code>loan interest rate - reference rate = 2.50% - 2.80% = -0.30%</code></p>
<p>The investment has a yearly gain of 0.30% compared to the extra payment.</p>
<p>Both payments are compounding, as can be seen in the example:</p>
</div>
</div>
<div class="cell" data-tags="[]" data-execution_count="8">
<div class="cell-output cell-output-display" data-execution_count="8">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>Payment</th>
      <th>Interest savings through loan reduction</th>
      <th>Gains from investment</th>
      <th>Difference</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>15000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>375.0</td>
      <td>420.0</td>
      <td>45.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>759.0</td>
      <td>805.0</td>
      <td>46.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>0</td>
      <td>1153.0</td>
      <td>1201.0</td>
      <td>48.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>1557.0</td>
      <td>1606.0</td>
      <td>49.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>1971.0</td>
      <td>2021.0</td>
      <td>50.0</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<div class="cell" data-tags="[]" data-execution_count="9">
<div class="cell-output cell-output-display" data-execution_count="9">
<p>In this simple example we have a value gain of 50.0 € after the fifth year of investing the extra money compared to an extra payment for the loan.</p>
</div>
</div>
</section>
<section id="amortization-plan" class="level1">
<h1>Amortization plan</h1>
<p>Now let’s get familiar with the numbers and draw the entire amortization plan without extra payment or investments.</p>
<div class="cell" data-tags="[]" data-execution_count="11">
<div class="cell-output cell-output-display" data-execution_count="11">

<style type="text/css">
#T_adc23 th.row30 {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
}
#T_adc23 td.row30 {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
}
#T_adc23 table {
  border-spacing: 2px;
}
#T_adc23 thead {
  border: 1px solid gray;
}
#T_adc23 th {
  text-align: center;
  padding: 4.5px;
}
#T_adc23 th.col_heading {
  border: 1px solid gray;
}
#T_adc23 tbody {
  border: 1px solid gray;
}
#T_adc23 td {
  text-align: center;
  border-left: 1px solid gray;
  border-right: 1px solid gray;
}
#T_adc23_row0_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 48.0%, #cd8bc2 48.0%, #cd8bc2 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row1_col0, #T_adc23_row30_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ff0000 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row1_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #7fbf66 40.0%, transparent 40.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row1_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 48.8%, #cb8fc5 48.8%, #cb8fc5 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row2_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 2.0%, #ff0600 2.0%, #ff0600 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row2_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #7cbe66 41.0%, transparent 41.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row2_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 49.6%, #ca92c6 49.6%, #ca92c6 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row3_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 4.1%, #ff0c00 4.1%, #ff0c00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row3_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #79bc66 42.0%, transparent 42.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row3_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 50.5%, #ca96c8 50.5%, #ca96c8 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row4_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 6.2%, #ff1300 6.2%, #ff1300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row4_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #76bb66 43.1%, transparent 43.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row4_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 51.3%, #cb99ca 51.3%, #cb99ca 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row5_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 8.3%, #ff1a00 8.3%, #ff1a00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row5_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #72b866 44.2%, transparent 44.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row5_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 52.2%, #cc9dcc 52.2%, #cc9dcc 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row6_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 10.5%, #ff2100 10.5%, #ff2100 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row6_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #6fb766 45.3%, transparent 45.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row6_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 53.1%, #cc9fcd 53.1%, #cc9fcd 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row7_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.8%, #ff2800 12.8%, #ff2800 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row7_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #6bb566 46.4%, transparent 46.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row7_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 54.0%, #cda3cf 54.0%, #cda3cf 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row8_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 15.1%, #ff3000 15.1%, #ff3000 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row8_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #67b366 47.5%, transparent 47.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row8_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 55.0%, #cea6d0 55.0%, #cea6d0 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row9_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 17.5%, #ff3700 17.5%, #ff3700 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row9_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #64b266 48.7%, transparent 48.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row9_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 56.0%, #d0abd3 56.0%, #d0abd3 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row10_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 19.9%, #ff3f00 19.9%, #ff3f00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row10_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #60b066 50.0%, transparent 50.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row10_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 57.0%, #d1aed4 57.0%, #d1aed4 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row11_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 22.4%, #ff4700 22.4%, #ff4700 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row11_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #5cae66 51.2%, transparent 51.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row11_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 58.0%, #d2b2d6 58.0%, #d2b2d6 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row12_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 25.0%, #ff4f00 25.0%, #ff4f00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row12_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #58ac66 52.5%, transparent 52.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row12_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 59.0%, #d3b5d8 59.0%, #d3b5d8 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row13_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 27.6%, #ff5800 27.6%, #ff5800 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row13_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #53a966 53.8%, transparent 53.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row13_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 60.1%, #d4bada 60.1%, #d4bada 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row14_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 30.3%, #ff6000 30.3%, #ff6000 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row14_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #4fa766 55.1%, transparent 55.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row14_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 61.2%, #d6bedc 61.2%, #d6bedc 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row15_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 33.0%, #ff6900 33.0%, #ff6900 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row15_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #4ba566 56.5%, transparent 56.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row15_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 62.3%, #d9c3df 62.3%, #d9c3df 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row16_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 35.9%, #ff7200 35.9%, #ff7200 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row16_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #46a266 57.9%, transparent 57.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row16_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 63.5%, #dbc8e2 63.5%, #dbc8e2 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row17_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 38.8%, #ff7c00 38.8%, #ff7c00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row17_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #41a066 59.4%, transparent 59.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row17_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 64.7%, #ddcde4 64.7%, #ddcde4 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row18_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 41.7%, #ff8500 41.7%, #ff8500 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row18_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #3d9e66 60.9%, transparent 60.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row18_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 65.9%, #dfd1e6 65.9%, #dfd1e6 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row19_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 44.8%, #ff8f00 44.8%, #ff8f00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row19_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #389c66 62.4%, transparent 62.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row19_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 67.2%, #e2d6e9 67.2%, #e2d6e9 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row20_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 47.9%, #ff9900 47.9%, #ff9900 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row20_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #339966 63.9%, transparent 63.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row20_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 68.4%, #e4dbec 68.4%, #e4dbec 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row21_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 51.1%, #ffa300 51.1%, #ffa300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row21_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #2e9666 65.5%, transparent 65.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row21_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 69.7%, #e7e1ef 69.7%, #e7e1ef 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row22_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 54.4%, #ffad00 54.4%, #ffad00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row22_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #299466 67.2%, transparent 67.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row22_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 71.1%, #e9e3f0 71.1%, #e9e3f0 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row23_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 57.7%, #ffb800 57.7%, #ffb800 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row23_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #239166 68.9%, transparent 68.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row23_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 72.5%, #ebe6f1 72.5%, #ebe6f1 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row24_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 61.2%, #ffc300 61.2%, #ffc300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row24_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #1e8e66 70.6%, transparent 70.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row24_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 73.9%, #ede9f3 73.9%, #ede9f3 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row25_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 64.7%, #ffcf00 64.7%, #ffcf00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row25_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #188c66 72.3%, transparent 72.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row25_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 75.3%, #f0ecf5 75.3%, #f0ecf5 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row26_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 68.3%, #ffda00 68.3%, #ffda00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row26_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #128866 74.2%, transparent 74.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row26_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 76.8%, #f2eef6 76.8%, #f2eef6 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row27_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 72.0%, #ffe600 72.0%, #ffe600 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row27_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #0c8666 76.0%, transparent 76.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row27_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 78.3%, #f4f1f7 78.3%, #f4f1f7 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row28_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 75.8%, #fff200 75.8%, #fff200 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row28_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #068266 77.9%, transparent 77.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row28_col2 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 79.9%, #f7f4f9 79.9%, #f7f4f9 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row29_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 79.7%, #ffff00 79.7%, #ffff00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row29_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #eef666 5.6%, transparent 5.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_adc23_row29_col2, #T_adc23_row30_col2 {
  width: 80px;
  border-right: 1px solid gray;
}
#T_adc23_row30_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #008066 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
</style>
<table id="T_adc23">
  <thead>
    <tr>
      <th class="blank level0">&nbsp;</th>
      <th id="T_adc23_level0_col0" class="col_heading level0 col0">Interest</th>
      <th id="T_adc23_level0_col1" class="col_heading level0 col1">Principal</th>
      <th id="T_adc23_level0_col2" class="col_heading level0 col2">Loan Balance</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th id="T_adc23_level0_row0" class="row_heading level0 row0">0</th>
      <td id="T_adc23_row0_col0" class="data row0 col0"></td>
      <td id="T_adc23_row0_col1" class="data row0 col1"></td>
      <td id="T_adc23_row0_col2" class="data row0 col2">-100000</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row1" class="row_heading level0 row1">1</th>
      <td id="T_adc23_row1_col0" class="data row1 col0">-2500</td>
      <td id="T_adc23_row1_col1" class="data row1 col1">2500</td>
      <td id="T_adc23_row1_col2" class="data row1 col2">-97500</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row2" class="row_heading level0 row2">2</th>
      <td id="T_adc23_row2_col0" class="data row2 col0">-2438</td>
      <td id="T_adc23_row2_col1" class="data row2 col1">2562</td>
      <td id="T_adc23_row2_col2" class="data row2 col2">-94938</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row3" class="row_heading level0 row3">3</th>
      <td id="T_adc23_row3_col0" class="data row3 col0">-2373</td>
      <td id="T_adc23_row3_col1" class="data row3 col1">2627</td>
      <td id="T_adc23_row3_col2" class="data row3 col2">-92311</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row4" class="row_heading level0 row4">4</th>
      <td id="T_adc23_row4_col0" class="data row4 col0">-2308</td>
      <td id="T_adc23_row4_col1" class="data row4 col1">2692</td>
      <td id="T_adc23_row4_col2" class="data row4 col2">-89619</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row5" class="row_heading level0 row5">5</th>
      <td id="T_adc23_row5_col0" class="data row5 col0">-2240</td>
      <td id="T_adc23_row5_col1" class="data row5 col1">2760</td>
      <td id="T_adc23_row5_col2" class="data row5 col2">-86859</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row6" class="row_heading level0 row6">6</th>
      <td id="T_adc23_row6_col0" class="data row6 col0">-2171</td>
      <td id="T_adc23_row6_col1" class="data row6 col1">2829</td>
      <td id="T_adc23_row6_col2" class="data row6 col2">-84031</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row7" class="row_heading level0 row7">7</th>
      <td id="T_adc23_row7_col0" class="data row7 col0">-2101</td>
      <td id="T_adc23_row7_col1" class="data row7 col1">2899</td>
      <td id="T_adc23_row7_col2" class="data row7 col2">-81131</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row8" class="row_heading level0 row8">8</th>
      <td id="T_adc23_row8_col0" class="data row8 col0">-2028</td>
      <td id="T_adc23_row8_col1" class="data row8 col1">2972</td>
      <td id="T_adc23_row8_col2" class="data row8 col2">-78160</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row9" class="row_heading level0 row9">9</th>
      <td id="T_adc23_row9_col0" class="data row9 col0">-1954</td>
      <td id="T_adc23_row9_col1" class="data row9 col1">3046</td>
      <td id="T_adc23_row9_col2" class="data row9 col2">-75114</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row10" class="row_heading level0 row10">10</th>
      <td id="T_adc23_row10_col0" class="data row10 col0">-1878</td>
      <td id="T_adc23_row10_col1" class="data row10 col1">3122</td>
      <td id="T_adc23_row10_col2" class="data row10 col2">-71992</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row11" class="row_heading level0 row11">11</th>
      <td id="T_adc23_row11_col0" class="data row11 col0">-1800</td>
      <td id="T_adc23_row11_col1" class="data row11 col1">3200</td>
      <td id="T_adc23_row11_col2" class="data row11 col2">-68791</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row12" class="row_heading level0 row12">12</th>
      <td id="T_adc23_row12_col0" class="data row12 col0">-1720</td>
      <td id="T_adc23_row12_col1" class="data row12 col1">3280</td>
      <td id="T_adc23_row12_col2" class="data row12 col2">-65511</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row13" class="row_heading level0 row13">13</th>
      <td id="T_adc23_row13_col0" class="data row13 col0">-1638</td>
      <td id="T_adc23_row13_col1" class="data row13 col1">3362</td>
      <td id="T_adc23_row13_col2" class="data row13 col2">-62149</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row14" class="row_heading level0 row14">14</th>
      <td id="T_adc23_row14_col0" class="data row14 col0">-1554</td>
      <td id="T_adc23_row14_col1" class="data row14 col1">3446</td>
      <td id="T_adc23_row14_col2" class="data row14 col2">-58703</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row15" class="row_heading level0 row15">15</th>
      <td id="T_adc23_row15_col0" class="data row15 col0">-1468</td>
      <td id="T_adc23_row15_col1" class="data row15 col1">3532</td>
      <td id="T_adc23_row15_col2" class="data row15 col2">-55170</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row16" class="row_heading level0 row16">16</th>
      <td id="T_adc23_row16_col0" class="data row16 col0">-1379</td>
      <td id="T_adc23_row16_col1" class="data row16 col1">3621</td>
      <td id="T_adc23_row16_col2" class="data row16 col2">-51549</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row17" class="row_heading level0 row17">17</th>
      <td id="T_adc23_row17_col0" class="data row17 col0">-1289</td>
      <td id="T_adc23_row17_col1" class="data row17 col1">3711</td>
      <td id="T_adc23_row17_col2" class="data row17 col2">-47838</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row18" class="row_heading level0 row18">18</th>
      <td id="T_adc23_row18_col0" class="data row18 col0">-1196</td>
      <td id="T_adc23_row18_col1" class="data row18 col1">3804</td>
      <td id="T_adc23_row18_col2" class="data row18 col2">-44034</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row19" class="row_heading level0 row19">19</th>
      <td id="T_adc23_row19_col0" class="data row19 col0">-1101</td>
      <td id="T_adc23_row19_col1" class="data row19 col1">3899</td>
      <td id="T_adc23_row19_col2" class="data row19 col2">-40135</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row20" class="row_heading level0 row20">20</th>
      <td id="T_adc23_row20_col0" class="data row20 col0">-1003</td>
      <td id="T_adc23_row20_col1" class="data row20 col1">3997</td>
      <td id="T_adc23_row20_col2" class="data row20 col2">-36138</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row21" class="row_heading level0 row21">21</th>
      <td id="T_adc23_row21_col0" class="data row21 col0">-903</td>
      <td id="T_adc23_row21_col1" class="data row21 col1">4097</td>
      <td id="T_adc23_row21_col2" class="data row21 col2">-32042</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row22" class="row_heading level0 row22">22</th>
      <td id="T_adc23_row22_col0" class="data row22 col0">-801</td>
      <td id="T_adc23_row22_col1" class="data row22 col1">4199</td>
      <td id="T_adc23_row22_col2" class="data row22 col2">-27843</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row23" class="row_heading level0 row23">23</th>
      <td id="T_adc23_row23_col0" class="data row23 col0">-696</td>
      <td id="T_adc23_row23_col1" class="data row23 col1">4304</td>
      <td id="T_adc23_row23_col2" class="data row23 col2">-23539</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row24" class="row_heading level0 row24">24</th>
      <td id="T_adc23_row24_col0" class="data row24 col0">-588</td>
      <td id="T_adc23_row24_col1" class="data row24 col1">4412</td>
      <td id="T_adc23_row24_col2" class="data row24 col2">-19127</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row25" class="row_heading level0 row25">25</th>
      <td id="T_adc23_row25_col0" class="data row25 col0">-478</td>
      <td id="T_adc23_row25_col1" class="data row25 col1">4522</td>
      <td id="T_adc23_row25_col2" class="data row25 col2">-14606</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row26" class="row_heading level0 row26">26</th>
      <td id="T_adc23_row26_col0" class="data row26 col0">-365</td>
      <td id="T_adc23_row26_col1" class="data row26 col1">4635</td>
      <td id="T_adc23_row26_col2" class="data row26 col2">-9971</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row27" class="row_heading level0 row27">27</th>
      <td id="T_adc23_row27_col0" class="data row27 col0">-249</td>
      <td id="T_adc23_row27_col1" class="data row27 col1">4751</td>
      <td id="T_adc23_row27_col2" class="data row27 col2">-5220</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row28" class="row_heading level0 row28">28</th>
      <td id="T_adc23_row28_col0" class="data row28 col0">-130</td>
      <td id="T_adc23_row28_col1" class="data row28 col1">4870</td>
      <td id="T_adc23_row28_col2" class="data row28 col2">-350</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row29" class="row_heading level0 row29">29</th>
      <td id="T_adc23_row29_col0" class="data row29 col0">-9</td>
      <td id="T_adc23_row29_col1" class="data row29 col1">350</td>
      <td id="T_adc23_row29_col2" class="data row29 col2">0</td>
    </tr>
    <tr>
      <th id="T_adc23_level0_row30" class="row_heading level0 row30">Total:</th>
      <td id="T_adc23_row30_col0" class="data row30 col0">-40359</td>
      <td id="T_adc23_row30_col1" class="data row30 col1">100000</td>
      <td id="T_adc23_row30_col2" class="data row30 col2">0</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<div class="cell" data-tags="[]" data-execution_count="12">
<div class="cell-output cell-output-display" data-execution_count="12">
<p>With a yearly fixed payment of 5,000 € the mortgage of 100,000 € will be payed of after 29 years. The amount of interest paid for the loan is 40,359 €</p>
</div>
</div>
<p>The amortization schedule nicely shows how the interest decreases and principal increases over time.</p>
</section>
<section id="investment-payment" class="level1">
<h1>Investment payment</h1>
<p>Next, we extend the amortization plan with columns for</p>
<ul>
<li>Extra payment for the loan</li>
<li>Payment on investment</li>
<li>Compounding balance for investment</li>
<li>Appreciation of the principal payed sofar</li>
<li>The Net Worth (<em>asset values - liabilities</em>)</li>
<li>The Net Worth including appreciation</li>
</ul>
<p>In the first scenario we <strong>invest</strong> the lump sum.</p>
<div class="cell" data-tags="[]" data-execution_count="14">
<div class="cell-output cell-output-display">

<style type="text/css">
#T_02cd2 th.row30 {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
}
#T_02cd2 td.row30 {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
}
#T_02cd2 table {
  border-spacing: 2px;
}
#T_02cd2 thead {
  border: 1px solid gray;
}
#T_02cd2 th {
  text-align: center;
  padding: 4.5px;
}
#T_02cd2 th.col_heading {
  border: 1px solid gray;
}
#T_02cd2 tbody {
  border: 1px solid gray;
}
#T_02cd2 td {
  text-align: center;
  border-left: 1px solid gray;
  border-right: 1px solid gray;
}
#T_02cd2 th.col5 {
  border-right: 1px solid gray;
}
#T_02cd2 td.col5 {
  border-right: 1px solid gray;
}
#T_02cd2_row0_col2, #T_02cd2_row0_col4, #T_02cd2_row0_col5, #T_02cd2_row1_col2, #T_02cd2_row1_col4, #T_02cd2_row1_col5, #T_02cd2_row2_col2, #T_02cd2_row3_col2, #T_02cd2_row3_col4, #T_02cd2_row4_col2, #T_02cd2_row4_col4, #T_02cd2_row5_col2, #T_02cd2_row5_col4, #T_02cd2_row6_col2, #T_02cd2_row6_col4, #T_02cd2_row7_col2, #T_02cd2_row7_col4, #T_02cd2_row8_col2, #T_02cd2_row8_col4, #T_02cd2_row9_col2, #T_02cd2_row9_col4, #T_02cd2_row10_col2, #T_02cd2_row10_col4, #T_02cd2_row11_col2, #T_02cd2_row11_col4, #T_02cd2_row12_col2, #T_02cd2_row12_col4, #T_02cd2_row13_col2, #T_02cd2_row13_col4, #T_02cd2_row14_col2, #T_02cd2_row14_col4, #T_02cd2_row15_col2, #T_02cd2_row15_col4, #T_02cd2_row16_col2, #T_02cd2_row16_col4, #T_02cd2_row17_col2, #T_02cd2_row17_col4, #T_02cd2_row18_col2, #T_02cd2_row18_col4, #T_02cd2_row19_col2, #T_02cd2_row19_col4, #T_02cd2_row20_col2, #T_02cd2_row20_col4, #T_02cd2_row21_col2, #T_02cd2_row21_col4, #T_02cd2_row22_col2, #T_02cd2_row22_col4, #T_02cd2_row23_col2, #T_02cd2_row23_col4, #T_02cd2_row24_col2, #T_02cd2_row24_col4, #T_02cd2_row25_col2, #T_02cd2_row25_col4, #T_02cd2_row26_col2, #T_02cd2_row26_col4, #T_02cd2_row27_col2, #T_02cd2_row27_col4, #T_02cd2_row28_col2, #T_02cd2_row28_col4, #T_02cd2_row29_col2, #T_02cd2_row29_col3, #T_02cd2_row30_col2, #T_02cd2_row30_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
}
#T_02cd2_row0_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 60.0%, #cd8bc2 60.0%, #cd8bc2 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row0_col6, #T_02cd2_row0_col7, #T_02cd2_row0_col8 {
  width: 80px;
  border-right: 1px solid gray;
}
#T_02cd2_row1_col0, #T_02cd2_row30_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ff0000 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row1_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #7fbf66 40.0%, transparent 40.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row1_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 61.0%, #cb8fc5 61.0%, #cb8fc5 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row1_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f7fbff 0.0%, transparent 0.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row1_col7, #T_02cd2_row1_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f5fafe 1.0%, transparent 1.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row2_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 2.0%, #ff0600 2.0%, #ff0600 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row2_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #7cbe66 41.0%, transparent 41.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row2_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 62.0%, #ca92c6 62.0%, #ca92c6 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row2_col4, #T_02cd2_row30_col4 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #008066 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row2_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #ebf3fb 6.0%, transparent 6.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row2_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f7fbff 0.1%, transparent 0.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row2_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e7f1fa 8.0%, transparent 8.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row2_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e7f1fa 8.1%, transparent 8.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row3_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 4.1%, #ff0c00 4.1%, #ff0c00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row3_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #79bc66 42.0%, transparent 42.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row3_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 63.1%, #ca96c8 63.1%, #ca96c8 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row3_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #ebf3fb 6.2%, transparent 6.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row3_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f7fbff 0.2%, transparent 0.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row3_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e5eff9 9.2%, transparent 9.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row3_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e4eff9 9.4%, transparent 9.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row4_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 6.2%, #ff1300 6.2%, #ff1300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row4_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #76bb66 43.1%, transparent 43.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row4_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 64.2%, #cb99ca 64.2%, #cb99ca 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row4_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #eaf3fb 6.3%, transparent 6.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row4_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f7fbff 0.3%, transparent 0.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row4_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e3eef8 10.5%, transparent 10.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row4_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e2edf8 10.8%, transparent 10.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row5_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 8.3%, #ff1a00 8.3%, #ff1a00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row5_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #72b866 44.2%, transparent 44.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row5_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 65.3%, #cc9dcc 65.3%, #cc9dcc 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row5_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #eaf3fb 6.5%, transparent 6.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row5_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f6faff 0.5%, transparent 0.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row5_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dfecf7 11.8%, transparent 11.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row5_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dfebf7 12.3%, transparent 12.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row6_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 10.5%, #ff2100 10.5%, #ff2100 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row6_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #6fb766 45.3%, transparent 45.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row6_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 66.4%, #cc9fcd 66.4%, #cc9fcd 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row6_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #eaf2fb 6.7%, transparent 6.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row6_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f5fafe 0.8%, transparent 0.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row6_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ddeaf7 13.1%, transparent 13.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row6_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dce9f6 13.9%, transparent 13.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row7_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.8%, #ff2800 12.8%, #ff2800 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row7_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #6bb566 46.4%, transparent 46.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row7_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 67.5%, #cda3cf 67.5%, #cda3cf 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row7_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #eaf2fb 6.9%, transparent 6.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row7_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f5fafe 1.1%, transparent 1.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row7_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dbe9f6 14.4%, transparent 14.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row7_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d9e7f5 15.6%, transparent 15.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row8_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 15.1%, #ff3000 15.1%, #ff3000 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row8_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #67b366 47.5%, transparent 47.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row8_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 68.7%, #cea6d0 68.7%, #cea6d0 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row8_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e9f2fa 7.1%, transparent 7.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row8_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f5f9fe 1.5%, transparent 1.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row8_col7, #T_02cd2_row22_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d8e7f5 15.8%, transparent 15.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row8_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d5e5f4 17.3%, transparent 17.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row9_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 17.5%, #ff3700 17.5%, #ff3700 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row9_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #64b266 48.7%, transparent 48.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row9_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 70.0%, #d0abd3 70.0%, #d0abd3 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row9_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e9f2fa 7.3%, transparent 7.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row9_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f4f9fe 1.9%, transparent 1.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row9_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d5e5f4 17.2%, transparent 17.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row9_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d1e2f3 19.2%, transparent 19.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row10_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 19.9%, #ff3f00 19.9%, #ff3f00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row10_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #60b066 50.0%, transparent 50.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row10_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 71.2%, #d1aed4 71.2%, #d1aed4 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row10_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e8f1fa 7.5%, transparent 7.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row10_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f2f8fd 2.5%, transparent 2.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row10_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d3e3f3 18.7%, transparent 18.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row10_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #cde0f1 21.1%, transparent 21.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row11_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 22.4%, #ff4700 22.4%, #ff4700 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row11_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #5cae66 51.2%, transparent 51.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row11_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 72.5%, #d2b2d6 72.5%, #d2b2d6 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row11_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e8f1fa 7.7%, transparent 7.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row11_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f2f7fd 3.0%, transparent 3.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row11_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d0e1f2 20.2%, transparent 20.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row11_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #caddf0 23.2%, transparent 23.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row12_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 25.0%, #ff4f00 25.0%, #ff4f00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row12_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #58ac66 52.5%, transparent 52.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row12_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 73.8%, #d3b5d8 73.8%, #d3b5d8 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row12_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e7f1fa 7.9%, transparent 7.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row12_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f0f6fd 3.7%, transparent 3.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row12_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #cddff1 21.7%, transparent 21.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row12_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c4daee 25.4%, transparent 25.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row13_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 27.6%, #ff5800 27.6%, #ff5800 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row13_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #53a966 53.8%, transparent 53.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row13_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 75.1%, #d4bada 75.1%, #d4bada 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row13_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e7f1fa 8.1%, transparent 8.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row13_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #eef5fc 4.4%, transparent 4.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row13_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #caddf0 23.3%, transparent 23.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row13_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #bed8ec 27.7%, transparent 27.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row14_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 30.3%, #ff6000 30.3%, #ff6000 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row14_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #4fa766 55.1%, transparent 55.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row14_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 76.5%, #d6bedc 76.5%, #d6bedc 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row14_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e7f0fa 8.4%, transparent 8.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row14_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #edf4fc 5.3%, transparent 5.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row14_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c7dbef 24.9%, transparent 24.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row14_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b5d4e9 30.2%, transparent 30.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row15_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 33.0%, #ff6900 33.0%, #ff6900 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row15_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #4ba566 56.5%, transparent 56.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row15_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 77.9%, #d9c3df 77.9%, #d9c3df 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row15_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e7f0fa 8.6%, transparent 8.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row15_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ebf3fb 6.2%, transparent 6.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row15_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c2d9ee 26.5%, transparent 26.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row15_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #aed1e7 32.7%, transparent 32.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row16_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 35.9%, #ff7200 35.9%, #ff7200 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row16_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #46a266 57.9%, transparent 57.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row16_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 79.4%, #dbc8e2 79.4%, #dbc8e2 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row16_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e6f0f9 8.8%, transparent 8.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row16_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e9f2fa 7.2%, transparent 7.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row16_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #bcd7eb 28.2%, transparent 28.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row16_col8, #T_02cd2_row20_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #a5cde3 35.4%, transparent 35.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row17_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 38.8%, #ff7c00 38.8%, #ff7c00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row17_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #41a066 59.4%, transparent 59.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row17_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 80.9%, #ddcde4 80.9%, #ddcde4 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row17_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e5eff9 9.1%, transparent 9.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row17_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e7f0fa 8.4%, transparent 8.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row17_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b7d4ea 29.9%, transparent 29.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row17_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #9ac8e0 38.3%, transparent 38.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row18_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 41.7%, #ff8500 41.7%, #ff8500 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row18_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #3d9e66 60.9%, transparent 60.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row18_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 82.4%, #dfd1e6 82.4%, #dfd1e6 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row18_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e5eff9 9.3%, transparent 9.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row18_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e4eff9 9.6%, transparent 9.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row18_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b0d2e7 31.7%, transparent 31.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row18_col8, #T_02cd2_row23_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #8fc2de 41.3%, transparent 41.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row19_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 44.8%, #ff8f00 44.8%, #ff8f00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row19_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #389c66 62.4%, transparent 62.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row19_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 83.9%, #e2d6e9 83.9%, #e2d6e9 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row19_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e4eff9 9.6%, transparent 9.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row19_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e1edf8 10.9%, transparent 10.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row19_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #abd0e6 33.5%, transparent 33.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row19_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #82bbdb 44.5%, transparent 44.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row20_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 47.9%, #ff9900 47.9%, #ff9900 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row20_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #339966 63.9%, transparent 63.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row20_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 85.5%, #e4dbec 85.5%, #e4dbec 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row20_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e3eef9 9.9%, transparent 9.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row20_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dfebf7 12.4%, transparent 12.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row20_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #74b3d8 47.8%, transparent 47.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row21_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 51.1%, #ffa300 51.1%, #ffa300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row21_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #2e9666 65.5%, transparent 65.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row21_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 87.2%, #e7e1ef 87.2%, #e7e1ef 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row21_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e3eef9 10.1%, transparent 10.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row21_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dce9f6 14.0%, transparent 14.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row21_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #9fcae1 37.3%, transparent 37.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row21_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #66abd4 51.3%, transparent 51.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row22_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 54.4%, #ffad00 54.4%, #ffad00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row22_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #299466 67.2%, transparent 67.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row22_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 88.9%, #e9e3f0 88.9%, #e9e3f0 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row22_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e3eef8 10.4%, transparent 10.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row22_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #97c6df 39.3%, transparent 39.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row22_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #5ba3d0 55.0%, transparent 55.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row23_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 57.7%, #ffb800 57.7%, #ffb800 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row23_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #239166 68.9%, transparent 68.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row23_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 90.6%, #ebe6f1 90.6%, #ebe6f1 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row23_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e2edf8 10.7%, transparent 10.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row23_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d4e4f4 17.6%, transparent 17.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row23_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #4e9acb 58.9%, transparent 58.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row24_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 61.2%, #ffc300 61.2%, #ffc300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row24_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #1e8e66 70.6%, transparent 70.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row24_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 92.3%, #ede9f3 92.3%, #ede9f3 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row24_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e1edf8 11.0%, transparent 11.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row24_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d0e2f2 19.7%, transparent 19.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row24_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #85bcdc 43.4%, transparent 43.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row24_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #4090c5 63.0%, transparent 63.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row25_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 64.7%, #ffcf00 64.7%, #ffcf00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row25_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #188c66 72.3%, transparent 72.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row25_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 94.2%, #f0ecf5 94.2%, #f0ecf5 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row25_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e1edf8 11.3%, transparent 11.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row25_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ccdff1 21.9%, transparent 21.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row25_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #7db8da 45.5%, transparent 45.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row25_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #3585bf 67.4%, transparent 67.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row26_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 68.3%, #ffda00 68.3%, #ffda00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row26_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #128866 74.2%, transparent 74.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row26_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 96.0%, #f2eef6 96.0%, #f2eef6 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row26_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e0ecf8 11.6%, transparent 11.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row26_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c7dcef 24.3%, transparent 24.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row26_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #75b4d8 47.7%, transparent 47.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row26_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #2979b9 71.9%, transparent 71.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row27_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 72.0%, #ffe600 72.0%, #ffe600 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row27_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #0c8666 76.0%, transparent 76.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row27_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 97.9%, #f4f1f7 97.9%, #f4f1f7 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row27_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #dfecf7 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row27_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c1d9ed 26.8%, transparent 26.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row27_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #6caed6 49.9%, transparent 49.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row27_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #1d6cb1 76.7%, transparent 76.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row28_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 75.8%, #fff200 75.8%, #fff200 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row28_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #068266 77.9%, transparent 77.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row28_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 99.9%, #f7f4f9 99.9%, #f7f4f9 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row28_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #dfebf7 12.3%, transparent 12.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row28_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b8d5ea 29.5%, transparent 29.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row28_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #64a9d3 52.2%, transparent 52.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row28_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #135fa7 81.7%, transparent 81.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row29_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 79.7%, #ffff00 79.7%, #ffff00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row29_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #eef666 5.6%, transparent 5.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row29_col4 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #b0d866 24.8%, transparent 24.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row29_col5, #T_02cd2_row30_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #dae8f6 14.5%, transparent 14.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row29_col6, #T_02cd2_row30_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b3d3e8 31.0%, transparent 31.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row29_col7, #T_02cd2_row30_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #5ca4d0 54.5%, transparent 54.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row29_col8, #T_02cd2_row30_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #0c56a0 85.5%, transparent 85.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_02cd2_row30_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #008066 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
</style>
<table id="T_02cd2">
  <thead>
    <tr>
      <th class="index_name level0"></th>
      <th id="T_02cd2_level0_col0" class="col_heading level0 col0" colspan="4">Mortgage</th>
      <th id="T_02cd2_level0_col4" class="col_heading level0 col4" colspan="2">Investment</th>
      <th id="T_02cd2_level0_col6" class="col_heading level0 col6">Appreciation</th>
      <th id="T_02cd2_level0_col7" class="col_heading level0 col7" colspan="2">Net Worth</th>
    </tr>
    <tr>
      <th class="index_name level1">Year</th>
      <th id="T_02cd2_level1_col0" class="col_heading level1 col0">Interest</th>
      <th id="T_02cd2_level1_col1" class="col_heading level1 col1">Principal</th>
      <th id="T_02cd2_level1_col2" class="col_heading level1 col2">Extra Payment</th>
      <th id="T_02cd2_level1_col3" class="col_heading level1 col3">Loan Balance</th>
      <th id="T_02cd2_level1_col4" class="col_heading level1 col4">Payment</th>
      <th id="T_02cd2_level1_col5" class="col_heading level1 col5">Balance</th>
      <th id="T_02cd2_level1_col6" class="col_heading level1 col6">Balance</th>
      <th id="T_02cd2_level1_col7" class="col_heading level1 col7">w/o appr.</th>
      <th id="T_02cd2_level1_col8" class="col_heading level1 col8">with appr.</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th id="T_02cd2_level0_row0" class="row_heading level0 row0">0</th>
      <td id="T_02cd2_row0_col0" class="data row0 col0"></td>
      <td id="T_02cd2_row0_col1" class="data row0 col1"></td>
      <td id="T_02cd2_row0_col2" class="data row0 col2"></td>
      <td id="T_02cd2_row0_col3" class="data row0 col3">-100000</td>
      <td id="T_02cd2_row0_col4" class="data row0 col4"></td>
      <td id="T_02cd2_row0_col5" class="data row0 col5">0</td>
      <td id="T_02cd2_row0_col6" class="data row0 col6"></td>
      <td id="T_02cd2_row0_col7" class="data row0 col7">0</td>
      <td id="T_02cd2_row0_col8" class="data row0 col8"></td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row1" class="row_heading level0 row1">1</th>
      <td id="T_02cd2_row1_col0" class="data row1 col0">-2500</td>
      <td id="T_02cd2_row1_col1" class="data row1 col1">2500</td>
      <td id="T_02cd2_row1_col2" class="data row1 col2">0</td>
      <td id="T_02cd2_row1_col3" class="data row1 col3">-97500</td>
      <td id="T_02cd2_row1_col4" class="data row1 col4">0</td>
      <td id="T_02cd2_row1_col5" class="data row1 col5">0</td>
      <td id="T_02cd2_row1_col6" class="data row1 col6">50</td>
      <td id="T_02cd2_row1_col7" class="data row1 col7">2500</td>
      <td id="T_02cd2_row1_col8" class="data row1 col8">2550</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row2" class="row_heading level0 row2">2</th>
      <td id="T_02cd2_row2_col0" class="data row2 col0">-2438</td>
      <td id="T_02cd2_row2_col1" class="data row2 col1">2562</td>
      <td id="T_02cd2_row2_col2" class="data row2 col2">0</td>
      <td id="T_02cd2_row2_col3" class="data row2 col3">-94938</td>
      <td id="T_02cd2_row2_col4" class="data row2 col4">15000</td>
      <td id="T_02cd2_row2_col5" class="data row2 col5">15000</td>
      <td id="T_02cd2_row2_col6" class="data row2 col6">205</td>
      <td id="T_02cd2_row2_col7" class="data row2 col7">20062</td>
      <td id="T_02cd2_row2_col8" class="data row2 col8">20267</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row3" class="row_heading level0 row3">3</th>
      <td id="T_02cd2_row3_col0" class="data row3 col0">-2373</td>
      <td id="T_02cd2_row3_col1" class="data row3 col1">2627</td>
      <td id="T_02cd2_row3_col2" class="data row3 col2">0</td>
      <td id="T_02cd2_row3_col3" class="data row3 col3">-92311</td>
      <td id="T_02cd2_row3_col4" class="data row3 col4">0</td>
      <td id="T_02cd2_row3_col5" class="data row3 col5">15420</td>
      <td id="T_02cd2_row3_col6" class="data row3 col6">471</td>
      <td id="T_02cd2_row3_col7" class="data row3 col7">23109</td>
      <td id="T_02cd2_row3_col8" class="data row3 col8">23580</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row4" class="row_heading level0 row4">4</th>
      <td id="T_02cd2_row4_col0" class="data row4 col0">-2308</td>
      <td id="T_02cd2_row4_col1" class="data row4 col1">2692</td>
      <td id="T_02cd2_row4_col2" class="data row4 col2">0</td>
      <td id="T_02cd2_row4_col3" class="data row4 col3">-89619</td>
      <td id="T_02cd2_row4_col4" class="data row4 col4">0</td>
      <td id="T_02cd2_row4_col5" class="data row4 col5">15852</td>
      <td id="T_02cd2_row4_col6" class="data row4 col6">856</td>
      <td id="T_02cd2_row4_col7" class="data row4 col7">26233</td>
      <td id="T_02cd2_row4_col8" class="data row4 col8">27089</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row5" class="row_heading level0 row5">5</th>
      <td id="T_02cd2_row5_col0" class="data row5 col0">-2240</td>
      <td id="T_02cd2_row5_col1" class="data row5 col1">2760</td>
      <td id="T_02cd2_row5_col2" class="data row5 col2">0</td>
      <td id="T_02cd2_row5_col3" class="data row5 col3">-86859</td>
      <td id="T_02cd2_row5_col4" class="data row5 col4">0</td>
      <td id="T_02cd2_row5_col5" class="data row5 col5">16296</td>
      <td id="T_02cd2_row5_col6" class="data row5 col6">1368</td>
      <td id="T_02cd2_row5_col7" class="data row5 col7">29436</td>
      <td id="T_02cd2_row5_col8" class="data row5 col8">30804</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row6" class="row_heading level0 row6">6</th>
      <td id="T_02cd2_row6_col0" class="data row6 col0">-2171</td>
      <td id="T_02cd2_row6_col1" class="data row6 col1">2829</td>
      <td id="T_02cd2_row6_col2" class="data row6 col2">0</td>
      <td id="T_02cd2_row6_col3" class="data row6 col3">-84031</td>
      <td id="T_02cd2_row6_col4" class="data row6 col4">0</td>
      <td id="T_02cd2_row6_col5" class="data row6 col5">16752</td>
      <td id="T_02cd2_row6_col6" class="data row6 col6">2015</td>
      <td id="T_02cd2_row6_col7" class="data row6 col7">32721</td>
      <td id="T_02cd2_row6_col8" class="data row6 col8">34736</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row7" class="row_heading level0 row7">7</th>
      <td id="T_02cd2_row7_col0" class="data row7 col0">-2101</td>
      <td id="T_02cd2_row7_col1" class="data row7 col1">2899</td>
      <td id="T_02cd2_row7_col2" class="data row7 col2">0</td>
      <td id="T_02cd2_row7_col3" class="data row7 col3">-81131</td>
      <td id="T_02cd2_row7_col4" class="data row7 col4">0</td>
      <td id="T_02cd2_row7_col5" class="data row7 col5">17221</td>
      <td id="T_02cd2_row7_col6" class="data row7 col6">2805</td>
      <td id="T_02cd2_row7_col7" class="data row7 col7">36090</td>
      <td id="T_02cd2_row7_col8" class="data row7 col8">38895</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row8" class="row_heading level0 row8">8</th>
      <td id="T_02cd2_row8_col0" class="data row8 col0">-2028</td>
      <td id="T_02cd2_row8_col1" class="data row8 col1">2972</td>
      <td id="T_02cd2_row8_col2" class="data row8 col2">0</td>
      <td id="T_02cd2_row8_col3" class="data row8 col3">-78160</td>
      <td id="T_02cd2_row8_col4" class="data row8 col4">0</td>
      <td id="T_02cd2_row8_col5" class="data row8 col5">17703</td>
      <td id="T_02cd2_row8_col6" class="data row8 col6">3749</td>
      <td id="T_02cd2_row8_col7" class="data row8 col7">39543</td>
      <td id="T_02cd2_row8_col8" class="data row8 col8">43293</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row9" class="row_heading level0 row9">9</th>
      <td id="T_02cd2_row9_col0" class="data row9 col0">-1954</td>
      <td id="T_02cd2_row9_col1" class="data row9 col1">3046</td>
      <td id="T_02cd2_row9_col2" class="data row9 col2">0</td>
      <td id="T_02cd2_row9_col3" class="data row9 col3">-75114</td>
      <td id="T_02cd2_row9_col4" class="data row9 col4">0</td>
      <td id="T_02cd2_row9_col5" class="data row9 col5">18199</td>
      <td id="T_02cd2_row9_col6" class="data row9 col6">4855</td>
      <td id="T_02cd2_row9_col7" class="data row9 col7">43085</td>
      <td id="T_02cd2_row9_col8" class="data row9 col8">47940</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row10" class="row_heading level0 row10">10</th>
      <td id="T_02cd2_row10_col0" class="data row10 col0">-1878</td>
      <td id="T_02cd2_row10_col1" class="data row10 col1">3122</td>
      <td id="T_02cd2_row10_col2" class="data row10 col2">0</td>
      <td id="T_02cd2_row10_col3" class="data row10 col3">-71992</td>
      <td id="T_02cd2_row10_col4" class="data row10 col4">0</td>
      <td id="T_02cd2_row10_col5" class="data row10 col5">18708</td>
      <td id="T_02cd2_row10_col6" class="data row10 col6">6134</td>
      <td id="T_02cd2_row10_col7" class="data row10 col7">46717</td>
      <td id="T_02cd2_row10_col8" class="data row10 col8">52851</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row11" class="row_heading level0 row11">11</th>
      <td id="T_02cd2_row11_col0" class="data row11 col0">-1800</td>
      <td id="T_02cd2_row11_col1" class="data row11 col1">3200</td>
      <td id="T_02cd2_row11_col2" class="data row11 col2">0</td>
      <td id="T_02cd2_row11_col3" class="data row11 col3">-68791</td>
      <td id="T_02cd2_row11_col4" class="data row11 col4">0</td>
      <td id="T_02cd2_row11_col5" class="data row11 col5">19232</td>
      <td id="T_02cd2_row11_col6" class="data row11 col6">7595</td>
      <td id="T_02cd2_row11_col7" class="data row11 col7">50441</td>
      <td id="T_02cd2_row11_col8" class="data row11 col8">58036</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row12" class="row_heading level0 row12">12</th>
      <td id="T_02cd2_row12_col0" class="data row12 col0">-1720</td>
      <td id="T_02cd2_row12_col1" class="data row12 col1">3280</td>
      <td id="T_02cd2_row12_col2" class="data row12 col2">0</td>
      <td id="T_02cd2_row12_col3" class="data row12 col3">-65511</td>
      <td id="T_02cd2_row12_col4" class="data row12 col4">0</td>
      <td id="T_02cd2_row12_col5" class="data row12 col5">19771</td>
      <td id="T_02cd2_row12_col6" class="data row12 col6">9251</td>
      <td id="T_02cd2_row12_col7" class="data row12 col7">54260</td>
      <td id="T_02cd2_row12_col8" class="data row12 col8">63511</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row13" class="row_heading level0 row13">13</th>
      <td id="T_02cd2_row13_col0" class="data row13 col0">-1638</td>
      <td id="T_02cd2_row13_col1" class="data row13 col1">3362</td>
      <td id="T_02cd2_row13_col2" class="data row13 col2">0</td>
      <td id="T_02cd2_row13_col3" class="data row13 col3">-62149</td>
      <td id="T_02cd2_row13_col4" class="data row13 col4">0</td>
      <td id="T_02cd2_row13_col5" class="data row13 col5">20324</td>
      <td id="T_02cd2_row13_col6" class="data row13 col6">11113</td>
      <td id="T_02cd2_row13_col7" class="data row13 col7">58175</td>
      <td id="T_02cd2_row13_col8" class="data row13 col8">69289</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row14" class="row_heading level0 row14">14</th>
      <td id="T_02cd2_row14_col0" class="data row14 col0">-1554</td>
      <td id="T_02cd2_row14_col1" class="data row14 col1">3446</td>
      <td id="T_02cd2_row14_col2" class="data row14 col2">0</td>
      <td id="T_02cd2_row14_col3" class="data row14 col3">-58703</td>
      <td id="T_02cd2_row14_col4" class="data row14 col4">0</td>
      <td id="T_02cd2_row14_col5" class="data row14 col5">20893</td>
      <td id="T_02cd2_row14_col6" class="data row14 col6">13194</td>
      <td id="T_02cd2_row14_col7" class="data row14 col7">62191</td>
      <td id="T_02cd2_row14_col8" class="data row14 col8">75384</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row15" class="row_heading level0 row15">15</th>
      <td id="T_02cd2_row15_col0" class="data row15 col0">-1468</td>
      <td id="T_02cd2_row15_col1" class="data row15 col1">3532</td>
      <td id="T_02cd2_row15_col2" class="data row15 col2">0</td>
      <td id="T_02cd2_row15_col3" class="data row15 col3">-55170</td>
      <td id="T_02cd2_row15_col4" class="data row15 col4">0</td>
      <td id="T_02cd2_row15_col5" class="data row15 col5">21478</td>
      <td id="T_02cd2_row15_col6" class="data row15 col6">15505</td>
      <td id="T_02cd2_row15_col7" class="data row15 col7">66308</td>
      <td id="T_02cd2_row15_col8" class="data row15 col8">81813</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row16" class="row_heading level0 row16">16</th>
      <td id="T_02cd2_row16_col0" class="data row16 col0">-1379</td>
      <td id="T_02cd2_row16_col1" class="data row16 col1">3621</td>
      <td id="T_02cd2_row16_col2" class="data row16 col2">0</td>
      <td id="T_02cd2_row16_col3" class="data row16 col3">-51549</td>
      <td id="T_02cd2_row16_col4" class="data row16 col4">0</td>
      <td id="T_02cd2_row16_col5" class="data row16 col5">22080</td>
      <td id="T_02cd2_row16_col6" class="data row16 col6">18062</td>
      <td id="T_02cd2_row16_col7" class="data row16 col7">70530</td>
      <td id="T_02cd2_row16_col8" class="data row16 col8">88592</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row17" class="row_heading level0 row17">17</th>
      <td id="T_02cd2_row17_col0" class="data row17 col0">-1289</td>
      <td id="T_02cd2_row17_col1" class="data row17 col1">3711</td>
      <td id="T_02cd2_row17_col2" class="data row17 col2">0</td>
      <td id="T_02cd2_row17_col3" class="data row17 col3">-47838</td>
      <td id="T_02cd2_row17_col4" class="data row17 col4">0</td>
      <td id="T_02cd2_row17_col5" class="data row17 col5">22698</td>
      <td id="T_02cd2_row17_col6" class="data row17 col6">20877</td>
      <td id="T_02cd2_row17_col7" class="data row17 col7">74860</td>
      <td id="T_02cd2_row17_col8" class="data row17 col8">95737</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row18" class="row_heading level0 row18">18</th>
      <td id="T_02cd2_row18_col0" class="data row18 col0">-1196</td>
      <td id="T_02cd2_row18_col1" class="data row18 col1">3804</td>
      <td id="T_02cd2_row18_col2" class="data row18 col2">0</td>
      <td id="T_02cd2_row18_col3" class="data row18 col3">-44034</td>
      <td id="T_02cd2_row18_col4" class="data row18 col4">0</td>
      <td id="T_02cd2_row18_col5" class="data row18 col5">23334</td>
      <td id="T_02cd2_row18_col6" class="data row18 col6">23967</td>
      <td id="T_02cd2_row18_col7" class="data row18 col7">79299</td>
      <td id="T_02cd2_row18_col8" class="data row18 col8">103267</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row19" class="row_heading level0 row19">19</th>
      <td id="T_02cd2_row19_col0" class="data row19 col0">-1101</td>
      <td id="T_02cd2_row19_col1" class="data row19 col1">3899</td>
      <td id="T_02cd2_row19_col2" class="data row19 col2">0</td>
      <td id="T_02cd2_row19_col3" class="data row19 col3">-40135</td>
      <td id="T_02cd2_row19_col4" class="data row19 col4">0</td>
      <td id="T_02cd2_row19_col5" class="data row19 col5">23987</td>
      <td id="T_02cd2_row19_col6" class="data row19 col6">27347</td>
      <td id="T_02cd2_row19_col7" class="data row19 col7">83852</td>
      <td id="T_02cd2_row19_col8" class="data row19 col8">111199</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row20" class="row_heading level0 row20">20</th>
      <td id="T_02cd2_row20_col0" class="data row20 col0">-1003</td>
      <td id="T_02cd2_row20_col1" class="data row20 col1">3997</td>
      <td id="T_02cd2_row20_col2" class="data row20 col2">0</td>
      <td id="T_02cd2_row20_col3" class="data row20 col3">-36138</td>
      <td id="T_02cd2_row20_col4" class="data row20 col4">0</td>
      <td id="T_02cd2_row20_col5" class="data row20 col5">24659</td>
      <td id="T_02cd2_row20_col6" class="data row20 col6">31033</td>
      <td id="T_02cd2_row20_col7" class="data row20 col7">88520</td>
      <td id="T_02cd2_row20_col8" class="data row20 col8">119554</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row21" class="row_heading level0 row21">21</th>
      <td id="T_02cd2_row21_col0" class="data row21 col0">-903</td>
      <td id="T_02cd2_row21_col1" class="data row21 col1">4097</td>
      <td id="T_02cd2_row21_col2" class="data row21 col2">0</td>
      <td id="T_02cd2_row21_col3" class="data row21 col3">-32042</td>
      <td id="T_02cd2_row21_col4" class="data row21 col4">0</td>
      <td id="T_02cd2_row21_col5" class="data row21 col5">25349</td>
      <td id="T_02cd2_row21_col6" class="data row21 col6">35044</td>
      <td id="T_02cd2_row21_col7" class="data row21 col7">93307</td>
      <td id="T_02cd2_row21_col8" class="data row21 col8">128351</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row22" class="row_heading level0 row22">22</th>
      <td id="T_02cd2_row22_col0" class="data row22 col0">-801</td>
      <td id="T_02cd2_row22_col1" class="data row22 col1">4199</td>
      <td id="T_02cd2_row22_col2" class="data row22 col2">0</td>
      <td id="T_02cd2_row22_col3" class="data row22 col3">-27843</td>
      <td id="T_02cd2_row22_col4" class="data row22 col4">0</td>
      <td id="T_02cd2_row22_col5" class="data row22 col5">26059</td>
      <td id="T_02cd2_row22_col6" class="data row22 col6">39396</td>
      <td id="T_02cd2_row22_col7" class="data row22 col7">98216</td>
      <td id="T_02cd2_row22_col8" class="data row22 col8">137612</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row23" class="row_heading level0 row23">23</th>
      <td id="T_02cd2_row23_col0" class="data row23 col0">-696</td>
      <td id="T_02cd2_row23_col1" class="data row23 col1">4304</td>
      <td id="T_02cd2_row23_col2" class="data row23 col2">0</td>
      <td id="T_02cd2_row23_col3" class="data row23 col3">-23539</td>
      <td id="T_02cd2_row23_col4" class="data row23 col4">0</td>
      <td id="T_02cd2_row23_col5" class="data row23 col5">26788</td>
      <td id="T_02cd2_row23_col6" class="data row23 col6">44110</td>
      <td id="T_02cd2_row23_col7" class="data row23 col7">103249</td>
      <td id="T_02cd2_row23_col8" class="data row23 col8">147360</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row24" class="row_heading level0 row24">24</th>
      <td id="T_02cd2_row24_col0" class="data row24 col0">-588</td>
      <td id="T_02cd2_row24_col1" class="data row24 col1">4412</td>
      <td id="T_02cd2_row24_col2" class="data row24 col2">0</td>
      <td id="T_02cd2_row24_col3" class="data row24 col3">-19127</td>
      <td id="T_02cd2_row24_col4" class="data row24 col4">0</td>
      <td id="T_02cd2_row24_col5" class="data row24 col5">27538</td>
      <td id="T_02cd2_row24_col6" class="data row24 col6">49206</td>
      <td id="T_02cd2_row24_col7" class="data row24 col7">108411</td>
      <td id="T_02cd2_row24_col8" class="data row24 col8">157617</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row25" class="row_heading level0 row25">25</th>
      <td id="T_02cd2_row25_col0" class="data row25 col0">-478</td>
      <td id="T_02cd2_row25_col1" class="data row25 col1">4522</td>
      <td id="T_02cd2_row25_col2" class="data row25 col2">0</td>
      <td id="T_02cd2_row25_col3" class="data row25 col3">-14606</td>
      <td id="T_02cd2_row25_col4" class="data row25 col4">0</td>
      <td id="T_02cd2_row25_col5" class="data row25 col5">28310</td>
      <td id="T_02cd2_row25_col6" class="data row25 col6">54704</td>
      <td id="T_02cd2_row25_col7" class="data row25 col7">113704</td>
      <td id="T_02cd2_row25_col8" class="data row25 col8">168408</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row26" class="row_heading level0 row26">26</th>
      <td id="T_02cd2_row26_col0" class="data row26 col0">-365</td>
      <td id="T_02cd2_row26_col1" class="data row26 col1">4635</td>
      <td id="T_02cd2_row26_col2" class="data row26 col2">0</td>
      <td id="T_02cd2_row26_col3" class="data row26 col3">-9971</td>
      <td id="T_02cd2_row26_col4" class="data row26 col4">0</td>
      <td id="T_02cd2_row26_col5" class="data row26 col5">29102</td>
      <td id="T_02cd2_row26_col6" class="data row26 col6">60627</td>
      <td id="T_02cd2_row26_col7" class="data row26 col7">119131</td>
      <td id="T_02cd2_row26_col8" class="data row26 col8">179759</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row27" class="row_heading level0 row27">27</th>
      <td id="T_02cd2_row27_col0" class="data row27 col0">-249</td>
      <td id="T_02cd2_row27_col1" class="data row27 col1">4751</td>
      <td id="T_02cd2_row27_col2" class="data row27 col2">0</td>
      <td id="T_02cd2_row27_col3" class="data row27 col3">-5220</td>
      <td id="T_02cd2_row27_col4" class="data row27 col4">0</td>
      <td id="T_02cd2_row27_col5" class="data row27 col5">29917</td>
      <td id="T_02cd2_row27_col6" class="data row27 col6">66999</td>
      <td id="T_02cd2_row27_col7" class="data row27 col7">124697</td>
      <td id="T_02cd2_row27_col8" class="data row27 col8">191696</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row28" class="row_heading level0 row28">28</th>
      <td id="T_02cd2_row28_col0" class="data row28 col0">-130</td>
      <td id="T_02cd2_row28_col1" class="data row28 col1">4870</td>
      <td id="T_02cd2_row28_col2" class="data row28 col2">0</td>
      <td id="T_02cd2_row28_col3" class="data row28 col3">-350</td>
      <td id="T_02cd2_row28_col4" class="data row28 col4">0</td>
      <td id="T_02cd2_row28_col5" class="data row28 col5">30755</td>
      <td id="T_02cd2_row28_col6" class="data row28 col6">73843</td>
      <td id="T_02cd2_row28_col7" class="data row28 col7">130404</td>
      <td id="T_02cd2_row28_col8" class="data row28 col8">204247</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row29" class="row_heading level0 row29">29</th>
      <td id="T_02cd2_row29_col0" class="data row29 col0">-9</td>
      <td id="T_02cd2_row29_col1" class="data row29 col1">350</td>
      <td id="T_02cd2_row29_col2" class="data row29 col2">0</td>
      <td id="T_02cd2_row29_col3" class="data row29 col3">0</td>
      <td id="T_02cd2_row29_col4" class="data row29 col4">4641</td>
      <td id="T_02cd2_row29_col5" class="data row29 col5">36257</td>
      <td id="T_02cd2_row29_col6" class="data row29 col6">77584</td>
      <td id="T_02cd2_row29_col7" class="data row29 col7">136257</td>
      <td id="T_02cd2_row29_col8" class="data row29 col8">213841</td>
    </tr>
    <tr>
      <th id="T_02cd2_level0_row30" class="row_heading level0 row30">Total:</th>
      <td id="T_02cd2_row30_col0" class="data row30 col0">-40359</td>
      <td id="T_02cd2_row30_col1" class="data row30 col1">100000</td>
      <td id="T_02cd2_row30_col2" class="data row30 col2">0</td>
      <td id="T_02cd2_row30_col3" class="data row30 col3">0</td>
      <td id="T_02cd2_row30_col4" class="data row30 col4">19641</td>
      <td id="T_02cd2_row30_col5" class="data row30 col5">36257</td>
      <td id="T_02cd2_row30_col6" class="data row30 col6">77584</td>
      <td id="T_02cd2_row30_col7" class="data row30 col7">136257</td>
      <td id="T_02cd2_row30_col8" class="data row30 col8">213841</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<div class="cell" data-tags="[]" data-execution_count="15">
<div class="cell-output cell-output-display" data-execution_count="15">
<p>The amortization duration is 29 years.</p>
</div>
</div>
<p>During the time when the loan is paid off, the investments compounds. In the same time the value of the house raises as shown in the appreciation column.</p>
</section>
<section id="extra-loan-payment" class="level1">
<h1>Extra loan payment</h1>
<p>In the second scenario the lump sum is not invested but instead used as an <strong>extra payment</strong> to lower the loan.</p>
<div class="cell" data-tags="[]" data-execution_count="17">
<div class="cell-output cell-output-display">

<style type="text/css">
#T_8dbcb th.row30 {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
}
#T_8dbcb td.row30 {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
}
#T_8dbcb table {
  border-spacing: 2px;
}
#T_8dbcb thead {
  border: 1px solid gray;
}
#T_8dbcb th {
  text-align: center;
  padding: 4.5px;
}
#T_8dbcb th.col_heading {
  border: 1px solid gray;
}
#T_8dbcb tbody {
  border: 1px solid gray;
}
#T_8dbcb td {
  text-align: center;
  border-left: 1px solid gray;
  border-right: 1px solid gray;
}
#T_8dbcb th.col5 {
  border-right: 1px solid gray;
}
#T_8dbcb td.col5 {
  border-right: 1px solid gray;
}
#T_8dbcb_row0_col2, #T_8dbcb_row0_col4, #T_8dbcb_row0_col5, #T_8dbcb_row1_col2, #T_8dbcb_row1_col4, #T_8dbcb_row1_col5, #T_8dbcb_row2_col4, #T_8dbcb_row2_col5, #T_8dbcb_row3_col2, #T_8dbcb_row3_col4, #T_8dbcb_row3_col5, #T_8dbcb_row4_col2, #T_8dbcb_row4_col4, #T_8dbcb_row4_col5, #T_8dbcb_row5_col2, #T_8dbcb_row5_col4, #T_8dbcb_row5_col5, #T_8dbcb_row6_col2, #T_8dbcb_row6_col4, #T_8dbcb_row6_col5, #T_8dbcb_row7_col2, #T_8dbcb_row7_col4, #T_8dbcb_row7_col5, #T_8dbcb_row8_col2, #T_8dbcb_row8_col4, #T_8dbcb_row8_col5, #T_8dbcb_row9_col2, #T_8dbcb_row9_col4, #T_8dbcb_row9_col5, #T_8dbcb_row10_col2, #T_8dbcb_row10_col4, #T_8dbcb_row10_col5, #T_8dbcb_row11_col2, #T_8dbcb_row11_col4, #T_8dbcb_row11_col5, #T_8dbcb_row12_col2, #T_8dbcb_row12_col4, #T_8dbcb_row12_col5, #T_8dbcb_row13_col2, #T_8dbcb_row13_col4, #T_8dbcb_row13_col5, #T_8dbcb_row14_col2, #T_8dbcb_row14_col4, #T_8dbcb_row14_col5, #T_8dbcb_row15_col2, #T_8dbcb_row15_col4, #T_8dbcb_row15_col5, #T_8dbcb_row16_col2, #T_8dbcb_row16_col4, #T_8dbcb_row16_col5, #T_8dbcb_row17_col2, #T_8dbcb_row17_col4, #T_8dbcb_row17_col5, #T_8dbcb_row18_col2, #T_8dbcb_row18_col4, #T_8dbcb_row18_col5, #T_8dbcb_row19_col2, #T_8dbcb_row19_col4, #T_8dbcb_row19_col5, #T_8dbcb_row20_col2, #T_8dbcb_row20_col4, #T_8dbcb_row20_col5, #T_8dbcb_row21_col2, #T_8dbcb_row21_col4, #T_8dbcb_row21_col5, #T_8dbcb_row22_col2, #T_8dbcb_row22_col4, #T_8dbcb_row22_col5, #T_8dbcb_row23_col2, #T_8dbcb_row23_col3, #T_8dbcb_row24_col2, #T_8dbcb_row24_col3, #T_8dbcb_row25_col2, #T_8dbcb_row25_col3, #T_8dbcb_row26_col2, #T_8dbcb_row26_col3, #T_8dbcb_row27_col2, #T_8dbcb_row27_col3, #T_8dbcb_row28_col2, #T_8dbcb_row28_col3, #T_8dbcb_row29_col2, #T_8dbcb_row29_col3, #T_8dbcb_row30_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
}
#T_8dbcb_row0_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 60.0%, #cd8bc2 60.0%, #cd8bc2 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row0_col6, #T_8dbcb_row0_col7, #T_8dbcb_row0_col8 {
  width: 80px;
  border-right: 1px solid gray;
}
#T_8dbcb_row1_col0, #T_8dbcb_row30_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ff0000 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row1_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #7fbf66 40.0%, transparent 40.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row1_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 61.0%, #cb8fc5 61.0%, #cb8fc5 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row1_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f7fbff 0.0%, transparent 0.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row1_col7, #T_8dbcb_row1_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f5fafe 1.0%, transparent 1.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row2_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 2.0%, #ff0600 2.0%, #ff0600 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row2_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #7cbe66 41.0%, transparent 41.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row2_col2, #T_8dbcb_row30_col2, #T_8dbcb_row30_col4 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #008066 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row2_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 68.0%, #cea5d0 68.0%, #cea5d0 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row2_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f7fbff 0.3%, transparent 0.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row2_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e7f1fa 8.0%, transparent 8.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row2_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e7f0fa 8.3%, transparent 8.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row3_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 16.1%, #ff3300 16.1%, #ff3300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row3_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #66b266 48.0%, transparent 48.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row3_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 69.2%, #cfa8d2 69.2%, #cfa8d2 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row3_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f6faff 0.6%, transparent 0.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row3_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e5eff9 9.2%, transparent 9.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row3_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e3eef9 9.8%, transparent 9.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row4_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 18.5%, #ff3b00 18.5%, #ff3b00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row4_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #62b066 49.2%, transparent 49.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row4_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 70.5%, #d0acd3 70.5%, #d0acd3 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row4_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f5fafe 0.9%, transparent 0.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row4_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e3eef8 10.5%, transparent 10.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row4_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e1edf8 11.3%, transparent 11.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row5_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 20.9%, #ff4200 20.9%, #ff4200 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row5_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #5eae66 50.5%, transparent 50.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row5_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 71.7%, #d1afd5 71.7%, #d1afd5 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row5_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f5f9fe 1.2%, transparent 1.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row5_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e0ecf8 11.7%, transparent 11.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row5_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ddeaf7 12.9%, transparent 12.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row6_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 23.4%, #ff4a00 23.4%, #ff4a00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row6_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #5aac66 51.7%, transparent 51.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row6_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 73.0%, #d2b3d7 73.0%, #d2b3d7 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row6_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f4f9fe 1.6%, transparent 1.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row6_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ddeaf7 13.0%, transparent 13.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row6_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dae8f6 14.7%, transparent 14.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row7_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 26.0%, #ff5300 26.0%, #ff5300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row7_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #56ab66 53.0%, transparent 53.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row7_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 74.3%, #d4b8d9 74.3%, #d4b8d9 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row7_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f3f8fe 2.1%, transparent 2.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row7_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dbe9f6 14.3%, transparent 14.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row7_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d6e6f4 16.5%, transparent 16.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row8_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 28.7%, #ff5b00 28.7%, #ff5b00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row8_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #52a866 54.3%, transparent 54.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row8_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 75.7%, #d5bbdb 75.7%, #d5bbdb 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row8_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f2f8fd 2.7%, transparent 2.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row8_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d8e7f5 15.7%, transparent 15.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row8_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d3e3f3 18.4%, transparent 18.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row9_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 31.4%, #ff6400 31.4%, #ff6400 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row9_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #4da666 55.7%, transparent 55.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row9_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 77.1%, #d7c0de 77.1%, #d7c0de 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row9_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #f1f7fd 3.3%, transparent 3.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row9_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d6e5f4 17.1%, transparent 17.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row9_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #cfe1f2 20.4%, transparent 20.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row10_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 34.2%, #ff6d00 34.2%, #ff6d00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row10_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #49a466 57.1%, transparent 57.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row10_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 78.5%, #d9c4e0 78.5%, #d9c4e0 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row10_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #eff6fc 4.1%, transparent 4.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row10_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d3e3f3 18.5%, transparent 18.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row10_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #cbdef1 22.6%, transparent 22.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row11_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 37.0%, #ff7600 37.0%, #ff7600 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row11_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #44a266 58.5%, transparent 58.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row11_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 80.0%, #dcc9e2 80.0%, #dcc9e2 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row11_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #eef5fc 4.9%, transparent 4.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row11_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d0e1f2 20.0%, transparent 20.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row11_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c7dbef 24.8%, transparent 24.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row12_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 40.0%, #ff7f00 40.0%, #ff7f00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row12_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #40a066 60.0%, transparent 60.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row12_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 81.5%, #decee5 81.5%, #decee5 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row12_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ecf4fb 5.8%, transparent 5.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row12_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #cde0f1 21.5%, transparent 21.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row12_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #bfd8ed 27.2%, transparent 27.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row13_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 43.0%, #ff8900 43.0%, #ff8900 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row13_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #3b9d66 61.5%, transparent 61.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row13_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 83.0%, #e0d3e8 83.0%, #e0d3e8 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row13_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #eaf2fb 6.8%, transparent 6.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row13_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #cadef0 23.0%, transparent 23.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row13_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b7d4ea 29.8%, transparent 29.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row14_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 46.0%, #ff9300 46.0%, #ff9300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row14_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #369b66 63.0%, transparent 63.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row14_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 84.6%, #e3d8ea 84.6%, #e3d8ea 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row14_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e7f1fa 7.9%, transparent 7.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row14_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c7dcef 24.6%, transparent 24.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row14_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #aed1e7 32.4%, transparent 32.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row15_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 49.2%, #ff9d00 49.2%, #ff9d00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row15_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #319866 64.6%, transparent 64.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row15_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 86.2%, #e5dded 86.2%, #e5dded 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row15_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e5eff9 9.1%, transparent 9.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row15_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c2d9ee 26.2%, transparent 26.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row15_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #a5cde3 35.3%, transparent 35.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row16_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 52.4%, #ffa700 52.4%, #ffa700 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row16_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #2c9666 66.2%, transparent 66.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row16_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 87.9%, #e7e2ef 87.9%, #e7e2ef 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row16_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #e3eef8 10.4%, transparent 10.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row16_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #bdd7ec 27.9%, transparent 27.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row16_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #9cc9e1 38.2%, transparent 38.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row17_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 55.7%, #ffb200 55.7%, #ffb200 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row17_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #269266 67.9%, transparent 67.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row17_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 89.6%, #eae5f1 89.6%, #eae5f1 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row17_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dfecf7 11.8%, transparent 11.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row17_col7, #T_8dbcb_row28_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b8d5ea 29.6%, transparent 29.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row17_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #8fc2de 41.4%, transparent 41.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row18_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 59.1%, #ffbd00 59.1%, #ffbd00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row18_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #219066 69.6%, transparent 69.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row18_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 91.3%, #ece7f2 91.3%, #ece7f2 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row18_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #dceaf6 13.4%, transparent 13.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row18_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b2d2e8 31.3%, transparent 31.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row18_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #81badb 44.7%, transparent 44.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row19_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 62.6%, #ffc800 62.6%, #ffc800 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row19_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #1b8d66 71.3%, transparent 71.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row19_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 93.1%, #eeeaf4 93.1%, #eeeaf4 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row19_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d9e8f5 15.1%, transparent 15.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row19_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #add0e6 33.1%, transparent 33.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row19_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #72b2d8 48.2%, transparent 48.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row20_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 66.2%, #ffd300 66.2%, #ffd300 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row20_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #168b66 73.1%, transparent 73.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row20_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 94.9%, #f0ecf5 94.9%, #f0ecf5 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row20_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d6e5f4 17.0%, transparent 17.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row20_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #a6cee4 34.9%, transparent 34.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row20_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #65aad4 51.9%, transparent 51.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row21_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 69.8%, #ffdf00 69.8%, #ffdf00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row21_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #108866 74.9%, transparent 74.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row21_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 96.8%, #f3eff6 96.8%, #f3eff6 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row21_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #d2e3f3 19.0%, transparent 19.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row21_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #a0cbe2 36.8%, transparent 36.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row21_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #58a1cf 55.7%, transparent 55.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row22_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 73.6%, #ffeb00 73.6%, #ffeb00 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row22_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #0a8466 76.8%, transparent 76.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row22_col3 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, transparent 98.7%, #f5f2f8 98.7%, #f5f2f8 100.0%, transparent 100.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row22_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #cde0f1 21.1%, transparent 21.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row22_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #99c7e0 38.7%, transparent 38.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row22_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #4a98c9 59.8%, transparent 59.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row23_col0 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 77.4%, #fff700 77.4%, #fff700 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row23_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #58ac66 52.2%, transparent 52.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row23_col4 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e3f166 8.8%, transparent 8.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row23_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #f6faff 0.7%, transparent 0.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row23_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #caddf0 23.1%, transparent 23.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row23_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #91c3de 40.7%, transparent 40.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row23_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #3e8ec4 63.7%, transparent 63.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row24_col0, #T_8dbcb_row24_col1, #T_8dbcb_row25_col0, #T_8dbcb_row25_col1, #T_8dbcb_row26_col0, #T_8dbcb_row26_col1, #T_8dbcb_row27_col0, #T_8dbcb_row27_col1, #T_8dbcb_row28_col0, #T_8dbcb_row28_col1, #T_8dbcb_row29_col0, #T_8dbcb_row29_col1 {
  width: 100px;
  border-right: 1px solid gray;
}
#T_8dbcb_row24_col4, #T_8dbcb_row25_col4, #T_8dbcb_row26_col4, #T_8dbcb_row27_col4, #T_8dbcb_row28_col4, #T_8dbcb_row29_col4 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #aad466 26.7%, transparent 26.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row24_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #f2f8fd 2.7%, transparent 2.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row24_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c7dcef 24.3%, transparent 24.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row24_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #89bedc 42.7%, transparent 42.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row24_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #3686c0 67.0%, transparent 67.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row25_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #eef5fc 4.8%, transparent 4.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row25_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c4daee 25.6%, transparent 25.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row25_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #81badb 44.8%, transparent 44.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row25_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #2d7dbb 70.4%, transparent 70.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row26_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #eaf2fb 6.9%, transparent 6.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row26_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #c1d9ed 26.9%, transparent 26.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row26_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #77b5d9 46.9%, transparent 46.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row26_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #2474b7 73.8%, transparent 73.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row27_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e5eff9 9.1%, transparent 9.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row27_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #bcd7eb 28.3%, transparent 28.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row27_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #6fb0d7 49.1%, transparent 49.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row27_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #1c6ab0 77.4%, transparent 77.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row28_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #e0ecf8 11.3%, transparent 11.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row28_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #66abd4 51.3%, transparent 51.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row28_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #1561a9 81.0%, transparent 81.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row29_col5, #T_8dbcb_row30_col5 {
  width: 80px;
  border-right: 1px solid gray;
  border-left: 1px solid gray;
  background: linear-gradient(90deg, #dceaf6 13.7%, transparent 13.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row29_col6, #T_8dbcb_row30_col6 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #b3d3e8 31.0%, transparent 31.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row29_col7, #T_8dbcb_row30_col7 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #5fa6d1 53.7%, transparent 53.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row29_col8, #T_8dbcb_row30_col8 {
  width: 80px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #0e58a2 84.7%, transparent 84.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_8dbcb_row30_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #008066 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
</style>
<table id="T_8dbcb">
  <thead>
    <tr>
      <th class="index_name level0"></th>
      <th id="T_8dbcb_level0_col0" class="col_heading level0 col0" colspan="4">Mortgage</th>
      <th id="T_8dbcb_level0_col4" class="col_heading level0 col4" colspan="2">Investment</th>
      <th id="T_8dbcb_level0_col6" class="col_heading level0 col6">Appreciation</th>
      <th id="T_8dbcb_level0_col7" class="col_heading level0 col7" colspan="2">Net Worth</th>
    </tr>
    <tr>
      <th class="index_name level1">Year</th>
      <th id="T_8dbcb_level1_col0" class="col_heading level1 col0">Interest</th>
      <th id="T_8dbcb_level1_col1" class="col_heading level1 col1">Principal</th>
      <th id="T_8dbcb_level1_col2" class="col_heading level1 col2">Extra Payment</th>
      <th id="T_8dbcb_level1_col3" class="col_heading level1 col3">Loan Balance</th>
      <th id="T_8dbcb_level1_col4" class="col_heading level1 col4">Payment</th>
      <th id="T_8dbcb_level1_col5" class="col_heading level1 col5">Balance</th>
      <th id="T_8dbcb_level1_col6" class="col_heading level1 col6">Balance</th>
      <th id="T_8dbcb_level1_col7" class="col_heading level1 col7">w/o appr.</th>
      <th id="T_8dbcb_level1_col8" class="col_heading level1 col8">with appr.</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th id="T_8dbcb_level0_row0" class="row_heading level0 row0">0</th>
      <td id="T_8dbcb_row0_col0" class="data row0 col0"></td>
      <td id="T_8dbcb_row0_col1" class="data row0 col1"></td>
      <td id="T_8dbcb_row0_col2" class="data row0 col2"></td>
      <td id="T_8dbcb_row0_col3" class="data row0 col3">-100000</td>
      <td id="T_8dbcb_row0_col4" class="data row0 col4"></td>
      <td id="T_8dbcb_row0_col5" class="data row0 col5">0</td>
      <td id="T_8dbcb_row0_col6" class="data row0 col6"></td>
      <td id="T_8dbcb_row0_col7" class="data row0 col7">0</td>
      <td id="T_8dbcb_row0_col8" class="data row0 col8"></td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row1" class="row_heading level0 row1">1</th>
      <td id="T_8dbcb_row1_col0" class="data row1 col0">-2500</td>
      <td id="T_8dbcb_row1_col1" class="data row1 col1">2500</td>
      <td id="T_8dbcb_row1_col2" class="data row1 col2">0</td>
      <td id="T_8dbcb_row1_col3" class="data row1 col3">-97500</td>
      <td id="T_8dbcb_row1_col4" class="data row1 col4">0</td>
      <td id="T_8dbcb_row1_col5" class="data row1 col5">0</td>
      <td id="T_8dbcb_row1_col6" class="data row1 col6">50</td>
      <td id="T_8dbcb_row1_col7" class="data row1 col7">2500</td>
      <td id="T_8dbcb_row1_col8" class="data row1 col8">2550</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row2" class="row_heading level0 row2">2</th>
      <td id="T_8dbcb_row2_col0" class="data row2 col0">-2438</td>
      <td id="T_8dbcb_row2_col1" class="data row2 col1">2562</td>
      <td id="T_8dbcb_row2_col2" class="data row2 col2">15000</td>
      <td id="T_8dbcb_row2_col3" class="data row2 col3">-79938</td>
      <td id="T_8dbcb_row2_col4" class="data row2 col4">0</td>
      <td id="T_8dbcb_row2_col5" class="data row2 col5">0</td>
      <td id="T_8dbcb_row2_col6" class="data row2 col6">811</td>
      <td id="T_8dbcb_row2_col7" class="data row2 col7">20062</td>
      <td id="T_8dbcb_row2_col8" class="data row2 col8">20873</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row3" class="row_heading level0 row3">3</th>
      <td id="T_8dbcb_row3_col0" class="data row3 col0">-1998</td>
      <td id="T_8dbcb_row3_col1" class="data row3 col1">3002</td>
      <td id="T_8dbcb_row3_col2" class="data row3 col2">0</td>
      <td id="T_8dbcb_row3_col3" class="data row3 col3">-76936</td>
      <td id="T_8dbcb_row3_col4" class="data row3 col4">0</td>
      <td id="T_8dbcb_row3_col5" class="data row3 col5">0</td>
      <td id="T_8dbcb_row3_col6" class="data row3 col6">1412</td>
      <td id="T_8dbcb_row3_col7" class="data row3 col7">23064</td>
      <td id="T_8dbcb_row3_col8" class="data row3 col8">24476</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row4" class="row_heading level0 row4">4</th>
      <td id="T_8dbcb_row4_col0" class="data row4 col0">-1923</td>
      <td id="T_8dbcb_row4_col1" class="data row4 col1">3077</td>
      <td id="T_8dbcb_row4_col2" class="data row4 col2">0</td>
      <td id="T_8dbcb_row4_col3" class="data row4 col3">-73859</td>
      <td id="T_8dbcb_row4_col4" class="data row4 col4">0</td>
      <td id="T_8dbcb_row4_col5" class="data row4 col5">0</td>
      <td id="T_8dbcb_row4_col6" class="data row4 col6">2155</td>
      <td id="T_8dbcb_row4_col7" class="data row4 col7">26141</td>
      <td id="T_8dbcb_row4_col8" class="data row4 col8">28295</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row5" class="row_heading level0 row5">5</th>
      <td id="T_8dbcb_row5_col0" class="data row5 col0">-1846</td>
      <td id="T_8dbcb_row5_col1" class="data row5 col1">3154</td>
      <td id="T_8dbcb_row5_col2" class="data row5 col2">0</td>
      <td id="T_8dbcb_row5_col3" class="data row5 col3">-70706</td>
      <td id="T_8dbcb_row5_col4" class="data row5 col4">0</td>
      <td id="T_8dbcb_row5_col5" class="data row5 col5">0</td>
      <td id="T_8dbcb_row5_col6" class="data row5 col6">3049</td>
      <td id="T_8dbcb_row5_col7" class="data row5 col7">29294</td>
      <td id="T_8dbcb_row5_col8" class="data row5 col8">32343</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row6" class="row_heading level0 row6">6</th>
      <td id="T_8dbcb_row6_col0" class="data row6 col0">-1768</td>
      <td id="T_8dbcb_row6_col1" class="data row6 col1">3232</td>
      <td id="T_8dbcb_row6_col2" class="data row6 col2">0</td>
      <td id="T_8dbcb_row6_col3" class="data row6 col3">-67473</td>
      <td id="T_8dbcb_row6_col4" class="data row6 col4">0</td>
      <td id="T_8dbcb_row6_col5" class="data row6 col5">0</td>
      <td id="T_8dbcb_row6_col6" class="data row6 col6">4104</td>
      <td id="T_8dbcb_row6_col7" class="data row6 col7">32527</td>
      <td id="T_8dbcb_row6_col8" class="data row6 col8">36630</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row7" class="row_heading level0 row7">7</th>
      <td id="T_8dbcb_row7_col0" class="data row7 col0">-1687</td>
      <td id="T_8dbcb_row7_col1" class="data row7 col1">3313</td>
      <td id="T_8dbcb_row7_col2" class="data row7 col2">0</td>
      <td id="T_8dbcb_row7_col3" class="data row7 col3">-64160</td>
      <td id="T_8dbcb_row7_col4" class="data row7 col4">0</td>
      <td id="T_8dbcb_row7_col5" class="data row7 col5">0</td>
      <td id="T_8dbcb_row7_col6" class="data row7 col6">5329</td>
      <td id="T_8dbcb_row7_col7" class="data row7 col7">35840</td>
      <td id="T_8dbcb_row7_col8" class="data row7 col8">41169</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row8" class="row_heading level0 row8">8</th>
      <td id="T_8dbcb_row8_col0" class="data row8 col0">-1604</td>
      <td id="T_8dbcb_row8_col1" class="data row8 col1">3396</td>
      <td id="T_8dbcb_row8_col2" class="data row8 col2">0</td>
      <td id="T_8dbcb_row8_col3" class="data row8 col3">-60764</td>
      <td id="T_8dbcb_row8_col4" class="data row8 col4">0</td>
      <td id="T_8dbcb_row8_col5" class="data row8 col5">0</td>
      <td id="T_8dbcb_row8_col6" class="data row8 col6">6735</td>
      <td id="T_8dbcb_row8_col7" class="data row8 col7">39236</td>
      <td id="T_8dbcb_row8_col8" class="data row8 col8">45971</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row9" class="row_heading level0 row9">9</th>
      <td id="T_8dbcb_row9_col0" class="data row9 col0">-1519</td>
      <td id="T_8dbcb_row9_col1" class="data row9 col1">3481</td>
      <td id="T_8dbcb_row9_col2" class="data row9 col2">0</td>
      <td id="T_8dbcb_row9_col3" class="data row9 col3">-57283</td>
      <td id="T_8dbcb_row9_col4" class="data row9 col4">0</td>
      <td id="T_8dbcb_row9_col5" class="data row9 col5">0</td>
      <td id="T_8dbcb_row9_col6" class="data row9 col6">8334</td>
      <td id="T_8dbcb_row9_col7" class="data row9 col7">42717</td>
      <td id="T_8dbcb_row9_col8" class="data row9 col8">51050</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row10" class="row_heading level0 row10">10</th>
      <td id="T_8dbcb_row10_col0" class="data row10 col0">-1432</td>
      <td id="T_8dbcb_row10_col1" class="data row10 col1">3568</td>
      <td id="T_8dbcb_row10_col2" class="data row10 col2">0</td>
      <td id="T_8dbcb_row10_col3" class="data row10 col3">-53716</td>
      <td id="T_8dbcb_row10_col4" class="data row10 col4">0</td>
      <td id="T_8dbcb_row10_col5" class="data row10 col5">0</td>
      <td id="T_8dbcb_row10_col6" class="data row10 col6">10136</td>
      <td id="T_8dbcb_row10_col7" class="data row10 col7">46284</td>
      <td id="T_8dbcb_row10_col8" class="data row10 col8">56421</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row11" class="row_heading level0 row11">11</th>
      <td id="T_8dbcb_row11_col0" class="data row11 col0">-1343</td>
      <td id="T_8dbcb_row11_col1" class="data row11 col1">3657</td>
      <td id="T_8dbcb_row11_col2" class="data row11 col2">0</td>
      <td id="T_8dbcb_row11_col3" class="data row11 col3">-50058</td>
      <td id="T_8dbcb_row11_col4" class="data row11 col4">0</td>
      <td id="T_8dbcb_row11_col5" class="data row11 col5">0</td>
      <td id="T_8dbcb_row11_col6" class="data row11 col6">12155</td>
      <td id="T_8dbcb_row11_col7" class="data row11 col7">49942</td>
      <td id="T_8dbcb_row11_col8" class="data row11 col8">62096</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row12" class="row_heading level0 row12">12</th>
      <td id="T_8dbcb_row12_col0" class="data row12 col0">-1251</td>
      <td id="T_8dbcb_row12_col1" class="data row12 col1">3749</td>
      <td id="T_8dbcb_row12_col2" class="data row12 col2">0</td>
      <td id="T_8dbcb_row12_col3" class="data row12 col3">-46310</td>
      <td id="T_8dbcb_row12_col4" class="data row12 col4">0</td>
      <td id="T_8dbcb_row12_col5" class="data row12 col5">0</td>
      <td id="T_8dbcb_row12_col6" class="data row12 col6">14402</td>
      <td id="T_8dbcb_row12_col7" class="data row12 col7">53690</td>
      <td id="T_8dbcb_row12_col8" class="data row12 col8">68092</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row13" class="row_heading level0 row13">13</th>
      <td id="T_8dbcb_row13_col0" class="data row13 col0">-1158</td>
      <td id="T_8dbcb_row13_col1" class="data row13 col1">3842</td>
      <td id="T_8dbcb_row13_col2" class="data row13 col2">0</td>
      <td id="T_8dbcb_row13_col3" class="data row13 col3">-42468</td>
      <td id="T_8dbcb_row13_col4" class="data row13 col4">0</td>
      <td id="T_8dbcb_row13_col5" class="data row13 col5">0</td>
      <td id="T_8dbcb_row13_col6" class="data row13 col6">16892</td>
      <td id="T_8dbcb_row13_col7" class="data row13 col7">57532</td>
      <td id="T_8dbcb_row13_col8" class="data row13 col8">74424</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row14" class="row_heading level0 row14">14</th>
      <td id="T_8dbcb_row14_col0" class="data row14 col0">-1062</td>
      <td id="T_8dbcb_row14_col1" class="data row14 col1">3938</td>
      <td id="T_8dbcb_row14_col2" class="data row14 col2">0</td>
      <td id="T_8dbcb_row14_col3" class="data row14 col3">-38529</td>
      <td id="T_8dbcb_row14_col4" class="data row14 col4">0</td>
      <td id="T_8dbcb_row14_col5" class="data row14 col5">0</td>
      <td id="T_8dbcb_row14_col6" class="data row14 col6">19639</td>
      <td id="T_8dbcb_row14_col7" class="data row14 col7">61471</td>
      <td id="T_8dbcb_row14_col8" class="data row14 col8">81109</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row15" class="row_heading level0 row15">15</th>
      <td id="T_8dbcb_row15_col0" class="data row15 col0">-963</td>
      <td id="T_8dbcb_row15_col1" class="data row15 col1">4037</td>
      <td id="T_8dbcb_row15_col2" class="data row15 col2">0</td>
      <td id="T_8dbcb_row15_col3" class="data row15 col3">-34493</td>
      <td id="T_8dbcb_row15_col4" class="data row15 col4">0</td>
      <td id="T_8dbcb_row15_col5" class="data row15 col5">0</td>
      <td id="T_8dbcb_row15_col6" class="data row15 col6">22657</td>
      <td id="T_8dbcb_row15_col7" class="data row15 col7">65507</td>
      <td id="T_8dbcb_row15_col8" class="data row15 col8">88164</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row16" class="row_heading level0 row16">16</th>
      <td id="T_8dbcb_row16_col0" class="data row16 col0">-862</td>
      <td id="T_8dbcb_row16_col1" class="data row16 col1">4138</td>
      <td id="T_8dbcb_row16_col2" class="data row16 col2">0</td>
      <td id="T_8dbcb_row16_col3" class="data row16 col3">-30355</td>
      <td id="T_8dbcb_row16_col4" class="data row16 col4">0</td>
      <td id="T_8dbcb_row16_col5" class="data row16 col5">0</td>
      <td id="T_8dbcb_row16_col6" class="data row16 col6">25963</td>
      <td id="T_8dbcb_row16_col7" class="data row16 col7">69645</td>
      <td id="T_8dbcb_row16_col8" class="data row16 col8">95608</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row17" class="row_heading level0 row17">17</th>
      <td id="T_8dbcb_row17_col0" class="data row17 col0">-759</td>
      <td id="T_8dbcb_row17_col1" class="data row17 col1">4241</td>
      <td id="T_8dbcb_row17_col2" class="data row17 col2">0</td>
      <td id="T_8dbcb_row17_col3" class="data row17 col3">-26114</td>
      <td id="T_8dbcb_row17_col4" class="data row17 col4">0</td>
      <td id="T_8dbcb_row17_col5" class="data row17 col5">0</td>
      <td id="T_8dbcb_row17_col6" class="data row17 col6">29572</td>
      <td id="T_8dbcb_row17_col7" class="data row17 col7">73886</td>
      <td id="T_8dbcb_row17_col8" class="data row17 col8">103459</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row18" class="row_heading level0 row18">18</th>
      <td id="T_8dbcb_row18_col0" class="data row18 col0">-653</td>
      <td id="T_8dbcb_row18_col1" class="data row18 col1">4347</td>
      <td id="T_8dbcb_row18_col2" class="data row18 col2">0</td>
      <td id="T_8dbcb_row18_col3" class="data row18 col3">-21767</td>
      <td id="T_8dbcb_row18_col4" class="data row18 col4">0</td>
      <td id="T_8dbcb_row18_col5" class="data row18 col5">0</td>
      <td id="T_8dbcb_row18_col6" class="data row18 col6">33503</td>
      <td id="T_8dbcb_row18_col7" class="data row18 col7">78233</td>
      <td id="T_8dbcb_row18_col8" class="data row18 col8">111737</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row19" class="row_heading level0 row19">19</th>
      <td id="T_8dbcb_row19_col0" class="data row19 col0">-544</td>
      <td id="T_8dbcb_row19_col1" class="data row19 col1">4456</td>
      <td id="T_8dbcb_row19_col2" class="data row19 col2">0</td>
      <td id="T_8dbcb_row19_col3" class="data row19 col3">-17311</td>
      <td id="T_8dbcb_row19_col4" class="data row19 col4">0</td>
      <td id="T_8dbcb_row19_col5" class="data row19 col5">0</td>
      <td id="T_8dbcb_row19_col6" class="data row19 col6">37773</td>
      <td id="T_8dbcb_row19_col7" class="data row19 col7">82689</td>
      <td id="T_8dbcb_row19_col8" class="data row19 col8">120463</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row20" class="row_heading level0 row20">20</th>
      <td id="T_8dbcb_row20_col0" class="data row20 col0">-433</td>
      <td id="T_8dbcb_row20_col1" class="data row20 col1">4567</td>
      <td id="T_8dbcb_row20_col2" class="data row20 col2">0</td>
      <td id="T_8dbcb_row20_col3" class="data row20 col3">-12743</td>
      <td id="T_8dbcb_row20_col4" class="data row20 col4">0</td>
      <td id="T_8dbcb_row20_col5" class="data row20 col5">0</td>
      <td id="T_8dbcb_row20_col6" class="data row20 col6">42402</td>
      <td id="T_8dbcb_row20_col7" class="data row20 col7">87257</td>
      <td id="T_8dbcb_row20_col8" class="data row20 col8">129659</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row21" class="row_heading level0 row21">21</th>
      <td id="T_8dbcb_row21_col0" class="data row21 col0">-319</td>
      <td id="T_8dbcb_row21_col1" class="data row21 col1">4681</td>
      <td id="T_8dbcb_row21_col2" class="data row21 col2">0</td>
      <td id="T_8dbcb_row21_col3" class="data row21 col3">-8062</td>
      <td id="T_8dbcb_row21_col4" class="data row21 col4">0</td>
      <td id="T_8dbcb_row21_col5" class="data row21 col5">0</td>
      <td id="T_8dbcb_row21_col6" class="data row21 col6">47409</td>
      <td id="T_8dbcb_row21_col7" class="data row21 col7">91938</td>
      <td id="T_8dbcb_row21_col8" class="data row21 col8">139347</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row22" class="row_heading level0 row22">22</th>
      <td id="T_8dbcb_row22_col0" class="data row22 col0">-202</td>
      <td id="T_8dbcb_row22_col1" class="data row22 col1">4798</td>
      <td id="T_8dbcb_row22_col2" class="data row22 col2">0</td>
      <td id="T_8dbcb_row22_col3" class="data row22 col3">-3264</td>
      <td id="T_8dbcb_row22_col4" class="data row22 col4">0</td>
      <td id="T_8dbcb_row22_col5" class="data row22 col5">0</td>
      <td id="T_8dbcb_row22_col6" class="data row22 col6">52816</td>
      <td id="T_8dbcb_row22_col7" class="data row22 col7">96736</td>
      <td id="T_8dbcb_row22_col8" class="data row22 col8">149552</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row23" class="row_heading level0 row23">23</th>
      <td id="T_8dbcb_row23_col0" class="data row23 col0">-82</td>
      <td id="T_8dbcb_row23_col1" class="data row23 col1">3264</td>
      <td id="T_8dbcb_row23_col2" class="data row23 col2">0</td>
      <td id="T_8dbcb_row23_col3" class="data row23 col3">0</td>
      <td id="T_8dbcb_row23_col4" class="data row23 col4">1655</td>
      <td id="T_8dbcb_row23_col5" class="data row23 col5">1655</td>
      <td id="T_8dbcb_row23_col6" class="data row23 col6">57690</td>
      <td id="T_8dbcb_row23_col7" class="data row23 col7">101655</td>
      <td id="T_8dbcb_row23_col8" class="data row23 col8">159345</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row24" class="row_heading level0 row24">24</th>
      <td id="T_8dbcb_row24_col0" class="data row24 col0">0</td>
      <td id="T_8dbcb_row24_col1" class="data row24 col1">0</td>
      <td id="T_8dbcb_row24_col2" class="data row24 col2">0</td>
      <td id="T_8dbcb_row24_col3" class="data row24 col3">0</td>
      <td id="T_8dbcb_row24_col4" class="data row24 col4">5000</td>
      <td id="T_8dbcb_row24_col5" class="data row24 col5">6701</td>
      <td id="T_8dbcb_row24_col6" class="data row24 col6">60844</td>
      <td id="T_8dbcb_row24_col7" class="data row24 col7">106701</td>
      <td id="T_8dbcb_row24_col8" class="data row24 col8">167545</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row25" class="row_heading level0 row25">25</th>
      <td id="T_8dbcb_row25_col0" class="data row25 col0">0</td>
      <td id="T_8dbcb_row25_col1" class="data row25 col1">0</td>
      <td id="T_8dbcb_row25_col2" class="data row25 col2">0</td>
      <td id="T_8dbcb_row25_col3" class="data row25 col3">0</td>
      <td id="T_8dbcb_row25_col4" class="data row25 col4">5000</td>
      <td id="T_8dbcb_row25_col5" class="data row25 col5">11889</td>
      <td id="T_8dbcb_row25_col6" class="data row25 col6">64061</td>
      <td id="T_8dbcb_row25_col7" class="data row25 col7">111889</td>
      <td id="T_8dbcb_row25_col8" class="data row25 col8">175949</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row26" class="row_heading level0 row26">26</th>
      <td id="T_8dbcb_row26_col0" class="data row26 col0">0</td>
      <td id="T_8dbcb_row26_col1" class="data row26 col1">0</td>
      <td id="T_8dbcb_row26_col2" class="data row26 col2">0</td>
      <td id="T_8dbcb_row26_col3" class="data row26 col3">0</td>
      <td id="T_8dbcb_row26_col4" class="data row26 col4">5000</td>
      <td id="T_8dbcb_row26_col5" class="data row26 col5">17222</td>
      <td id="T_8dbcb_row26_col6" class="data row26 col6">67342</td>
      <td id="T_8dbcb_row26_col7" class="data row26 col7">117222</td>
      <td id="T_8dbcb_row26_col8" class="data row26 col8">184563</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row27" class="row_heading level0 row27">27</th>
      <td id="T_8dbcb_row27_col0" class="data row27 col0">0</td>
      <td id="T_8dbcb_row27_col1" class="data row27 col1">0</td>
      <td id="T_8dbcb_row27_col2" class="data row27 col2">0</td>
      <td id="T_8dbcb_row27_col3" class="data row27 col3">0</td>
      <td id="T_8dbcb_row27_col4" class="data row27 col4">5000</td>
      <td id="T_8dbcb_row27_col5" class="data row27 col5">22704</td>
      <td id="T_8dbcb_row27_col6" class="data row27 col6">70689</td>
      <td id="T_8dbcb_row27_col7" class="data row27 col7">122704</td>
      <td id="T_8dbcb_row27_col8" class="data row27 col8">193393</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row28" class="row_heading level0 row28">28</th>
      <td id="T_8dbcb_row28_col0" class="data row28 col0">0</td>
      <td id="T_8dbcb_row28_col1" class="data row28 col1">0</td>
      <td id="T_8dbcb_row28_col2" class="data row28 col2">0</td>
      <td id="T_8dbcb_row28_col3" class="data row28 col3">0</td>
      <td id="T_8dbcb_row28_col4" class="data row28 col4">5000</td>
      <td id="T_8dbcb_row28_col5" class="data row28 col5">28340</td>
      <td id="T_8dbcb_row28_col6" class="data row28 col6">74102</td>
      <td id="T_8dbcb_row28_col7" class="data row28 col7">128340</td>
      <td id="T_8dbcb_row28_col8" class="data row28 col8">202442</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row29" class="row_heading level0 row29">29</th>
      <td id="T_8dbcb_row29_col0" class="data row29 col0">0</td>
      <td id="T_8dbcb_row29_col1" class="data row29 col1">0</td>
      <td id="T_8dbcb_row29_col2" class="data row29 col2">0</td>
      <td id="T_8dbcb_row29_col3" class="data row29 col3">0</td>
      <td id="T_8dbcb_row29_col4" class="data row29 col4">5000</td>
      <td id="T_8dbcb_row29_col5" class="data row29 col5">34133</td>
      <td id="T_8dbcb_row29_col6" class="data row29 col6">77584</td>
      <td id="T_8dbcb_row29_col7" class="data row29 col7">134133</td>
      <td id="T_8dbcb_row29_col8" class="data row29 col8">211718</td>
    </tr>
    <tr>
      <th id="T_8dbcb_level0_row30" class="row_heading level0 row30">Total:</th>
      <td id="T_8dbcb_row30_col0" class="data row30 col0">-28345</td>
      <td id="T_8dbcb_row30_col1" class="data row30 col1">85000</td>
      <td id="T_8dbcb_row30_col2" class="data row30 col2">15000</td>
      <td id="T_8dbcb_row30_col3" class="data row30 col3">0</td>
      <td id="T_8dbcb_row30_col4" class="data row30 col4">31655</td>
      <td id="T_8dbcb_row30_col5" class="data row30 col5">34133</td>
      <td id="T_8dbcb_row30_col6" class="data row30 col6">77584</td>
      <td id="T_8dbcb_row30_col7" class="data row30 col7">134133</td>
      <td id="T_8dbcb_row30_col8" class="data row30 col8">211718</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<div class="cell" data-tags="[]" data-execution_count="18">
<div class="cell-output cell-output-display" data-execution_count="18">
<p>The amortization duration is 23 years.</p>
</div>
</div>
<p>The amortization plan shows that the loan is payed back earlier. So that the entire rate could afterwards be invested.</p>
<p>If we compare the <em>Total</em> row values of both scenarios we see that the interest rates paid to the bank is less, when the extra payment is done. Nonetheless both Net Worth values are bigger in the first scenario, when the money is invested.</p>
<p>So, <span class="emoji" data-emoji="bust_in_silhouette">👤</span> was right! But …</p>
</section>
<section id="comparing-the-strategies" class="level1">
<h1>Comparing the strategies</h1>
<p>Finally let’s compare the Net Worh values of both scenarios by calculating their difference (<code>&lt;&gt;</code>).</p>
<div class="cell" data-tags="[]" data-execution_count="19">
<div class="cell-output cell-output-display" data-execution_count="19">

<style type="text/css">
#T_334a5 th.row30 {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
}
#T_334a5 td.row30 {
  border-top: 1px solid gray;
  border-bottom: 1px solid gray;
}
#T_334a5 table {
  border-spacing: 2px;
}
#T_334a5 thead {
  border: 1px solid gray;
}
#T_334a5 th {
  text-align: center;
  padding: 4.5px;
}
#T_334a5 th.col_heading {
  border: 1px solid gray;
}
#T_334a5 tbody {
  border: 1px solid gray;
}
#T_334a5 td {
  text-align: center;
  border-left: 1px solid gray;
  border-right: 1px solid gray;
}
#T_334a5 th.col-1 {
  border-left: 1px solid gray;
}
#T_334a5 td.col-1 {
  border-left: 1px solid gray;
}
#T_334a5 th.col-1 {
  border-right: 1px solid gray;
}
#T_334a5 td.col-1 {
  border-right: 1px solid gray;
}
#T_334a5_row0_col1, #T_334a5_row1_col1, #T_334a5_row1_col4, #T_334a5_row2_col1 {
  width: 100px;
  border-right: 1px solid gray;
  width: 100px;
  border-right: 1px solid gray;
}
#T_334a5_row2_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #cee666 12.0%, #cee666 15.5%, transparent 15.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row3_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 11.8%, #ff2500 11.8%, #ff2500 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row3_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #c9e466 12.0%, #c9e466 17.1%, transparent 17.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row4_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 11.5%, #ff2400 11.5%, #ff2400 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row4_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #c3e166 12.0%, #c3e166 18.9%, transparent 18.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row5_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 11.2%, #ff2300 11.2%, #ff2300 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row5_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #bdde66 12.0%, #bdde66 20.8%, transparent 20.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row6_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 10.9%, #ff2200 10.9%, #ff2200 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row6_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #b7db66 12.0%, #b7db66 22.8%, transparent 22.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row7_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 10.6%, #ff2100 10.6%, #ff2100 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row7_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #b0d866 12.0%, #b0d866 24.9%, transparent 24.9%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row8_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 10.3%, #ff2000 10.3%, #ff2000 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row8_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #a8d366 12.0%, #a8d366 27.2%, transparent 27.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row9_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 10.0%, #ff1f00 10.0%, #ff1f00 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row9_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #a1d066 12.0%, #a1d066 29.7%, transparent 29.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row10_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 9.6%, #ff1e00 9.6%, #ff1e00 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row10_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #98cc66 12.0%, #98cc66 32.3%, transparent 32.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row11_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 9.2%, #ff1d00 9.2%, #ff1d00 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row11_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #8fc766 12.0%, #8fc766 35.1%, transparent 35.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row12_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 8.8%, #ff1c00 8.8%, #ff1c00 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row12_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #86c266 12.0%, #86c266 38.0%, transparent 38.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row13_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 8.4%, #ff1a00 8.4%, #ff1a00 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row13_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #7cbe66 12.0%, #7cbe66 41.2%, transparent 41.2%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row14_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 8.0%, #ff1900 8.0%, #ff1900 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row14_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #71b866 12.0%, #71b866 44.5%, transparent 44.5%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row15_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 7.5%, #ff1800 7.5%, #ff1800 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row15_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #66b266 12.0%, #66b266 48.1%, transparent 48.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row16_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 7.0%, #ff1600 7.0%, #ff1600 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row16_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #5aac66 12.0%, #5aac66 51.8%, transparent 51.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row17_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 6.5%, #ff1400 6.5%, #ff1400 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row17_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #4da666 12.0%, #4da666 55.8%, transparent 55.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row18_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 6.0%, #ff1300 6.0%, #ff1300 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row18_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #3f9f66 12.0%, #3f9f66 60.1%, transparent 60.1%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row19_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 5.4%, #ff1100 5.4%, #ff1100 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row19_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #319866 12.0%, #319866 64.6%, transparent 64.6%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row20_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 4.9%, #ff0f00 4.9%, #ff0f00 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row20_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #229066 12.0%, #229066 69.3%, transparent 69.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row21_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 4.3%, #ff0d00 4.3%, #ff0d00 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row21_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #118866 12.0%, #118866 74.4%, transparent 74.4%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row22_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 3.7%, #ff0b00 3.7%, #ff0b00 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row22_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #008066 12.0%, #008066 79.7%, transparent 79.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row23_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 3.0%, #ff0900 3.0%, #ff0900 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row23_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #008066 12.0%, #008066 80.0%, transparent 80.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row24_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 2.3%, #ff0700 2.3%, #ff0700 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row24_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #259266 12.0%, #259266 68.3%, transparent 68.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row25_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 1.7%, #ff0500 1.7%, #ff0500 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row25_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #50a866 12.0%, #50a866 54.8%, transparent 54.8%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row26_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 1.2%, #ff0300 1.2%, #ff0300 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row26_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #82c066 12.0%, #82c066 39.3%, transparent 39.3%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row27_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 0.7%, #ff0200 0.7%, #ff0200 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row27_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 12.0%, #badc66 12.0%, #badc66 21.7%, transparent 21.7%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row28_col1 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 0.3%, #ff0100 0.3%, #ff0100 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row28_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, transparent 1.8%, #ff0500 1.8%, #ff0500 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
#T_334a5_row29_col1, #T_334a5_row29_col4, #T_334a5_row30_col1, #T_334a5_row30_col4 {
  width: 100px;
  border-right: 1px solid gray;
  background: linear-gradient(90deg, #ff0000 12.0%, transparent 12.0%) no-repeat center;
  background-size: 100% 80.0%;
}
</style>
<table id="T_334a5">
  <thead>
    <tr>
      <th class="index_name level0"></th>
      <th id="T_334a5_level0_col0" class="col_heading level0 col0" colspan="3">Net Worth (w/o appreciation)</th>
      <th id="T_334a5_level0_col3" class="col_heading level0 col3" colspan="3">Net Worth (with appreciation)</th>
    </tr>
    <tr>
      <th class="index_name level1">Year</th>
      <th id="T_334a5_level1_col0" class="col_heading level1 col0">Investment</th>
      <th id="T_334a5_level1_col1" class="col_heading level1 col1">&lt;&gt;</th>
      <th id="T_334a5_level1_col2" class="col_heading level1 col2">Extra Payment</th>
      <th id="T_334a5_level1_col3" class="col_heading level1 col3">Investment</th>
      <th id="T_334a5_level1_col4" class="col_heading level1 col4">&lt;&gt;</th>
      <th id="T_334a5_level1_col5" class="col_heading level1 col5">Extra Payment</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th id="T_334a5_level0_row0" class="row_heading level0 row0">0</th>
      <td id="T_334a5_row0_col0" class="data row0 col0">0</td>
      <td id="T_334a5_row0_col1" class="data row0 col1">0</td>
      <td id="T_334a5_row0_col2" class="data row0 col2">0</td>
      <td id="T_334a5_row0_col3" class="data row0 col3"></td>
      <td id="T_334a5_row0_col4" class="data row0 col4"></td>
      <td id="T_334a5_row0_col5" class="data row0 col5"></td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row1" class="row_heading level0 row1">1</th>
      <td id="T_334a5_row1_col0" class="data row1 col0">2500</td>
      <td id="T_334a5_row1_col1" class="data row1 col1">0</td>
      <td id="T_334a5_row1_col2" class="data row1 col2">2500</td>
      <td id="T_334a5_row1_col3" class="data row1 col3">2550</td>
      <td id="T_334a5_row1_col4" class="data row1 col4">0</td>
      <td id="T_334a5_row1_col5" class="data row1 col5">2550</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row2" class="row_heading level0 row2">2</th>
      <td id="T_334a5_row2_col0" class="data row2 col0">20062</td>
      <td id="T_334a5_row2_col1" class="data row2 col1">0</td>
      <td id="T_334a5_row2_col2" class="data row2 col2">20062</td>
      <td id="T_334a5_row2_col3" class="data row2 col3">20267</td>
      <td id="T_334a5_row2_col4" class="data row2 col4">606</td>
      <td id="T_334a5_row2_col5" class="data row2 col5">20873</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row3" class="row_heading level0 row3">3</th>
      <td id="T_334a5_row3_col0" class="data row3 col0">23109</td>
      <td id="T_334a5_row3_col1" class="data row3 col1">-45</td>
      <td id="T_334a5_row3_col2" class="data row3 col2">23064</td>
      <td id="T_334a5_row3_col3" class="data row3 col3">23580</td>
      <td id="T_334a5_row3_col4" class="data row3 col4">896</td>
      <td id="T_334a5_row3_col5" class="data row3 col5">24476</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row4" class="row_heading level0 row4">4</th>
      <td id="T_334a5_row4_col0" class="data row4 col0">26233</td>
      <td id="T_334a5_row4_col1" class="data row4 col1">-92</td>
      <td id="T_334a5_row4_col2" class="data row4 col2">26141</td>
      <td id="T_334a5_row4_col3" class="data row4 col3">27089</td>
      <td id="T_334a5_row4_col4" class="data row4 col4">1207</td>
      <td id="T_334a5_row4_col5" class="data row4 col5">28295</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row5" class="row_heading level0 row5">5</th>
      <td id="T_334a5_row5_col0" class="data row5 col0">29436</td>
      <td id="T_334a5_row5_col1" class="data row5 col1">-142</td>
      <td id="T_334a5_row5_col2" class="data row5 col2">29294</td>
      <td id="T_334a5_row5_col3" class="data row5 col3">30804</td>
      <td id="T_334a5_row5_col4" class="data row5 col4">1539</td>
      <td id="T_334a5_row5_col5" class="data row5 col5">32343</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row6" class="row_heading level0 row6">6</th>
      <td id="T_334a5_row6_col0" class="data row6 col0">32721</td>
      <td id="T_334a5_row6_col1" class="data row6 col1">-195</td>
      <td id="T_334a5_row6_col2" class="data row6 col2">32527</td>
      <td id="T_334a5_row6_col3" class="data row6 col3">34736</td>
      <td id="T_334a5_row6_col4" class="data row6 col4">1894</td>
      <td id="T_334a5_row6_col5" class="data row6 col5">36630</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row7" class="row_heading level0 row7">7</th>
      <td id="T_334a5_row7_col0" class="data row7 col0">36090</td>
      <td id="T_334a5_row7_col1" class="data row7 col1">-250</td>
      <td id="T_334a5_row7_col2" class="data row7 col2">35840</td>
      <td id="T_334a5_row7_col3" class="data row7 col3">38895</td>
      <td id="T_334a5_row7_col4" class="data row7 col4">2274</td>
      <td id="T_334a5_row7_col5" class="data row7 col5">41169</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row8" class="row_heading level0 row8">8</th>
      <td id="T_334a5_row8_col0" class="data row8 col0">39543</td>
      <td id="T_334a5_row8_col1" class="data row8 col1">-308</td>
      <td id="T_334a5_row8_col2" class="data row8 col2">39236</td>
      <td id="T_334a5_row8_col3" class="data row8 col3">43293</td>
      <td id="T_334a5_row8_col4" class="data row8 col4">2678</td>
      <td id="T_334a5_row8_col5" class="data row8 col5">45971</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row9" class="row_heading level0 row9">9</th>
      <td id="T_334a5_row9_col0" class="data row9 col0">43085</td>
      <td id="T_334a5_row9_col1" class="data row9 col1">-369</td>
      <td id="T_334a5_row9_col2" class="data row9 col2">42717</td>
      <td id="T_334a5_row9_col3" class="data row9 col3">47940</td>
      <td id="T_334a5_row9_col4" class="data row9 col4">3110</td>
      <td id="T_334a5_row9_col5" class="data row9 col5">51050</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row10" class="row_heading level0 row10">10</th>
      <td id="T_334a5_row10_col0" class="data row10 col0">46717</td>
      <td id="T_334a5_row10_col1" class="data row10 col1">-432</td>
      <td id="T_334a5_row10_col2" class="data row10 col2">46284</td>
      <td id="T_334a5_row10_col3" class="data row10 col3">52851</td>
      <td id="T_334a5_row10_col4" class="data row10 col4">3570</td>
      <td id="T_334a5_row10_col5" class="data row10 col5">56421</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row11" class="row_heading level0 row11">11</th>
      <td id="T_334a5_row11_col0" class="data row11 col0">50441</td>
      <td id="T_334a5_row11_col1" class="data row11 col1">-499</td>
      <td id="T_334a5_row11_col2" class="data row11 col2">49942</td>
      <td id="T_334a5_row11_col3" class="data row11 col3">58036</td>
      <td id="T_334a5_row11_col4" class="data row11 col4">4060</td>
      <td id="T_334a5_row11_col5" class="data row11 col5">62096</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row12" class="row_heading level0 row12">12</th>
      <td id="T_334a5_row12_col0" class="data row12 col0">54260</td>
      <td id="T_334a5_row12_col1" class="data row12 col1">-569</td>
      <td id="T_334a5_row12_col2" class="data row12 col2">53690</td>
      <td id="T_334a5_row12_col3" class="data row12 col3">63511</td>
      <td id="T_334a5_row12_col4" class="data row12 col4">4581</td>
      <td id="T_334a5_row12_col5" class="data row12 col5">68092</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row13" class="row_heading level0 row13">13</th>
      <td id="T_334a5_row13_col0" class="data row13 col0">58175</td>
      <td id="T_334a5_row13_col1" class="data row13 col1">-643</td>
      <td id="T_334a5_row13_col2" class="data row13 col2">57532</td>
      <td id="T_334a5_row13_col3" class="data row13 col3">69289</td>
      <td id="T_334a5_row13_col4" class="data row13 col4">5136</td>
      <td id="T_334a5_row13_col5" class="data row13 col5">74424</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row14" class="row_heading level0 row14">14</th>
      <td id="T_334a5_row14_col0" class="data row14 col0">62191</td>
      <td id="T_334a5_row14_col1" class="data row14 col1">-720</td>
      <td id="T_334a5_row14_col2" class="data row14 col2">61471</td>
      <td id="T_334a5_row14_col3" class="data row14 col3">75384</td>
      <td id="T_334a5_row14_col4" class="data row14 col4">5725</td>
      <td id="T_334a5_row14_col5" class="data row14 col5">81109</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row15" class="row_heading level0 row15">15</th>
      <td id="T_334a5_row15_col0" class="data row15 col0">66308</td>
      <td id="T_334a5_row15_col1" class="data row15 col1">-801</td>
      <td id="T_334a5_row15_col2" class="data row15 col2">65507</td>
      <td id="T_334a5_row15_col3" class="data row15 col3">81813</td>
      <td id="T_334a5_row15_col4" class="data row15 col4">6351</td>
      <td id="T_334a5_row15_col5" class="data row15 col5">88164</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row16" class="row_heading level0 row16">16</th>
      <td id="T_334a5_row16_col0" class="data row16 col0">70530</td>
      <td id="T_334a5_row16_col1" class="data row16 col1">-885</td>
      <td id="T_334a5_row16_col2" class="data row16 col2">69645</td>
      <td id="T_334a5_row16_col3" class="data row16 col3">88592</td>
      <td id="T_334a5_row16_col4" class="data row16 col4">7016</td>
      <td id="T_334a5_row16_col5" class="data row16 col5">95608</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row17" class="row_heading level0 row17">17</th>
      <td id="T_334a5_row17_col0" class="data row17 col0">74860</td>
      <td id="T_334a5_row17_col1" class="data row17 col1">-974</td>
      <td id="T_334a5_row17_col2" class="data row17 col2">73886</td>
      <td id="T_334a5_row17_col3" class="data row17 col3">95737</td>
      <td id="T_334a5_row17_col4" class="data row17 col4">7721</td>
      <td id="T_334a5_row17_col5" class="data row17 col5">103459</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row18" class="row_heading level0 row18">18</th>
      <td id="T_334a5_row18_col0" class="data row18 col0">79299</td>
      <td id="T_334a5_row18_col1" class="data row18 col1">-1066</td>
      <td id="T_334a5_row18_col2" class="data row18 col2">78233</td>
      <td id="T_334a5_row18_col3" class="data row18 col3">103267</td>
      <td id="T_334a5_row18_col4" class="data row18 col4">8470</td>
      <td id="T_334a5_row18_col5" class="data row18 col5">111737</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row19" class="row_heading level0 row19">19</th>
      <td id="T_334a5_row19_col0" class="data row19 col0">83852</td>
      <td id="T_334a5_row19_col1" class="data row19 col1">-1163</td>
      <td id="T_334a5_row19_col2" class="data row19 col2">82689</td>
      <td id="T_334a5_row19_col3" class="data row19 col3">111199</td>
      <td id="T_334a5_row19_col4" class="data row19 col4">9264</td>
      <td id="T_334a5_row19_col5" class="data row19 col5">120463</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row20" class="row_heading level0 row20">20</th>
      <td id="T_334a5_row20_col0" class="data row20 col0">88520</td>
      <td id="T_334a5_row20_col1" class="data row20 col1">-1264</td>
      <td id="T_334a5_row20_col2" class="data row20 col2">87257</td>
      <td id="T_334a5_row20_col3" class="data row20 col3">119554</td>
      <td id="T_334a5_row20_col4" class="data row20 col4">10105</td>
      <td id="T_334a5_row20_col5" class="data row20 col5">129659</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row21" class="row_heading level0 row21">21</th>
      <td id="T_334a5_row21_col0" class="data row21 col0">93307</td>
      <td id="T_334a5_row21_col1" class="data row21 col1">-1369</td>
      <td id="T_334a5_row21_col2" class="data row21 col2">91938</td>
      <td id="T_334a5_row21_col3" class="data row21 col3">128351</td>
      <td id="T_334a5_row21_col4" class="data row21 col4">10996</td>
      <td id="T_334a5_row21_col5" class="data row21 col5">139347</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row22" class="row_heading level0 row22">22</th>
      <td id="T_334a5_row22_col0" class="data row22 col0">98216</td>
      <td id="T_334a5_row22_col1" class="data row22 col1">-1480</td>
      <td id="T_334a5_row22_col2" class="data row22 col2">96736</td>
      <td id="T_334a5_row22_col3" class="data row22 col3">137612</td>
      <td id="T_334a5_row22_col4" class="data row22 col4">11940</td>
      <td id="T_334a5_row22_col5" class="data row22 col5">149552</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row23" class="row_heading level0 row23">23</th>
      <td id="T_334a5_row23_col0" class="data row23 col0">103249</td>
      <td id="T_334a5_row23_col1" class="data row23 col1">-1595</td>
      <td id="T_334a5_row23_col2" class="data row23 col2">101655</td>
      <td id="T_334a5_row23_col3" class="data row23 col3">147360</td>
      <td id="T_334a5_row23_col4" class="data row23 col4">11985</td>
      <td id="T_334a5_row23_col5" class="data row23 col5">159345</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row24" class="row_heading level0 row24">24</th>
      <td id="T_334a5_row24_col0" class="data row24 col0">108411</td>
      <td id="T_334a5_row24_col1" class="data row24 col1">-1710</td>
      <td id="T_334a5_row24_col2" class="data row24 col2">106701</td>
      <td id="T_334a5_row24_col3" class="data row24 col3">157617</td>
      <td id="T_334a5_row24_col4" class="data row24 col4">9928</td>
      <td id="T_334a5_row24_col5" class="data row24 col5">167545</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row25" class="row_heading level0 row25">25</th>
      <td id="T_334a5_row25_col0" class="data row25 col0">113704</td>
      <td id="T_334a5_row25_col1" class="data row25 col1">-1815</td>
      <td id="T_334a5_row25_col2" class="data row25 col2">111889</td>
      <td id="T_334a5_row25_col3" class="data row25 col3">168408</td>
      <td id="T_334a5_row25_col4" class="data row25 col4">7541</td>
      <td id="T_334a5_row25_col5" class="data row25 col5">175949</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row26" class="row_heading level0 row26">26</th>
      <td id="T_334a5_row26_col0" class="data row26 col0">119131</td>
      <td id="T_334a5_row26_col1" class="data row26 col1">-1910</td>
      <td id="T_334a5_row26_col2" class="data row26 col2">117222</td>
      <td id="T_334a5_row26_col3" class="data row26 col3">179759</td>
      <td id="T_334a5_row26_col4" class="data row26 col4">4805</td>
      <td id="T_334a5_row26_col5" class="data row26 col5">184563</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row27" class="row_heading level0 row27">27</th>
      <td id="T_334a5_row27_col0" class="data row27 col0">124697</td>
      <td id="T_334a5_row27_col1" class="data row27 col1">-1993</td>
      <td id="T_334a5_row27_col2" class="data row27 col2">122704</td>
      <td id="T_334a5_row27_col3" class="data row27 col3">191696</td>
      <td id="T_334a5_row27_col4" class="data row27 col4">1697</td>
      <td id="T_334a5_row27_col5" class="data row27 col5">193393</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row28" class="row_heading level0 row28">28</th>
      <td id="T_334a5_row28_col0" class="data row28 col0">130404</td>
      <td id="T_334a5_row28_col1" class="data row28 col1">-2065</td>
      <td id="T_334a5_row28_col2" class="data row28 col2">128340</td>
      <td id="T_334a5_row28_col3" class="data row28 col3">204247</td>
      <td id="T_334a5_row28_col4" class="data row28 col4">-1805</td>
      <td id="T_334a5_row28_col5" class="data row28 col5">202442</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row29" class="row_heading level0 row29">29</th>
      <td id="T_334a5_row29_col0" class="data row29 col0">136257</td>
      <td id="T_334a5_row29_col1" class="data row29 col1">-2124</td>
      <td id="T_334a5_row29_col2" class="data row29 col2">134133</td>
      <td id="T_334a5_row29_col3" class="data row29 col3">213841</td>
      <td id="T_334a5_row29_col4" class="data row29 col4">-2124</td>
      <td id="T_334a5_row29_col5" class="data row29 col5">211718</td>
    </tr>
    <tr>
      <th id="T_334a5_level0_row30" class="row_heading level0 row30">Total:</th>
      <td id="T_334a5_row30_col0" class="data row30 col0">136257</td>
      <td id="T_334a5_row30_col1" class="data row30 col1">-2124</td>
      <td id="T_334a5_row30_col2" class="data row30 col2">134133</td>
      <td id="T_334a5_row30_col3" class="data row30 col3">213841</td>
      <td id="T_334a5_row30_col4" class="data row30 col4">-2124</td>
      <td id="T_334a5_row30_col5" class="data row30 col5">211718</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<p>As seen before, the Net Worth of the investment scenario is higher at the very end. But what if we take appreciation into account and sold the house right after it’s been payed of or even before. In this case the scenario with the extra payment can be superior (depending of the value of the reference rate).</p>
<p>By the way, in case the house looses value (negative appreciation) the extra payment and selling the house early can have a very negative effect.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Even when the math seems easy it’s always a good idea to open a spreadsheet and plot some charts to see what’s going on and how different scenarios play out.</p>
</section>
<section id="ressources" class="level1">
<h1>Ressources</h1>
<section id="interactive-notebook" class="level2">
<h2 class="anchored" data-anchor-id="interactive-notebook">Interactive notebook</h2>
<ul>
<li>Play with the numbers: <a href="https://colab.research.google.com/github/joatom/blog/blob/master/assets/resources/notebooks/2022-11-13-repay-vs-invest.ipynb"><img src="https://joatom.github.io/blog/assets/colab.svg?sanitize=true'" class="img-fluid" alt="notebook"></a></li>
<li>Downloading the notebook: <a href="https://github.com/joatom/blog/blob/master/assets/resources/notebooks/2022-11-13-repay-vs-invest.ipynb"><img src="https://joatom.github.io/blog/assets/github.svg?sanitize=true'" class="img-fluid" alt="notebook"></a></li>
</ul>
</section>
<section id="snippets" class="level2">
<h2 class="anchored" data-anchor-id="snippets">Snippets</h2>
<ul>
<li><a href="../../snippets/2022-11-20-recursive-sql/index.html">Recursive SQL</a></li>
<li><a href="../../snippets/2022-11-20-pandas-styles/index.html">Styles in Pandas</a></li>
</ul>


</section>
</section>

 ]]></description>
  <category>Finance</category>
  <guid>https://joatom.github.io/blog/posts/2022-11-13-repay-vs-invest/index.html</guid>
  <pubDate>Sat, 12 Nov 2022 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2022-11-13-repay-vs-invest/house.png" medium="image" type="image/png" height="102" width="144"/>
</item>
<item>
  <title>Art and Diffusion</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/index.html</link>
  <description><![CDATA[ 




<section id="human-machine-interaction" class="level1">
<h1>Human-machine interaction</h1>
<p>In summer 2016 I spent a day with <a href="http://www.maximilian-tomasoni.com/">my brother</a> at his studio in the <a href="https://www.kloster-bentlage.de/en/kunst-kultur-en/bentlage-print-society">Monastery of Bentlage</a> to try out fine art printing. The monastery is in the countryside and is a very calming place to escape from everyday life. As preparation for the workshop my brother asked me to prepare a drawing. I’m not a good drawer, my hands are shaky and whatever comes out of the pencil never looks like what I intended to draw. Luckily I was experimenting with edge-detecting algorithms at that time. <a href="https://github.com/joatom/ART-playing-with-rob">The algorithm</a> I was implementing was suitable to create an image that looked like a drawing. I took a picture of my son where he was playing with the vacuum robot and run my program to extract the contours of my son and the vacuum robot. The setting where I generate a drawing with an algorithm and the theme of my son playing with a robot was very appealing. In the workshop we used the generated drawing as template for my artwork. The printing technique we applied to create the artwork is called etching. The classical look and feel of this centuries old technique was a nice contrast to the rather modern theme - a kid playing with a smart robot. Yet, it made the interaction between humans and robots look pretty normal. And I was proud of my amateurish accomplishments.</p>
<p><img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/Druck_rob2.jpg" class="img-fluid"></p>
<p>A few weeks later I was attending a TEDx event in Münster. One of the <a href="https://www.youtube.com/watch?v=oVE5rRJa0D8">talks</a> was given by the artist <a href="https://www.romanlipski.com/">Roman Lipski</a> and the art collective <a href="http://www.yqp.computer/">YQP</a>. Surprisingly, they introduced their concept of art where the artist interacts with an Artificial Muse. The Muse (an ML algorithm) learned to imitate Lipski’s style of painting by “analysing” his artworks. The painter than used the generated images as inspiration (Muse) to paint new pictures on canvas. This was in 2016 shortly after google shared their <a href="http://ai.googleblog.com/2015/06/inceptionism-going-deeper-into-neural.html">Deep Dream</a> accomplishments and <a href="http://arxiv.org/abs/1508.06576">Style Transfer</a> was a hot topic in the tech community. Lipski and his team envisioned the natural interaction between AI and humans to create art. In 2016 I was not practicing ML yet, nor was I heavily involved into art, apart from seeing my brother from time to time. But after this TEDx talk it was obvious that computer generated images will have a high impact on arts in the future. But will it be interruptive in the sense that artists become obsolete?</p>
</section>
<section id="what-is-art-or-why-is-art" class="level1">
<h1>What is art? Or, why is art?</h1>
<p>There are countless definitions and strong opinions about <em>What is Art?</em> and what not. Let’s ignore this question for now and rather focus on another question. <em>Why does Art exists?</em> As I said, I’m not an art professional, but a few answers are obvious to me.</p>
<p>Art exists because of,</p>
<ul>
<li>the human nature:
<ul>
<li>people love to be creative,</li>
<li>people love beauty,</li>
<li>people use different forms to express feelings,</li>
<li>people love stories and imagination</li>
</ul></li>
<li>political and sociological activities:
<ul>
<li>people, who are suppressed, can hide critics in art,</li>
<li>people use art to defame opponents,</li>
<li>people can visualize opinions …</li>
</ul></li>
</ul>
<p>There certainly are many more categories and reasons why art exists. However, a few things stand out.</p>
<ul>
<li>Art is a highly influential medium to form opinions using the imaginary power of the viewer. To the point where the viewer’s imagination can go way beyond the obvious object. For example, if you look at a picture with a house in a landscape and the rich and shiny oil colors, your imagination can take you from the museum right to Tuscany.</li>
<li>People also practice art for their own sake.</li>
</ul>
<p>So why do we get confused about the question <em>What is art?</em> Some of the techniques that are used in art are also used for other purpose. Let’s take drawing as an example. An architect uses drawing technics to plot the layout of a house. The plot may including information about wall measures, connection for water and electricity, etc. Usually you wouldn’t consider that kind of plot as a piece of art, though it still requires a bit of imagination from the viewer. The technical drawing must be easy accessible for the interpreter and thus provides the obvious information (e.g.&nbsp;measures of the wall in centimeters). However, sometimes a technical drawing can diffuses into art. although it still serves the original purpose. A technical drawing can be of such of an elegance that it my raise strong feelings in the viewer - or the drawer. Than it becomes art. Think of Christo’s drawings. Don’t you feel joy or fascination when you are looking at them?</p>
<p>Back to the question, <em>will advancements in AI/ML disrupt and takeover Art?</em> No! Every argument I used to describe the purpose of art involves humans at some point. There is no perception of beauty or expression of feelings without humans nor is there any political or social implications without humans. <em>Will AI/ML heavily influence the arts and creativity?</em> Yes! We will gain an impressive tool set and new techniques. And we can see that Computers are already being creative in certain environments (e.g.&nbsp;generative ML-models).</p>
</section>
<section id="diffusion" class="level1">
<h1>Diffusion</h1>
<p>Computers are magical and support you being creative. I remember in the 90’s when we used to create flyers for our parties. The visual effects of the graphic programs were so fascinating that we had to use almost all of them. The flyers always ended up looking like invitations to psychedelic 70’s parties rather then to underground techno parties. Some 25 years later the algorithms are getting very sophisticated. Images can be created out of noise or text. Existing images can be transformed to adapt the style of another painter or to look totally different. At the time of writing this article <a href="https://arxiv.org/abs/2112.10752">Diffusion Models</a> are trending. Their strength lies in modification of existing images by adding noise to the image and then transforming the image while reducing the added noise again. The models can be combined with text encoders. You can basically tell the algorithm how you want a given image to change and how you want it to look like.</p>
<p>This summer my brother called me because someone dropped out of a workshop he was offering. And if I wanted to join spontaneously. I signed up for the two day offside and because I missed the first day of the workshop I needed to come up with a good template quickly. I decided to use one of the publicly available Diffusion Models to get started. I picked <a href="https://colab.research.google.com/github/alembics/disco-diffusion/blob/main/Disco_Diffusion.ipynb">Disco Diffusion</a>, where a handy <a href="https://www.youtube.com/watch?v=wIw59kAU6u8">tutorial</a> was available. I added one of my favorite photos of the kids to the model and as text input I asked the model to change the picture into something like “<em>Three children waiting for a bus in a photorealistic cyberpunk town. Red, blue, black, dark cyberpunk scheme.</em>”. I did a bit of parameter tuning and after two hours I had a few templates to work with on the workshop.</p>

<table>
<tbody><tr>
<td>
<img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/Foto.png" width="400px">
</td>
<td>
<img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/Diffusion_merged.png" width="400px">
</td>
</tr>
<tr>
<td>
Original photo (censored)
</td>
<td>
Combination of two generated images
</td>
</tr>

</tbody></table>
<p>On this workshop we applied screen printing technique and due to time restrictions we were limited to two (color) layers. I used the original photo and the generated images as inspiration for the print. I wouldn’t call it Muse in my case because it used the images as template with a few abstractions. But if I’d be a professional artist I would definitely use the algorithms somehow.</p>

<table>
<tbody><tr>
<td>
<img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/ws1.jpg" width="130px">
</td>
<td>
<img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/ws2.jpg" width="130px">
</td>
<td>
<img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/ws3.jpg" width="130px">
</td>
<td>
<img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/ws4.jpg" width="130px">
</td>
<td>
<img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/ws5.jpg" width="130px">
</td>
<td>
<img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/ws6.jpg" width="130px">
</td>
</tr>

</tbody></table>
<p>For me as an amateur the fulfillment lays rather in the relaxing hours, escaping daily routines, interacting with people, while handcrafting some little artwork to use as Christmas card or to hang on my walls at home.</p>
<p><img src="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/Diffusion_Bentlage_gr_bl.png" class="img-fluid"></p>
</section>
<section id="resources" class="level1">
<h1>Resources</h1>
<ul>
<li>Homepage Maximilian Tomasoni: http://www.maximilian-tomasoni.com/</li>
<li>Homepage Monastery of Bentlage: https://www.kloster-bentlage.de/en/kunst-kultur-en/bentlage-print-society</li>
<li>Edge-detecting algo for workshop in 2016: https://github.com/joatom/ART-playing-with-rob</li>
<li>How Art Meets Artificial Intelligence, YQP and Roman Lipski, TEDxMünster, 2016. https://www.youtube.com/watch?v=oVE5rRJa0D8.</li>
<li>“Inceptionism: Going Deeper into Neural Networks.” Accessed August 29, 2022. http://ai.googleblog.com/2015/06/inceptionism-going-deeper-into-neural.html.</li>
<li>Gatys, Leon A., Alexander S. Ecker, and Matthias Bethge. “A Neural Algorithm of Artistic Style.” arXiv, September 2, 2015. https://doi.org/10.48550/arXiv.1508.06576.</li>
<li>Ho, Jonathan, Ajay Jain, and Pieter Abbeel. “Denoising Diffusion Probabilistic Models.” arXiv, December 16, 2020. https://doi.org/10.48550/arXiv.2006.11239.</li>
<li>Rombach, Robin, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Björn Ommer. “High-Resolution Image Synthesis with Latent Diffusion Models.” arXiv, April 13, 2022. https://doi.org/10.48550/arXiv.2112.10752.</li>
<li>Quick Start on Using AI to Render Images Using Disco Diffusion, 2022. https://www.youtube.com/watch?v=wIw59kAU6u8.</li>
<li>https://github.com/alembics/disco-diffusion, and Katherine Crowson. “Disco Diffusion v5.61 - Now with Portrait_generator_v001,” n.d. https://colab.research.google.com/github/alembics/disco-diffusion/blob/main/Disco_Diffusion.ipynb.</li>
</ul>


</section>

 ]]></description>
  <category>Art</category>
  <category>ML</category>
  <category>Society</category>
  <guid>https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/index.html</guid>
  <pubDate>Mon, 29 Aug 2022 22:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2022-08-30-art_diffusion/Diffusion_Bentlage_r_bl.png" medium="image" type="image/png" height="88" width="144"/>
</item>
<item>
  <title>Tackling Projects like a ML Challenge</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2022-04-28-ml-pm/index.html</link>
  <description><![CDATA[ 




<p align="center">
<img src="https://joatom.github.io/blog/posts/2022-04-28-ml-pm/ml_pm.png" class="img-fluid">
</p>
<section id="welcome-to-the-party" class="level1">
<h1>Welcome to the party</h1>
<p align="center">
<span class="emoji" data-emoji="cocktail">🍸</span>
</p>
<p>I’ve lately volunteered for a small side project. The task was to build a curriculum for a technical topic. I was joined by a few people who shared similar interest in the technical topic. The team members were located in different countries around the world and we only recently got to know each other.</p>
</section>
<section id="no-time-to-waste" class="level1">
<h1>No time to waste</h1>
<p align="center">
<span class="emoji" data-emoji="running">🏃</span>
</p>
<p>Since everybody was busy with their regular jobs we quickly wanted to get started and decided to gather learning content (YouTube, Web Pages, Learning Platforms, …) individually. We scheduled our second meeting to share the learning material that everybody had collected in the meantime. We quickly came up with a bunch of great resources. So we spent this second session to randomly present the resources to each other. At the end of the meeting I was puzzled. I had seen so many resources that where totally different than the ones I came up with. And I couldn’t imagine on how to put them together to a curriculum. Without any structure the great resources were kind of useless. Moreover, our newly formed team was also lacking of structure, which made it even harder to solve our task in a short time.</p>
<p>After the first two sessions it was obvious. We had to treat our task like a small <em>project</em>!</p>
</section>
<section id="pitfalls-when-you-rush" class="level1">
<h1>Pitfalls when you rush</h1>
<p align="center">
<span class="emoji" data-emoji="construction">🚧</span>
</p>
<p>At this early stage it was still easy to readjust and start over again. But before we checkout the changes we made, let’s take a look what went went wrong so-fare.</p>
<section id="who-are-we" class="level2">
<h2 class="anchored" data-anchor-id="who-are-we">Who are we?</h2>
<p>The <em>dynamics of a team</em> can be described in <span class="citation" data-cites="tuckman_developmental_1965">Tuckman (1965)</span>’s four stages,</p>
<ul>
<li><strong>forming</strong>, where group members try <em>“to identify the boundaries of both interpersonal and task behaviors”</em>,</li>
<li><strong>storming</strong>, where interpersonal conflicts arise, hence everyone searches for her/his role in the team,</li>
<li><strong>norming</strong>, where everyone settles for her/his role in the team and new group <em>”standards evolve”</em>,</li>
<li><strong>performing</strong>, where finally <em>”the group energy is channeled into the task”</em> and the group works efficiently.</li>
</ul>
<p>Because everyone in our team was short in time we tried to skip the <em>Storming</em> and <em>Norming</em> stage and go straight to <em>Performing</em>. But Tuckman’s stages seem the work like physical laws, a group can’t circumvent certain stages. Even if formal hierarchies already exist, humans need to build trust first and find their role in the team. This is only possible through human interaction, which takes time. Though, the <em>Storming</em> and <em>Norming</em> phase can be very short if you take on a very standardized role to execute very standardized work. Which wasn’t the case in our small creative (non standardized) project.</p>
</section>
<section id="who-is-it-for" class="level2">
<h2 class="anchored" data-anchor-id="who-is-it-for">Who is it for?</h2>
<p>We all had a common sense of the technical topic we were supposed to cover. But the field of the technical topic is huge, with all levels of difficulties. At this point there also was only a <em>vague definition</em> of the audience of the curriculum.</p>
</section>
<section id="how-are-we-gonna-make-it" class="level2">
<h2 class="anchored" data-anchor-id="how-are-we-gonna-make-it">How are we gonna make it?</h2>
<p>We also didn’t talk in advance what steps we would take to reach our goal. Hence, we didn’t set a framework.</p>
<p>The overall situation could basically be summarized as: &gt; A bunch of ambitious strangers from different cultural background were short in time and wanted to solve a vaguely defined task without a framework.</p>
</section>
</section>
<section id="its-time-for-a-reset" class="level1">
<h1>It’s time for a reset</h1>
<p align="center">
<span class="emoji" data-emoji="previous_track_button">⏮️</span>
</p>
<p>After we identified the obvious obstacles, we thought on how to readjust our way of working.</p>
<section id="obstacle-1-being-short-on-time" class="level2">
<h2 class="anchored" data-anchor-id="obstacle-1-being-short-on-time">Obstacle 1: <em>being short on time</em></h2>
<p>The obvious adjustment would have been to take more time for the task at hand. Unfortunately this was not the preferred option in this case, because we volunteered for a side project that shouldn’t badly effect the regular work we had to do. But we could save some time by avoiding ineffective meetings, hence being well prepared when attending a meeting. ## Obstacle 2: <em>working in a new team</em> The time restriction was hard, so we sacrificed team building. That’s always a huge risk and relies on the hope that everyone acts professionally and has the same intrinsic motivation. Luckily, it worked out well. ## Obstacle 3: <em>vague goals</em> We had to define the goals more precisely. ## Obstacle 4: <em>missing framework</em> We had to define a structure on how to approach the task. Given the time limit and the interpersonal constraints this was the part with the highest chance to make a positive impact on the outcome of our project. And that’s what the rest of this blog will focus on.</p>
</section>
</section>
<section id="give-it-all-some-structure" class="level1">
<h1>Give it all some structure</h1>
<p align="center">
<span class="emoji" data-emoji="office">🏢</span>
</p>
<p>There are certainly many ways to give a project some structure. But since we were gathering material for a technical topic I found it amusing to tackle the project like a small Machine Learning (ML) project.</p>
<p>A ML project can, for instance, be defined in these steps:</p>
<ol type="1">
<li>Define the overall goal (vision) <span class="emoji" data-emoji="framed_picture">🖼️</span></li>
<li>Re/define the objectives <span class="emoji" data-emoji="paintbrush">🖌️</span></li>
<li>Look at the data <span class="emoji" data-emoji="mag_right">🔎</span></li>
<li>Define metrics <span class="emoji" data-emoji="dart">🎯</span></li>
<li>Define test strategy <span class="emoji" data-emoji="clipboard">📋</span></li>
<li>Define architecture <span class="emoji" data-emoji="building_construction">🏗️</span><br>
</li>
<li>Prepare data <span class="emoji" data-emoji="construction_worker">👷</span></li>
<li>Execute <span class="emoji" data-emoji="arrow_forward">▶️</span></li>
<li>Evaluate <span class="emoji" data-emoji="bar_chart">📊</span></li>
<li>Iterate over steps 2 to 10 <span class="emoji" data-emoji="repeat">🔁</span></li>
</ol>
<p>Let’s briefly look what these steps could mean for a <strong>ML project</strong>. And what the outcomes of each step are. Say a cook we wants to build a classifier for flower pictures to identify herbs.</p>
<section id="state-your-overall-goal" class="level2">
<h2 class="anchored" data-anchor-id="state-your-overall-goal">1. State your overall goal <span class="emoji" data-emoji="framed_picture">🖼️</span></h2>
<p>Write the foremost goal down in huge letters and pin it on the wall. <em>A classifier to predict flowers.</em> Every decision you make from now on must follow this goal. If you lose yourself in details during the process you can always refocus by looking at the wall reading the huge letters stating your overall goal. ## 2. Re/define the objectives <span class="emoji" data-emoji="paintbrush">🖌️</span> Figure out what is important and what not. Define the objectives precisely (e.g.&nbsp;through User Stories). <em>”As a cook I want the classifier to recognize all herbs in my garden, so that I don’t use the poisoning ones in my meals.”</em> ## 3. Look at the data <span class="emoji" data-emoji="mag_right">🔎</span> Check the quality and structure of the data. Do exploratory data analysis (EDA). <em>”Some of the pictures of the flowers and herbs are zoomed in, some are in panorama view and show many flowers. Classes are balanced.”</em> ## 4. Define metrics <span class="emoji" data-emoji="dart">🎯</span> Decide what your algorithm should optimize for. <em>The cook will zoom in closely the take the picture. And since the training targets are well balanced, we choose Accuracy as metric.</em> ## 5. Define test strategy <span class="emoji" data-emoji="clipboard">📋</span> With the knowledge from EDA we decide on a test strategy and identify what is missing to implement the test strategy. “<em>A stratified-KFold-split makes sense, but the labels still need some cleanup.</em>” ## 6. Define architecture <span class="emoji" data-emoji="building_construction">🏗️</span> We always want to start with a simple baseline in the first iteration. Later-on the architecture can get more complex, e.g.&nbsp;through ensembling. <em>Let’s start with a Resnet18.</em> ## 7. Prepare data <span class="emoji" data-emoji="construction_worker">👷</span> Clean and enrich the data. <em>There is enough data. Remove the panorama shots. Clean the labels. Define the train/test/validation data sets.</em> ## 8. Execute <span class="emoji" data-emoji="arrow_forward">▶️</span> Build a model and train. ## 9. Evaluate <span class="emoji" data-emoji="bar_chart">📊</span> Evaluate the model against the metrics. <em>Accuracy is only 80%. Let’s look at the most miss classified data and try to change the architecture in the next iteration.</em></p>
<p>I follow this procedure when I’m participating in Kaggle competition almost every time and I’m sure others follow similar approaches. Depending on how well prepared the data already is, some steps may be executed in slightly different order, e.g.&nbsp;architecture choice can also happen after data preparation. But for sure you want to have a clear picture from the very beginning for what to optimize for and how you evaluate it.</p>
</section>
</section>
<section id="transfer-learning-to-project-management" class="level1">
<h1>Transfer Learning to Project Management</h1>
<p align="center">
<span class="emoji" data-emoji="thought_balloon">💭</span>
</p>
<p>How can the structure of a ML-Project now be applied to my small side project - building a curriculum for a technical topic?</p>
<section id="define-the-overall-goal" class="level2">
<h2 class="anchored" data-anchor-id="define-the-overall-goal">1. Define the overall goal <span class="emoji" data-emoji="framed_picture">🖼️</span></h2>
<p>We want to collect learning material so that people with different skill-sets and backgrounds can learn about the technical topic to use on in their jobs.</p>
</section>
<section id="redefine-the-objectives" class="level2">
<h2 class="anchored" data-anchor-id="redefine-the-objectives">2. Re/define the objectives <span class="emoji" data-emoji="paintbrush">🖌️</span></h2>
<p>The audience consists of highly educated professionals, that need the technical knowledge for different reasons. Some need a deep technical understanding to use it as a Software Developer, some need a broad overview for their role as Project Manager and some just want to learn about the topic out of curiosity. Because of the heterogeneity of the audience I found it suitable to define different <strong>Personas</strong>. E.g. <em>Andrea, Project Manager, doesn’t like to be fooled by the nerds during the meetings when they talk in their jargon.</em> or <em>Peter, Java evangelist, curious about that hot topic everybody is talking about. “Can’t be that hard, to just learn another language.”</em>. With the personas in place we created categories where we could instantly assign the resources we already had collected. The human characteristics of the personas also lead to an imagination where the collected resources eventually fit to the the stories of the Personas we had in our minds.</p>
<p>In a later iteration we refined the objectives and added two other kind of categories. The one kind of category was concerning the knowledge depth (<em>beginner</em>, <em>intermediate</em> and <em>advanced</em>). The other kind of category distinguished between a business role and a tech role.</p>
</section>
<section id="look-at-the-data" class="level2">
<h2 class="anchored" data-anchor-id="look-at-the-data">3. Look at the data <span class="emoji" data-emoji="mag_right">🔎</span></h2>
<p>Since we were limited on time we couldn’t do a deep analysis of every resource. If resources where known in advance by one of the team members we had to rely on her/his judgment. If resources were unknown we briefly scanned them or relied on public recommendations. It’s fare from optimal, but it must have been sufficient for a first iteration.</p>
</section>
<section id="define-metrics" class="level2">
<h2 class="anchored" data-anchor-id="define-metrics">4. Define Metrics <span class="emoji" data-emoji="dart">🎯</span></h2>
<p>We defined soft metrics implicitly.</p>
<ul>
<li>Do resources fit a Persona?</li>
<li>Are the curriculum suitable for a certain category (e.g.&nbsp;<em>beginner</em>)?</li>
<li>Are the resources accessible?</li>
<li>Are the resources of high quality?</li>
<li>Is a resource complementing other resources or can it replace other resources in the curriculum?</li>
</ul>
</section>
<section id="define-test-strategy" class="level2">
<h2 class="anchored" data-anchor-id="define-test-strategy">5. Define Test strategy <span class="emoji" data-emoji="clipboard">📋</span></h2>
<p>We had chosen <em>feedback</em> as our test strategy. Feedback was gatherd from outsiders that were not involved in the creation process.</p>
</section>
<section id="define-architecture" class="level2">
<h2 class="anchored" data-anchor-id="define-architecture">6. Define architecture <span class="emoji" data-emoji="building_construction">🏗️</span></h2>
<p>The resources were collected in a wiki style manner that was easily accessible. The curriculum and its resources were structured by the categories defined in step 1.</p>
</section>
<section id="prepare-data" class="level2">
<h2 class="anchored" data-anchor-id="prepare-data">7. Prepare data <span class="emoji" data-emoji="construction_worker">👷</span></h2>
<p>Collect the resources. Scan the resources. Save references. Check accessibility.</p>
</section>
<section id="execute" class="level2">
<h2 class="anchored" data-anchor-id="execute">8. Execute <span class="emoji" data-emoji="arrow_forward">▶️</span></h2>
<p>Build a baseline model by choosing the relevant resources, sort them by category and write them down in the wiki. Make the page look nice and welcoming.</p>
</section>
<section id="evaluate" class="level2">
<h2 class="anchored" data-anchor-id="evaluate">9. Evaluate <span class="emoji" data-emoji="bar_chart">📊</span></h2>
<p>Get feedback from stakeholders that are not part of the creation process.</p>
</section>
<section id="iterate" class="level2">
<h2 class="anchored" data-anchor-id="iterate">10. Iterate <span class="emoji" data-emoji="repeat">🔁</span></h2>
<p>After a few iterations we had a nice curriculum. Additionally we encourage the audience to extend the wiki page.</p>
</section>
</section>
<section id="we-made-it" class="level1">
<h1>We made it!</h1>
<p align="center">
<span class="emoji" data-emoji="champagne">🍾</span>
</p>
<p>Given the restriction on time and team building our small project worked out pretty well.</p>
<p>And it was easy to transform our project management issue into a ML-task-like structure. Of course the analogy is a bit artificial. But keep in mind that <em>common sense</em> is the most important skill for project management. If you are a good ML practitioner, you can transform your knowledge into some project management skills. If you can do the one thing properly you can approach other issues properly as well.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-tuckman_developmental_1965" class="csl-entry">
Tuckman, Bruce W. 1965. <span>“Developmental Sequence in Small Groups.”</span> <em>Psychological Bulletin</em> 63 (6): 384–99. <a href="https://doi.org/10.1037/h0022100">https://doi.org/10.1037/h0022100</a>.
</div>
</div>


</section>

 ]]></description>
  <category>Project Management</category>
  <category>ML</category>
  <category>Business</category>
  <guid>https://joatom.github.io/blog/posts/2022-04-28-ml-pm/index.html</guid>
  <pubDate>Wed, 27 Apr 2022 22:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2022-04-28-ml-pm/ml_pm.png" medium="image" type="image/png" height="82" width="144"/>
</item>
<item>
  <title>Flat to hierarchie</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2022-02-28-relationship/index.html</link>
  <description><![CDATA[ 




<p align="center">
<img src="https://joatom.github.io/blog/posts/2022-02-28-relationship/relationship.png" class="img-fluid">
</p>
<p>Tabular data is often transformed in a flattened manner so it can easily be processed by commen ML frameworks. Sometimes it is usefull to understand the relationships and hierarchies between the columns of a flattend datasource. In this notebook hierarchies are extracted from a flattened csv file.</p>
<iframe src="https://www.kaggle.com/embed/joatom/hm-relationship-of-article-columns?kernelSessionId=88452731" height="800" style="margin: 0 auto; width: 100%; max-width: 950px;" frameborder="0" scrolling="auto" title="Relationship of Article columns" allowfullscreen="allowfullscreen">
</iframe>



 ]]></description>
  <category>Tabular</category>
  <category>EDA</category>
  <category>ML</category>
  <guid>https://joatom.github.io/blog/posts/2022-02-28-relationship/index.html</guid>
  <pubDate>Sun, 27 Feb 2022 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2022-02-28-relationship/relationship.png" medium="image" type="image/png" height="145" width="144"/>
</item>
<item>
  <title>Learning along</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2022-01-31-learn_along/index.html</link>
  <description><![CDATA[ 




<p align="center">
<img src="https://joatom.github.io/blog/posts/2022-01-31-learn_along/learn_along.png" class="img-fluid">
</p>
<p>It’s said, that the <em>most effective way</em> to learn on kaggle is to participate in a competition and afterwards wrangling the top solutions. At the current state (as of January 2022) of my ML skills this approach doesn’t work well for me. 1. Top notebook solutions are often complicated, contain implementations that are difficult to grasp or are made out of tons of ensembled models. Solutions in the discussion section contain broad overviews that are inspiring, yet hard to rebuild. 2. The solutions are often different from my own solution. It is difficult to compare them with my own code and to derive how to improve my own code specifically.</p>
<p>The <em>second best way</em> to learn on kaggle is to follow the discussions and read the notebooks during a competition. This approach suites me better, since there are often small insights to be discovered that are shared by others and that I can easily integrated in my solution. Filtering the valuable information can be hard, because the notebook and discussion sections are often flooded with similar content. You can easily get distracted by too many different techniques and ideas.</p>
<p>I often enjoy the <em>Playground competitions</em> to focus on a few skills to improve. They are also less challenging and it is easier to get a baseline implementation up running because the data is already prepared to quickly get started.</p>
<p>In January 2022 there is a <a href="https://www.kaggle.com/c/song-popularity-prediction">community competition</a> hosted by <em>Abhishek Thakur</em>, that provides the opportunity for yet <em>another learning approach</em>. During the competition there are sessions being recoreded on YouTube, with two Grandmasters covering the topics <em>EDA</em> and <em>Imputation</em>. So we get high quality guidance for two important topics while working on the competition. I took the opportunity to learn along.</p>
<p>I wrote down my experience with this learning approach and shared it with my solution in the following notebook.</p>
<iframe src="https://www.kaggle.com/embed/joatom/song-pop-learn-along?kernelSessionId=86784482" height="800" style="margin: 0 auto; width: 100%; " frameborder="0" scrolling="auto" title="Learning along">
</iframe>



 ]]></description>
  <category>Tabular</category>
  <category>EDA</category>
  <category>Basics</category>
  <category>ML</category>
  <guid>https://joatom.github.io/blog/posts/2022-01-31-learn_along/index.html</guid>
  <pubDate>Sun, 30 Jan 2022 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2022-01-31-learn_along/learn_along.png" medium="image" type="image/png" height="62" width="144"/>
</item>
<item>
  <title>Notes about Sequence Modelling</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2021-11-22-vpp-seq/2021-11-22-vpp-seq.html</link>
  <description><![CDATA[ 




<section id="notes-about-sequence-modelling" class="level1">
<h1>Notes about Sequence Modelling</h1>
<p>I lately participated in the <a href="https://www.kaggle.com/c/ventilator-pressure-prediction">Google Brain - Ventilator Pressure Prediction</a> competition. I didn’t score decent, but I still learned a lot. And some of it is worth to sum up, so I can easily look it up later.</p>
<p>The goal of the competition was to predict airway pressure of lungs that are ventilated in a clinician-intensive procedure. Given values of the input pressure (<code>u_in</code>) we had to predict the output <code>pressure</code> for a time frame of a few seconds.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="8">
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>&lt;AxesSubplot:xlabel='time_step', ylabel='Pressure'&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-11-22-vpp-seq/2021-11-22-vpp-seq_files/figure-html/cell-5-output-2.png" class="img-fluid"></p>
</div>
</div>
<p>Since all <code>u_in</code> values for a time frame were given we can build a bidirectional sequence model. Unless in a typical time-series problem where the future points are unknown at a certain time step, we know the future and past input values. Therefore I decided not to <em>mask</em> the sequences while training.</p>
<p>A good model choice for sequencing tasks are LSTMs and Transformers. I built a model that combines both architectures. I also tried XGBoost with a lot of features (especially windowing, rolling, lead, lag features) engineering, But neural nets (NN) performed better, here. Though I kept some of the engineered features as embeddings for the NN model.</p>
<p>The competition metric was mean average error (MAE). Only those pressures were evaluated, that appear while filling the lungs with oxygen.</p>
<section id="feature-engineering" class="level2">
<h2 class="anchored" data-anchor-id="feature-engineering">Feature engineering</h2>
<p>Besides the given features, <em>u_in</em>, <em>u_out</em>, <em>R</em>, <em>C</em> and <em>time_step</em> I defined several features. They can by categorized as:</p>
<ul>
<li>area (accumulation of u_in over time) from <a href="https://www.kaggle.com/cdeotte/ensemble-folds-with-median-0-153">this notebook</a></li>
<li>one hot encoding of ventilator parameters R and C</li>
<li>statistical (mean, max, skewness, quartiles, rolling mean, …)</li>
<li>shifted input pressure</li>
<li>input pressure performance over window</li>
<li>inverse features</li>
</ul>
<p>To reduce memory consumption I used a function from <a href="https://www.kaggle.com/konradb/tabnet-end-to-end-starter">this notebook</a>.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;">def</span> gen_features(df, norm<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>):</span>
<span id="cb2-2">    </span>
<span id="cb2-3">    <span class="co" style="color: #5E5E5E;"># area feature from https://www.kaggle.com/cdeotte/ensemble-folds-with-median-0-153</span></span>
<span id="cb2-4">    df[<span class="st" style="color: #20794D;">'area'</span>] <span class="op" style="color: #5E5E5E;">=</span> df[<span class="st" style="color: #20794D;">'time_step'</span>] <span class="op" style="color: #5E5E5E;">*</span> df[<span class="st" style="color: #20794D;">'u_in'</span>]</span>
<span id="cb2-5">    df[<span class="st" style="color: #20794D;">'area_crv'</span>] <span class="op" style="color: #5E5E5E;">=</span> (<span class="fl" style="color: #AD0000;">1.5</span><span class="op" style="color: #5E5E5E;">-</span>df[<span class="st" style="color: #20794D;">'time_step'</span>]) <span class="op" style="color: #5E5E5E;">*</span> df[<span class="st" style="color: #20794D;">'u_in'</span>]</span>
<span id="cb2-6">    df[<span class="st" style="color: #20794D;">'area'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.groupby(<span class="st" style="color: #20794D;">'breath_id'</span>)[<span class="st" style="color: #20794D;">'area'</span>].cumsum()</span>
<span id="cb2-7">    df[<span class="st" style="color: #20794D;">'area_crv'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.groupby(<span class="st" style="color: #20794D;">'breath_id'</span>)[<span class="st" style="color: #20794D;">'area_crv'</span>].cumsum()</span>
<span id="cb2-8">    df[<span class="st" style="color: #20794D;">'area_inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.groupby(<span class="st" style="color: #20794D;">'breath_id'</span>)[<span class="st" style="color: #20794D;">'area'</span>].transform(<span class="st" style="color: #20794D;">'max'</span>) <span class="op" style="color: #5E5E5E;">-</span> df[<span class="st" style="color: #20794D;">'area'</span>]</span>
<span id="cb2-9">    </span>
<span id="cb2-10">    df[<span class="st" style="color: #20794D;">'ts'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.groupby(<span class="st" style="color: #20794D;">'breath_id'</span>)[<span class="st" style="color: #20794D;">'id'</span>].rank().astype(<span class="st" style="color: #20794D;">'int'</span>)</span>
<span id="cb2-11">    </span>
<span id="cb2-12">    df[<span class="st" style="color: #20794D;">'R4'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">/</span>df[<span class="st" style="color: #20794D;">'R'</span>]<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb2-13">    df[<span class="st" style="color: #20794D;">'R'</span>] <span class="op" style="color: #5E5E5E;">=</span> df[<span class="st" style="color: #20794D;">'R'</span>].astype(<span class="st" style="color: #20794D;">'str'</span>)</span>
<span id="cb2-14">    df[<span class="st" style="color: #20794D;">'C'</span>] <span class="op" style="color: #5E5E5E;">=</span> df[<span class="st" style="color: #20794D;">'C'</span>].astype(<span class="st" style="color: #20794D;">'str'</span>)</span>
<span id="cb2-15">    </span>
<span id="cb2-16">    df <span class="op" style="color: #5E5E5E;">=</span> pd.get_dummies(df)</span>
<span id="cb2-17">    </span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;">for</span> in_out <span class="kw" style="color: #003B4F;">in</span> [<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">1</span>]: <span class="co" style="color: #5E5E5E;">#,1</span></span>
<span id="cb2-19">        <span class="cf" style="color: #003B4F;">for</span> qs <span class="kw" style="color: #003B4F;">in</span> [<span class="fl" style="color: #AD0000;">0.2</span>, <span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">0.9</span>, <span class="fl" style="color: #AD0000;">0.95</span>]:</span>
<span id="cb2-20">            df.loc[:, <span class="ss" style="color: #20794D;">f'u_in_</span><span class="sc" style="color: #5E5E5E;">{</span>in_out<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">_q</span><span class="sc" style="color: #5E5E5E;">{</span><span class="bu" style="color: null;">str</span>(qs<span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">100</span>)<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb2-21">            df.loc[df.u_out<span class="op" style="color: #5E5E5E;">==</span>in_out, <span class="ss" style="color: #20794D;">f'u_in_</span><span class="sc" style="color: #5E5E5E;">{</span>in_out<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">_q</span><span class="sc" style="color: #5E5E5E;">{</span><span class="bu" style="color: null;">str</span>(qs<span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">100</span>)<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>] <span class="op" style="color: #5E5E5E;">=</span> df[df.u_out<span class="op" style="color: #5E5E5E;">==</span>in_out].groupby(<span class="st" style="color: #20794D;">'breath_id'</span>)[<span class="st" style="color: #20794D;">'u_in'</span>].transform(<span class="st" style="color: #20794D;">'quantile'</span>, q<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.2</span>)</span>
<span id="cb2-22">    </span>
<span id="cb2-23">        <span class="cf" style="color: #003B4F;">for</span> agg_type <span class="kw" style="color: #003B4F;">in</span> [<span class="st" style="color: #20794D;">'count'</span>, <span class="st" style="color: #20794D;">'std'</span>, <span class="st" style="color: #20794D;">'skew'</span>,<span class="st" style="color: #20794D;">'mean'</span>, <span class="st" style="color: #20794D;">'min'</span>, <span class="st" style="color: #20794D;">'max'</span>, <span class="st" style="color: #20794D;">'median'</span>, <span class="st" style="color: #20794D;">'last'</span>, <span class="st" style="color: #20794D;">'first'</span>]:</span>
<span id="cb2-24">            df.loc[:,<span class="ss" style="color: #20794D;">f'u_out_</span><span class="sc" style="color: #5E5E5E;">{</span>in_out<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">_</span><span class="sc" style="color: #5E5E5E;">{</span>agg_type<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb2-25">            df.loc[df.u_out<span class="op" style="color: #5E5E5E;">==</span>in_out, <span class="ss" style="color: #20794D;">f'u_out_</span><span class="sc" style="color: #5E5E5E;">{</span>in_out<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">_</span><span class="sc" style="color: #5E5E5E;">{</span>agg_type<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>] <span class="op" style="color: #5E5E5E;">=</span> df[df.u_out<span class="op" style="color: #5E5E5E;">==</span>in_out].groupby(<span class="st" style="color: #20794D;">'breath_id'</span>)[<span class="st" style="color: #20794D;">'u_in'</span>].transform(agg_type)</span>
<span id="cb2-26">    </span>
<span id="cb2-27">        <span class="cf" style="color: #003B4F;">if</span> norm:</span>
<span id="cb2-28">            df.loc[:,<span class="ss" style="color: #20794D;">f'u_in'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">-</span> df[<span class="ss" style="color: #20794D;">f'u_out_</span><span class="sc" style="color: #5E5E5E;">{</span>in_out<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">_mean'</span>]) <span class="op" style="color: #5E5E5E;">/</span> (df[<span class="ss" style="color: #20794D;">f'u_out_</span><span class="sc" style="color: #5E5E5E;">{</span>in_out<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">_std'</span>]<span class="op" style="color: #5E5E5E;">+</span><span class="fl" style="color: #AD0000;">1e-6</span>)</span>
<span id="cb2-29">    </span>
<span id="cb2-30">    </span>
<span id="cb2-31">    <span class="cf" style="color: #003B4F;">for</span> s <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">8</span>):</span>
<span id="cb2-32">        df.loc[:,<span class="ss" style="color: #20794D;">f'shift_u_in_</span><span class="sc" style="color: #5E5E5E;">{</span>s<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb2-33">        df.loc[:,<span class="ss" style="color: #20794D;">f'shift_u_in_</span><span class="sc" style="color: #5E5E5E;">{</span>s<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.groupby(<span class="st" style="color: #20794D;">'breath_id'</span>)[<span class="st" style="color: #20794D;">'u_in'</span>].shift(s)</span>
<span id="cb2-34">        df.loc[:,<span class="ss" style="color: #20794D;">f'shift_u_in_m</span><span class="sc" style="color: #5E5E5E;">{</span>s<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb2-35">        df.loc[:,<span class="ss" style="color: #20794D;">f'shift_u_in_m</span><span class="sc" style="color: #5E5E5E;">{</span>s<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.groupby(<span class="st" style="color: #20794D;">'breath_id'</span>)[<span class="st" style="color: #20794D;">'u_in'</span>].shift(<span class="op" style="color: #5E5E5E;">-</span>s)</span>
<span id="cb2-36">    </span>
<span id="cb2-37">    df.loc[:,<span class="st" style="color: #20794D;">'perf1'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">/</span> df.shift_u_in_1).clip(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-38">    df.loc[:,<span class="st" style="color: #20794D;">'perf3'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">/</span> df.shift_u_in_3).clip(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-39">    df.loc[:,<span class="st" style="color: #20794D;">'perf5'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">/</span> df.shift_u_in_5).clip(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-40">    df.loc[:,<span class="st" style="color: #20794D;">'perf7'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">/</span> df.shift_u_in_7).clip(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-41">    </span>
<span id="cb2-42">    df.loc[:,<span class="st" style="color: #20794D;">'perf1'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.perf1<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-43">    df.loc[:,<span class="st" style="color: #20794D;">'perf3'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.perf3<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-44">    df.loc[:,<span class="st" style="color: #20794D;">'perf5'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.perf5<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-45">    df.loc[:,<span class="st" style="color: #20794D;">'perf7'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.perf7<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-46">    </span>
<span id="cb2-47">    df.loc[:,<span class="st" style="color: #20794D;">'perf1inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">/</span> df.shift_u_in_m1).clip(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-48">    df.loc[:,<span class="st" style="color: #20794D;">'perf3inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">/</span> df.shift_u_in_m3).clip(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-49">    df.loc[:,<span class="st" style="color: #20794D;">'perf5inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">/</span> df.shift_u_in_m5).clip(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-50">    df.loc[:,<span class="st" style="color: #20794D;">'perf7inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> (df.u_in <span class="op" style="color: #5E5E5E;">/</span> df.shift_u_in_m7).clip(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-51">    </span>
<span id="cb2-52">    df.loc[:,<span class="st" style="color: #20794D;">'perf1inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.perf1inv<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-53">    df.loc[:,<span class="st" style="color: #20794D;">'perf3inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.perf3inv<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-54">    df.loc[:,<span class="st" style="color: #20794D;">'perf5inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.perf5inv<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-55">    df.loc[:,<span class="st" style="color: #20794D;">'perf7inv'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.perf7inv<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-56">    </span>
<span id="cb2-57">    df.loc[:,<span class="st" style="color: #20794D;">'rol_mean5'</span>] <span class="op" style="color: #5E5E5E;">=</span> df.u_in.rolling(<span class="dv" style="color: #AD0000;">5</span>).mean()</span>
<span id="cb2-58">    </span>
<span id="cb2-59">    <span class="cf" style="color: #003B4F;">return</span> df</span></code></pre></div>
</div>
<section id="scaler" class="level3">
<h3 class="anchored" data-anchor-id="scaler">Scaler</h3>
<p>The data was transformed with <em>scikit’s RobustScaler</em> to reduce influence of outliers.</p>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">features <span class="op" style="color: #5E5E5E;">=</span>  <span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">set</span>(train.columns)<span class="op" style="color: #5E5E5E;">-</span><span class="bu" style="color: null;">set</span>([<span class="st" style="color: #20794D;">'id'</span>,<span class="st" style="color: #20794D;">'breath_id'</span>,<span class="st" style="color: #20794D;">'pressure'</span>,<span class="st" style="color: #20794D;">'kfold_2021'</span>,<span class="st" style="color: #20794D;">'kfold'</span>]))</span>
<span id="cb3-2">features.sort()</span>
<span id="cb3-3"></span>
<span id="cb3-4">rs <span class="op" style="color: #5E5E5E;">=</span> RobustScaler().fit(train[features]) </span></code></pre></div>
</div>
</section>
</section>
<section id="folds" class="level2">
<h2 class="anchored" data-anchor-id="folds">Folds</h2>
<p>I didn’t do cross validation here, but instead trained the final model on the entire dataset. Nevertheless it’s helpful to build kfolds for model evaluation. I build GroupKFold over <code>breath_id</code> to keep the entire time frame in the same fold.</p>
</section>
<section id="dataloader" class="level2">
<h2 class="anchored" data-anchor-id="dataloader">Dataloader</h2>
<p>Since the data is quite small (ca. 800 MB after memory reduction) I decided to load the entire train set in the <code>Dataset</code> object during construction (calling <code>__init__()</code>). In a first attempt I loaded the data as <em>Pandas Dataframe</em>. Then I figured out (from <a href="https://www.kaggle.com/junkoda/pytorch-lstm-with-tensorflow-like-initialization">this notebook</a>) that converting the Dataframe into an numpy array speeds up training significantly. The Dataframe is converted to an numpy array by the scaler.</p>
<p>Since the competition metric only evaluates the pressures where <code>u_out==0</code> I also provide a mask tensor, which can later on be used feeding the loss and metric functions.</p>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;">class</span> VPPDataset(torch.utils.data.Dataset):</span>
<span id="cb4-2">    </span>
<span id="cb4-3">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>,df, scaler, is_train <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>, kfolds <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>], features <span class="op" style="color: #5E5E5E;">=</span> [<span class="st" style="color: #20794D;">'R'</span>,<span class="st" style="color: #20794D;">'C'</span>, <span class="st" style="color: #20794D;">'time_step'</span>, <span class="st" style="color: #20794D;">'u_in'</span>, <span class="st" style="color: #20794D;">'u_out'</span>]):</span>
<span id="cb4-4">        <span class="cf" style="color: #003B4F;">if</span> is_train:</span>
<span id="cb4-5">            <span class="co" style="color: #5E5E5E;"># build a mask for metric and loss function</span></span>
<span id="cb4-6">            <span class="va" style="color: #111111;">self</span>.mask <span class="op" style="color: #5E5E5E;">=</span> torch.FloatTensor(<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">-</span> df[df[<span class="st" style="color: #20794D;">'kfold'</span>].isin(kfolds)].u_out.values.reshape(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">80</span>))</span>
<span id="cb4-7">            <span class="va" style="color: #111111;">self</span>.target <span class="op" style="color: #5E5E5E;">=</span> torch.FloatTensor(df[df[<span class="st" style="color: #20794D;">'kfold'</span>].isin(kfolds)].pressure.values.reshape(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">80</span>))</span>
<span id="cb4-8">            </span>
<span id="cb4-9">            <span class="co" style="color: #5E5E5E;"># calling scaler also converts the dataframe in an numpy array, which results in speed up while training</span></span>
<span id="cb4-10">            feature_values <span class="op" style="color: #5E5E5E;">=</span> scaler.transform(df[df[<span class="st" style="color: #20794D;">'kfold'</span>].isin(kfolds)][features]) </span>
<span id="cb4-11">            </span>
<span id="cb4-12">            <span class="va" style="color: #111111;">self</span>.df <span class="op" style="color: #5E5E5E;">=</span> torch.FloatTensor(feature_values.reshape(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">80</span>,<span class="bu" style="color: null;">len</span>(features)))</span>
<span id="cb4-13">            </span>
<span id="cb4-14">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb4-15">            <span class="va" style="color: #111111;">self</span>.mask <span class="op" style="color: #5E5E5E;">=</span> torch.FloatTensor(<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">-</span> df.u_out.values.reshape(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">80</span>))</span>
<span id="cb4-16">            </span>
<span id="cb4-17">            feature_values <span class="op" style="color: #5E5E5E;">=</span> scaler.transform(df[features]) </span>
<span id="cb4-18">            <span class="va" style="color: #111111;">self</span>.df <span class="op" style="color: #5E5E5E;">=</span> torch.FloatTensor(feature_values.reshape(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">80</span>,<span class="bu" style="color: null;">len</span>(features)))</span>
<span id="cb4-19">            </span>
<span id="cb4-20">            <span class="va" style="color: #111111;">self</span>.target <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb4-21">        </span>
<span id="cb4-22">        <span class="va" style="color: #111111;">self</span>.features <span class="op" style="color: #5E5E5E;">=</span> features</span>
<span id="cb4-23">        <span class="va" style="color: #111111;">self</span>.is_train <span class="op" style="color: #5E5E5E;">=</span> is_train</span>
<span id="cb4-24">        </span>
<span id="cb4-25">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__len__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb4-26">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.df.shape[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb4-27">        </span>
<span id="cb4-28">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__getitem__</span>(<span class="va" style="color: #111111;">self</span>, item):</span>
<span id="cb4-29">        sample <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.df[item]</span>
<span id="cb4-30">        mask <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.mask[item]</span>
<span id="cb4-31">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_train:</span>
<span id="cb4-32">            targets <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.target[item]</span>
<span id="cb4-33">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb4-34">            targets <span class="op" style="color: #5E5E5E;">=</span> torch.zeros((<span class="dv" style="color: #AD0000;">1</span>))</span>
<span id="cb4-35">        </span>
<span id="cb4-36">        <span class="cf" style="color: #003B4F;">return</span> torch.cat([sample, mask.view(<span class="dv" style="color: #AD0000;">80</span>,<span class="dv" style="color: #AD0000;">1</span>)],dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>), targets <span class="co" style="color: #5E5E5E;">#.float()</span></span></code></pre></div>
</div>
</section>
<section id="model" class="level2">
<h2 class="anchored" data-anchor-id="model">Model</h2>
<p>My model combines a multi layered LSTM and a Transformer Encoder. Additionally I build an AutoEncoder by placing a Transformer Decoder on top of the Transformer encoder. The AutoEncoder predictions are used as auxiliary variables.</p>
<p><img src="https://joatom.github.io/blog/posts/2021-11-22-vpp-seq/logo_vpp_seq.png" class="img-fluid"></p>
<p>Some further considerations:</p>
<ul>
<li>I did not use drop out. The reason why it performence worse is discussed <a href="https://www.kaggle.com/c/ventilator-pressure-prediction/discussion/276719">here</a>.</li>
<li>LayerNorm can be used in sequential models but didn’t improve my score.</li>
</ul>
<p>The model is influenced by these notebooks:</p>
<ul>
<li><a href="https://pytorch.org/tutorials/beginner/transformer_tutorial.html">Transformer part</a></li>
<li><a href="https://www.kaggle.com/theoviel/deep-learning-starter-simple-lstm">LSTM part</a></li>
<li><a href="https://www.kaggle.com/junkoda/pytorch-lstm-with-tensorflow-like-initialization">Parameter initialization</a></li>
</ul>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># Influenced by: </span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;"># Transformer: https://pytorch.org/tutorials/beginner/transformer_tutorial.html</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;"># LSTM: https://www.kaggle.com/theoviel/deep-learning-starter-simple-lstm</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;"># Parameter init from: https://www.kaggle.com/junkoda/pytorch-lstm-with-tensorflow-like-initialization </span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;">class</span> VPPEncoder(nn.Module):</span>
<span id="cb5-7"></span>
<span id="cb5-8">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, fin <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span>, nhead <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">8</span>, nhid <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2048</span>, nlayers <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">6</span>, seq_len<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">80</span>, use_decoder <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>):</span>
<span id="cb5-9">        <span class="bu" style="color: null;">super</span>(VPPEncoder, <span class="va" style="color: #111111;">self</span>).<span class="fu" style="color: #4758AB;">__init__</span>()</span>
<span id="cb5-10">                 </span>
<span id="cb5-11">        <span class="va" style="color: #111111;">self</span>.seq_len <span class="op" style="color: #5E5E5E;">=</span> seq_len</span>
<span id="cb5-12">        <span class="va" style="color: #111111;">self</span>.use_decoder <span class="op" style="color: #5E5E5E;">=</span> use_decoder</span>
<span id="cb5-13">        </span>
<span id="cb5-14">        <span class="co" style="color: #5E5E5E;"># number of input features</span></span>
<span id="cb5-15">        <span class="va" style="color: #111111;">self</span>.fin <span class="op" style="color: #5E5E5E;">=</span> fin</span>
<span id="cb5-16">                      </span>
<span id="cb5-17">        <span class="co" style="color: #5E5E5E;">#self.tail = nn.Sequential(</span></span>
<span id="cb5-18">        <span class="co" style="color: #5E5E5E;">#    nn.Linear(self.fin, nhid),</span></span>
<span id="cb5-19">        <span class="co" style="color: #5E5E5E;">#    #nn.LayerNorm(nhid),</span></span>
<span id="cb5-20">        <span class="co" style="color: #5E5E5E;">#    nn.SELU(),</span></span>
<span id="cb5-21">        <span class="co" style="color: #5E5E5E;">#    nn.Linear(nhid, fin),</span></span>
<span id="cb5-22">        <span class="co" style="color: #5E5E5E;">#    #nn.LayerNorm(nhid),</span></span>
<span id="cb5-23">        <span class="co" style="color: #5E5E5E;">#    nn.SELU(),</span></span>
<span id="cb5-24">        <span class="co" style="color: #5E5E5E;">#    #nn.Dropout(0.05),</span></span>
<span id="cb5-25">        <span class="co" style="color: #5E5E5E;">#)                </span></span>
<span id="cb5-26">            </span>
<span id="cb5-27">        encoder_layers <span class="op" style="color: #5E5E5E;">=</span> nn.TransformerEncoderLayer(<span class="va" style="color: #111111;">self</span>.fin, nhead, nhid , activation<span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'gelu'</span>)</span>
<span id="cb5-28">        <span class="va" style="color: #111111;">self</span>.transformer_encoder <span class="op" style="color: #5E5E5E;">=</span> nn.TransformerEncoder(encoder_layers, nlayers)</span>
<span id="cb5-29">        </span>
<span id="cb5-30">        decoder_layers <span class="op" style="color: #5E5E5E;">=</span> nn.TransformerDecoderLayer(<span class="va" style="color: #111111;">self</span>.fin, nhead, nhid, activation<span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'gelu'</span>)</span>
<span id="cb5-31">        <span class="va" style="color: #111111;">self</span>.transformer_decoder <span class="op" style="color: #5E5E5E;">=</span> nn.TransformerDecoder(decoder_layers, nlayers)</span>
<span id="cb5-32">        </span>
<span id="cb5-33">        <span class="va" style="color: #111111;">self</span>.lstm_layer <span class="op" style="color: #5E5E5E;">=</span> nn.LSTM(fin, nhid, num_layers<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">3</span>, bidirectional<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb5-34">        </span>
<span id="cb5-35">        </span>
<span id="cb5-36">        <span class="co" style="color: #5E5E5E;"># Head</span></span>
<span id="cb5-37">        <span class="va" style="color: #111111;">self</span>.linear1 <span class="op" style="color: #5E5E5E;">=</span> nn.Linear(nhid<span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">+</span>fin , seq_len<span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb5-38">        <span class="va" style="color: #111111;">self</span>.linear3 <span class="op" style="color: #5E5E5E;">=</span> nn.Linear(seq_len<span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb5-39">       </span>
<span id="cb5-40">        </span>
<span id="cb5-41">        <span class="va" style="color: #111111;">self</span>._reinitialize()</span>
<span id="cb5-42">        </span>
<span id="cb5-43"></span>
<span id="cb5-44">    <span class="co" style="color: #5E5E5E;"># from https://www.kaggle.com/junkoda/pytorch-lstm-with-tensorflow-like-initialization    </span></span>
<span id="cb5-45">    <span class="kw" style="color: #003B4F;">def</span> _reinitialize(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-46">        <span class="co" style="color: #5E5E5E;">"""</span></span>
<span id="cb5-47"><span class="co" style="color: #5E5E5E;">        Tensorflow/Keras-like initialization</span></span>
<span id="cb5-48"><span class="co" style="color: #5E5E5E;">        """</span></span>
<span id="cb5-49">        <span class="cf" style="color: #003B4F;">for</span> name, p <span class="kw" style="color: #003B4F;">in</span> <span class="va" style="color: #111111;">self</span>.named_parameters():</span>
<span id="cb5-50">            <span class="cf" style="color: #003B4F;">if</span> <span class="st" style="color: #20794D;">'lstm'</span> <span class="kw" style="color: #003B4F;">in</span> name:</span>
<span id="cb5-51">                <span class="cf" style="color: #003B4F;">if</span> <span class="st" style="color: #20794D;">'weight_ih'</span> <span class="kw" style="color: #003B4F;">in</span> name:</span>
<span id="cb5-52">                    nn.init.xavier_uniform_(p.data)</span>
<span id="cb5-53">                <span class="cf" style="color: #003B4F;">elif</span> <span class="st" style="color: #20794D;">'weight_hh'</span> <span class="kw" style="color: #003B4F;">in</span> name:</span>
<span id="cb5-54">                    nn.init.orthogonal_(p.data)</span>
<span id="cb5-55">                <span class="cf" style="color: #003B4F;">elif</span> <span class="st" style="color: #20794D;">'bias_ih'</span> <span class="kw" style="color: #003B4F;">in</span> name:</span>
<span id="cb5-56">                    p.data.fill_(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb5-57">                    <span class="co" style="color: #5E5E5E;"># Set forget-gate bias to 1</span></span>
<span id="cb5-58">                    n <span class="op" style="color: #5E5E5E;">=</span> p.size(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb5-59">                    p.data[(n <span class="op" style="color: #5E5E5E;">//</span> <span class="dv" style="color: #AD0000;">4</span>):(n <span class="op" style="color: #5E5E5E;">//</span> <span class="dv" style="color: #AD0000;">2</span>)].fill_(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb5-60">                <span class="cf" style="color: #003B4F;">elif</span> <span class="st" style="color: #20794D;">'bias_hh'</span> <span class="kw" style="color: #003B4F;">in</span> name:</span>
<span id="cb5-61">                    p.data.fill_(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb5-62">            <span class="cf" style="color: #003B4F;">elif</span> <span class="st" style="color: #20794D;">'fc'</span> <span class="kw" style="color: #003B4F;">in</span> name:</span>
<span id="cb5-63">                <span class="cf" style="color: #003B4F;">if</span> <span class="st" style="color: #20794D;">'weight'</span> <span class="kw" style="color: #003B4F;">in</span> name:</span>
<span id="cb5-64">                    nn.init.xavier_uniform_(p.data,gain<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-65">                <span class="cf" style="color: #003B4F;">elif</span> <span class="st" style="color: #20794D;">'bias'</span> <span class="kw" style="color: #003B4F;">in</span> name:</span>
<span id="cb5-66">                    p.data.fill_(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb5-67">  </span>
<span id="cb5-68"></span>
<span id="cb5-69">    <span class="kw" style="color: #003B4F;">def</span> forward(<span class="va" style="color: #111111;">self</span>, x):</span>
<span id="cb5-70">        out <span class="op" style="color: #5E5E5E;">=</span> x[:,:,:<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb5-71">        </span>
<span id="cb5-72">        out <span class="op" style="color: #5E5E5E;">=</span> out.permute(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb5-73">        </span>
<span id="cb5-74">        out <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.transformer_encoder( out)</span>
<span id="cb5-75">        out_l,_ <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.lstm_layer(out)</span>
<span id="cb5-76">        </span>
<span id="cb5-77">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.use_decoder:</span>
<span id="cb5-78">            out <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.transformer_decoder(out, out) </span>
<span id="cb5-79">            out_dec_diff <span class="op" style="color: #5E5E5E;">=</span> (out <span class="op" style="color: #5E5E5E;">-</span> x[:,:,:<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>].permute(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">2</span>)).<span class="bu" style="color: null;">abs</span>().mean(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb5-80">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb5-81">            out_dec_diff <span class="op" style="color: #5E5E5E;">=</span> out<span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb5-82">        </span>
<span id="cb5-83">        out <span class="op" style="color: #5E5E5E;">=</span> torch.cat([out, out_l], dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb5-84">        </span>
<span id="cb5-85">        <span class="co" style="color: #5E5E5E;"># Head</span></span>
<span id="cb5-86">        out <span class="op" style="color: #5E5E5E;">=</span> F.gelu(<span class="va" style="color: #111111;">self</span>.linear1(out.permute(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">2</span>)))</span>
<span id="cb5-87">        out <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.linear3(out)</span>
<span id="cb5-88"></span>
<span id="cb5-89">        <span class="cf" style="color: #003B4F;">return</span> out.view(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="va" style="color: #111111;">self</span>.seq_len) , x[:,:,<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>], out_dec_diff.view(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="va" style="color: #111111;">self</span>.seq_len)  </span></code></pre></div>
</div>
</section>
<section id="metric-and-loss-function" class="level2">
<h2 class="anchored" data-anchor-id="metric-and-loss-function">Metric and Loss Function</h2>
<section id="masked-mae-metric" class="level3">
<h3 class="anchored" data-anchor-id="masked-mae-metric">Masked MAE metric</h3>
<p>The competition metric was Mean Absolute Error (MAE), but only for the time-steps where air flows into the lunge (approx. half of the timesteps). Hence, I masked the predictions (using the flag introduced in the Dataset) ignoring the unnecessary time-steps. The flags are passed through the model (<code>val[1]</code>) and is an output along with the predictions.</p>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;">def</span> vppMetric(val, target):</span>
<span id="cb6-3">    flag <span class="op" style="color: #5E5E5E;">=</span> val[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb6-4">    </span>
<span id="cb6-5">    preds <span class="op" style="color: #5E5E5E;">=</span> val[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb6-6">    </span>
<span id="cb6-7">    loss <span class="op" style="color: #5E5E5E;">=</span> (preds<span class="op" style="color: #5E5E5E;">*</span>flag<span class="op" style="color: #5E5E5E;">-</span>target<span class="op" style="color: #5E5E5E;">*</span>flag).<span class="bu" style="color: null;">abs</span>()</span>
<span id="cb6-8">    loss<span class="op" style="color: #5E5E5E;">=</span> loss.<span class="bu" style="color: null;">sum</span>()<span class="op" style="color: #5E5E5E;">/</span>flag.<span class="bu" style="color: null;">sum</span>()</span>
<span id="cb6-9">    </span>
<span id="cb6-10">    <span class="cf" style="color: #003B4F;">return</span> loss</span></code></pre></div>
</div>
<p>Thee values produced by the AutoGenerater are additionally measured by the <code>vppGenMetric</code>. It uses MAE to evaluate how good the reconstruction of the input features values evolves.</p>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"></span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;">def</span> vppGenMetric(val, target):</span>
<span id="cb7-3">    gen <span class="op" style="color: #5E5E5E;">=</span>val[<span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb7-4">    </span>
<span id="cb7-5">    flag <span class="op" style="color: #5E5E5E;">=</span> val[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb7-6">    </span>
<span id="cb7-7">    loss <span class="op" style="color: #5E5E5E;">=</span> (gen<span class="op" style="color: #5E5E5E;">*</span>flag).<span class="bu" style="color: null;">abs</span>()</span>
<span id="cb7-8">    loss<span class="op" style="color: #5E5E5E;">=</span> loss.<span class="bu" style="color: null;">sum</span>()<span class="op" style="color: #5E5E5E;">/</span>flag.<span class="bu" style="color: null;">sum</span>()</span>
<span id="cb7-9">    </span>
<span id="cb7-10">    <span class="cf" style="color: #003B4F;">return</span> loss</span></code></pre></div>
</div>
</section>
</section>
<section id="combined-loss-function" class="level2">
<h2 class="anchored" data-anchor-id="combined-loss-function">Combined Loss function</h2>
<p>The loss function is a combination of L1-derived-Loss (<code>vppAutoLoss</code>) for the predictions and the AutoEncoder-predictions.</p>
<p>Due to <a href="https://www.kaggle.com/c/ventilator-pressure-prediction/discussion/277690">this discussion</a> I did some experiments with variations of Huber and SmoothL1Loss. The later (<code>vppAutoSmoothL1Loss</code>) performed better.</p>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"></span>
<span id="cb8-2"><span class="kw" style="color: #003B4F;">def</span> vppAutoLoss(val, target):</span>
<span id="cb8-3">    gen <span class="op" style="color: #5E5E5E;">=</span>val[<span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb8-4">    </span>
<span id="cb8-5">    flag <span class="op" style="color: #5E5E5E;">=</span> val[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb8-6">    </span>
<span id="cb8-7">    preds <span class="op" style="color: #5E5E5E;">=</span> val[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb8-8">    </span>
<span id="cb8-9">    loss <span class="op" style="color: #5E5E5E;">=</span> (preds<span class="op" style="color: #5E5E5E;">*</span>flag<span class="op" style="color: #5E5E5E;">-</span>target<span class="op" style="color: #5E5E5E;">*</span>flag).<span class="bu" style="color: null;">abs</span>() <span class="op" style="color: #5E5E5E;">+</span> (gen<span class="op" style="color: #5E5E5E;">*</span>flag).<span class="bu" style="color: null;">abs</span>()<span class="op" style="color: #5E5E5E;">*</span><span class="fl" style="color: #AD0000;">0.2</span> <span class="co" style="color: #5E5E5E;">#</span></span>
<span id="cb8-10">    loss<span class="op" style="color: #5E5E5E;">=</span> loss.<span class="bu" style="color: null;">sum</span>()<span class="op" style="color: #5E5E5E;">/</span>flag.<span class="bu" style="color: null;">sum</span>()</span>
<span id="cb8-11">    </span>
<span id="cb8-12">    <span class="cf" style="color: #003B4F;">return</span> loss</span>
<span id="cb8-13">    </span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;"># Adapting https://pytorch.org/docs/stable/generated/torch.nn.SmoothL1Loss.html#torch.nn.SmoothL1Loss</span></span>
<span id="cb8-16"><span class="kw" style="color: #003B4F;">def</span> vppAutoSmoothL1Loss(val, target):</span>
<span id="cb8-17">    </span>
<span id="cb8-18">    beta <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb8-19">    fct <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.5</span></span>
<span id="cb8-20">    </span>
<span id="cb8-21">    gen <span class="op" style="color: #5E5E5E;">=</span>val[<span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb8-22">    </span>
<span id="cb8-23"></span>
<span id="cb8-24">    flag <span class="op" style="color: #5E5E5E;">=</span> val[<span class="dv" style="color: #AD0000;">1</span>] </span>
<span id="cb8-25">    </span>
<span id="cb8-26">    preds <span class="op" style="color: #5E5E5E;">=</span> val[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb8-27">    </span>
<span id="cb8-28">    loss <span class="op" style="color: #5E5E5E;">=</span> (preds<span class="op" style="color: #5E5E5E;">*</span>flag<span class="op" style="color: #5E5E5E;">-</span>target<span class="op" style="color: #5E5E5E;">*</span>flag).<span class="bu" style="color: null;">abs</span>() <span class="op" style="color: #5E5E5E;">+</span> (gen<span class="op" style="color: #5E5E5E;">*</span>flag).<span class="bu" style="color: null;">abs</span>()<span class="op" style="color: #5E5E5E;">*</span><span class="fl" style="color: #AD0000;">0.2</span></span>
<span id="cb8-29">    </span>
<span id="cb8-30">    loss <span class="op" style="color: #5E5E5E;">=</span> torch.where(loss <span class="op" style="color: #5E5E5E;">&lt;</span> beta, (fct<span class="op" style="color: #5E5E5E;">*</span>(loss<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span>))<span class="op" style="color: #5E5E5E;">/</span>beta, loss)<span class="co" style="color: #5E5E5E;">#-fct*beta)</span></span>
<span id="cb8-31">    </span>
<span id="cb8-32">    <span class="co" style="color: #5E5E5E;"># reduction mean**0.5</span></span>
<span id="cb8-33">    loss <span class="op" style="color: #5E5E5E;">=</span> loss.<span class="bu" style="color: null;">sum</span>()<span class="op" style="color: #5E5E5E;">/</span>flag.<span class="bu" style="color: null;">sum</span>() <span class="co" style="color: #5E5E5E;">#()**0.5</span></span>
<span id="cb8-34">    </span>
<span id="cb8-35">    <span class="cf" style="color: #003B4F;">return</span> loss</span>
<span id="cb8-36"></span>
<span id="cb8-37"></span></code></pre></div>
</div>
</section>
</section>
<section id="training" class="level1">
<h1>Training</h1>
<p>The training was done in mixed precision mode (<code>to_fp16()</code>) to speed up training. As optimizer I used <em>QHAdam</em>. The best single score I achieved with a 100 epoch <code>fit_one_cycle</code> (<em>CosineAnnealing</em> with warmup). I also tried more epochs with restart schedules <code>fit_sgdr</code> and changing loss functions. But the didn’t do better.</p>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">learn <span class="op" style="color: #5E5E5E;">=</span> Learner(data,</span>
<span id="cb9-2">                VPPEncoder(fin <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">len</span>(features), nhead <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span>, nhid <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">128</span>, nlayers <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">6</span>, seq_len<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">80</span>, use_decoder <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>),</span>
<span id="cb9-3">                opt_func<span class="op" style="color: #5E5E5E;">=</span> QHAdam,</span>
<span id="cb9-4">                loss_func <span class="op" style="color: #5E5E5E;">=</span> vppAutoLoss, <span class="co" style="color: #5E5E5E;">#vppAutoSmoothL1Loss </span></span>
<span id="cb9-5">                metrics<span class="op" style="color: #5E5E5E;">=</span>[vppMetric, vppGenMetric], </span>
<span id="cb9-6">                cbs<span class="op" style="color: #5E5E5E;">=</span>[ShowGraphCallback()]).to_fp16() </span>
<span id="cb9-7"></span>
<span id="cb9-8">learn.fit_one_cycle(EPOCHS, <span class="fl" style="color: #AD0000;">2e-3</span>) </span></code></pre></div>
<div class="cell-output cell-output-display">

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th>epoch</th>
      <th>train_loss</th>
      <th>valid_loss</th>
      <th>vppMetric</th>
      <th>vppGenMetric</th>
      <th>time</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>2.204789</td>
      <td>3.071832</td>
      <td>2.759562</td>
      <td>1.561353</td>
      <td>02:33</td>
    </tr>
    <tr>
      <td>1</td>
      <td>1.472645</td>
      <td>1.427370</td>
      <td>1.147190</td>
      <td>1.400903</td>
      <td>02:34</td>
    </tr>
    <tr>
      <td>2</td>
      <td>1.130861</td>
      <td>1.373204</td>
      <td>1.108116</td>
      <td>1.325440</td>
      <td>02:32</td>
    </tr>
    <tr>
      <td>3</td>
      <td>0.864211</td>
      <td>0.880435</td>
      <td>0.627816</td>
      <td>1.263098</td>
      <td>02:32</td>
    </tr>
    <tr>
      <td>4</td>
      <td>0.788929</td>
      <td>0.765516</td>
      <td>0.516083</td>
      <td>1.247169</td>
      <td>02:37</td>
    </tr>
  </tbody>
</table>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-11-22-vpp-seq/2021-11-22-vpp-seq_files/figure-html/cell-17-output-2.png" class="img-fluid"></p>
</div>
</div>
<p>Th CV score after 100 epochs is 0.227013 for vppMetric and 0.255794 for vppGenMetric. Leaderboard scores for this singele model training in the entire train-dataset were 0.2090 private LB and 0.2091 public LB.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li>Competition Home Page: https://www.kaggle.com/c/ventilator-pressure-prediction</li>
<li>Area features: https://www.kaggle.com/cdeotte/ensemble-folds-with-median-0-153</li>
<li>Memory reduction: https://www.kaggle.com/konradb/tabnet-end-to-end-starter</li>
<li>Dataloader from numpy: https://www.kaggle.com/junkoda/pytorch-lstm-with-tensorflow-like-initialization</li>
<li>Dropout discussion: https://www.kaggle.com/c/ventilator-pressure-prediction/discussion/276719</li>
<li>Transformer model: https://pytorch.org/tutorials/beginner/transformer_tutorial.html</li>
<li>LSTM model: https://www.kaggle.com/theoviel/deep-learning-starter-simple-lstm</li>
<li>LSTM parameter initialization: https://www.kaggle.com/junkoda/pytorch-lstm-with-tensorflow-like-initialization</li>
<li>SmoothL1Loss discussion: https://www.kaggle.com/c/ventilator-pressure-prediction/discussion/277690</li>
</ul>


</section>

 ]]></description>
  <category>Time Series</category>
  <category>ML</category>
  <category>Competition</category>
  <guid>https://joatom.github.io/blog/posts/2021-11-22-vpp-seq/2021-11-22-vpp-seq.html</guid>
  <pubDate>Sun, 21 Nov 2021 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2021-11-22-vpp-seq/logo_vpp_seq.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Model allocation</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>This notebook was originally published on https://www.kaggle.com/joatom/model-allocation.</p>
</blockquote>
<p>In this notebook I experiment with two ensembling strategies.</p>
<p>There are many ways to combine different models to improve predictions. A common technique for regression tasks is taking a weighted average of the model predictions (<code>y_pred = (m1(x)*w1 + ... + mn(x)*wn) / n</code>). Another common technique is building a meta model, that is trained on the models’ outputs.</p>
<p>The first chapter starts with a simple linear combination of two models. And we explore with an simple example, why ensembling actually works. These insights will lead, in the second chapter, to the first technique on how to choose weights for a linear ensemble by using residual variance. In the third chapter an alternative for the weight selection is examined. This second technique is inspired by portfolio theory (a theory to combine financial assets). In the fourth chapter the two techniques are applied and compared on the <a href="https://www.kaggle.com/c/tabular-playground-series-aug-2021">Tabular Playground Series (TPS) - Aug 2021</a> competition. Finaly cross validation (CV) and leaderboard (LB) Scores are listed in the fith chapter.</p>
<div class="callout-note callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>For the ease of explanation we make some simplifying assumptions, such as equal distribution of the data, same distribution on unseen data, … (just think of a vanilla world).</p>
</div>
</div>
<section id="why-ensembling-works" class="level1">
<h1>1. Why ensembling works</h1>
<p>Suppose there are two fitted regression models and they predict values like shown in the first chart.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="4">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation_files/figure-html/cell-5-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>To get a better intuition on how good the two models fit the ground truth, we plot the residuals <code>y_true(x)-m(x)</code>.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="6">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation_files/figure-html/cell-7-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>If we had to choose one of the models, which one would we prefer? Model 2 does better on the first data point and perfect on the third, but it contains an outlier the 5th data point.</p>
<p>Let’s look at the mean and the variance of the residuals.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="7">
<div class="cell-output cell-output-stdout">
<pre><code>Model #1. mean:  0.0714, var:  1.6020
Model #2. mean:  0.0000, var:  2.0000</code></pre>
</div>
</div>
<p>On the long run Model2 has an average residual of 0. Model 1 carries along a residual of 0.0714. So on average Model 2 seams to do better.</p>
<p>But Model 2 also has a higher variance. That implies we have a great chance to do a great prediction (e.g.&nbsp;x=3) but we also have high risk to screw the prediction (e.g.&nbsp;x=5).</p>
<p>Now we build a simple linear ensemble of the two models like <code>ens = 0.5 * m1 + 0.5 m2</code>.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="9">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation_files/figure-html/cell-10-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>The ensemble line is closer to the true values. It also looks smoother then m1 and m2.</p>
<div class="cell" data-execution_count="11">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation_files/figure-html/cell-12-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>In the residual chart we can see that the ensemble does a bit worse for x=3 compared to Model 2. But it also decreases the residuals for the outliers (points 1, 5, 7).</p>
<p>Let’s check the stats:</p>
<div class="cell" data-execution_count="12">
<div class="cell-output cell-output-stdout">
<pre><code>Ensemble. mean:  0.0357, var:  0.2219</code></pre>
</div>
</div>
<p>We dramatically reduced the variance, hence reduced the risk/chance. The mean value is now in between Model 1 and Model 2.</p>
<p>Finally let’s play around with the model weights in the ensemble and check how mean and variance change.</p>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># generate weights for w1</span></span>
<span id="cb3-2">weight_m1 <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">30</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4">ens_mean <span class="op" style="color: #5E5E5E;">=</span> np.zeros(<span class="dv" style="color: #AD0000;">30</span>)</span>
<span id="cb3-5">ens_var <span class="op" style="color: #5E5E5E;">=</span> np.zeros(<span class="dv" style="color: #AD0000;">30</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="cf" style="color: #003B4F;">for</span> i, w1 <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(weight_m1):</span>
<span id="cb3-8">    <span class="co" style="color: #5E5E5E;"># build ensemble for different weights</span></span>
<span id="cb3-9">    ens <span class="op" style="color: #5E5E5E;">=</span> m1<span class="op" style="color: #5E5E5E;">*</span>w1 <span class="op" style="color: #5E5E5E;">+</span> m2<span class="op" style="color: #5E5E5E;">*</span>(<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">-</span>w1)</span>
<span id="cb3-10">    ens_res <span class="op" style="color: #5E5E5E;">=</span> y_true <span class="op" style="color: #5E5E5E;">-</span> ens</span>
<span id="cb3-11">    </span>
<span id="cb3-12">    <span class="co" style="color: #5E5E5E;"># keep track of mean and var of the differently weighted ensembles</span></span>
<span id="cb3-13">    ens_mean[i] <span class="op" style="color: #5E5E5E;">=</span> ens_res.mean()</span>
<span id="cb3-14">    ens_var[i] <span class="op" style="color: #5E5E5E;">=</span> ens_res.var()</span></code></pre></div>
</div>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="14">
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation_files/figure-html/cell-15-output-1.png" class="img-fluid"></p>
</div>
</div>
<p>With the previous 50:50 split the variance seems almost at the lowest point. So we only get a reduction of the mean below 0.0357 if we allow the ensemble to have more variance, hence take more risk.</p>
</section>
<section id="weights-by-residual-variance" class="level1">
<h1>2. Weights by residual variance</h1>
<p>Since the Model 1 and Model 2 are well fitted, their average residuals are pretty close to 0. So let’s focus on reducing our variance to avoid surprises on later later predictions.</p>
<p>We now solve for the optimal weights that minimizes the variance of the residual of our ensemble with this function:</p>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">fun <span class="op" style="color: #5E5E5E;">=</span> <span class="kw" style="color: #003B4F;">lambda</span> w: (y_true<span class="op" style="color: #5E5E5E;">-</span>np.matmul(w, preds)).var()</span></code></pre></div>
</div>
<p>We also define a constraint so that the <code>w.sum() == 0</code>:</p>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># w.sum() = 1  &lt;=&gt; 0 = w.sum()-1</span></span>
<span id="cb5-2">cons <span class="op" style="color: #5E5E5E;">=</span> ({<span class="st" style="color: #20794D;">'type'</span>: <span class="st" style="color: #20794D;">'eq'</span>, <span class="st" style="color: #20794D;">'fun'</span>: <span class="kw" style="color: #003B4F;">lambda</span> w: w.<span class="bu" style="color: null;">sum</span>()<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>})</span></code></pre></div>
</div>
<p>If you want, you can also set bounds, so that the weights want be negative.</p>
<p>I don’t. I like the idea of going <em>short</em> with a model. And negative weights really increase the results of TPS predictions in chapter 4.</p>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">bnds <span class="op" style="color: #5E5E5E;">=</span> ((<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>),</span>
<span id="cb6-2">        (<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>),</span>
<span id="cb6-3">        (<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>),</span>
<span id="cb6-4">        (<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>),</span>
<span id="cb6-5">        (<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>))</span></code></pre></div>
</div>
<p>Now, we are all set to retrieve the optimal weights.</p>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># predictions of Model1 and Model 2</span></span>
<span id="cb7-2">preds <span class="op" style="color: #5E5E5E;">=</span> np.array([m1, m2])</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;"># init weights</span></span>
<span id="cb7-5">w_init <span class="op" style="color: #5E5E5E;">=</span> np.ones(preds.shape[<span class="dv" style="color: #AD0000;">0</span>])<span class="op" style="color: #5E5E5E;">/</span>preds.shape[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;"># run optimization</span></span>
<span id="cb7-8">res <span class="op" style="color: #5E5E5E;">=</span> scipy.optimize.minimize(fun, w_init, method<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'SLSQP'</span>,  constraints<span class="op" style="color: #5E5E5E;">=</span>cons) <span class="co" style="color: #5E5E5E;">#,bounds=bnds</span></span>
<span id="cb7-9"></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;"># get optimal weights</span></span>
<span id="cb7-11">w_calc <span class="op" style="color: #5E5E5E;">=</span> res.x</span>
<span id="cb7-12"></span>
<span id="cb7-13"></span>
<span id="cb7-14"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f'Calculated weights: </span><span class="sc" style="color: #5E5E5E;">{</span>w_calc<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Calculated weights: [0.53150242 0.46849758]</code></pre>
</div>
</div>
<p>Let’s see how the calculated weights perform.</p>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">ens_ex1 <span class="op" style="color: #5E5E5E;">=</span> np.matmul(w_calc, preds)</span>
<span id="cb9-2">ens_ex1_res<span class="op" style="color: #5E5E5E;">=</span>y_true<span class="op" style="color: #5E5E5E;">-</span>ens_ex1</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f'Ensemble Ex1. mean: </span><span class="sc" style="color: #5E5E5E;">{</span>ens_ex1_res<span class="sc" style="color: #5E5E5E;">.</span>mean()<span class="sc" style="color: #5E5E5E;">: .4f}</span><span class="ss" style="color: #20794D;">, var: </span><span class="sc" style="color: #5E5E5E;">{</span>ens_ex1_res<span class="sc" style="color: #5E5E5E;">.</span>var()<span class="sc" style="color: #5E5E5E;">: .4f}</span><span class="ss" style="color: #20794D;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Ensemble Ex1. mean:  0.0380, var:  0.2157</code></pre>
</div>
</div>
<p>We con compare the results with the first ensemble 50:50 split. With the calculated weights we could further reduce the variance of the model (0.2219 -&gt; 0.2157). But unfortunately the mean increased a bit (0.0357 -&gt; 0.0380).</p>
<p>We see the trade off between mean and variance and have to decide if we prefer a more stable model or take some risk for better results.</p>
</section>
<section id="portfolio-theory-for-ensembling" class="level1">
<h1>3. Portfolio theory for ensembling</h1>
<p>In finance different assets are often combined in a portfolio. There are many criteria for the asset selection/allocation. One of them is by choosing a risk strategy. In 1952 the economist Harry Markowitz defined a <em>Portfolio Selection</em> strategy which built the foundation of many portfolio strategies to come. There is a great summary on <a href="https://en.wikipedia.org/wiki/Modern_portfolio_theory">Wikipidia</a>, but the original paper can also be found with a google search.</p>
<p>So, what it is all about. Let’s assume we are living in an easy, plain vanilla world. We want to build a portfolio that yields high return with low risk. That’s not easy. If we only buy stocks of our favorite fruit grower, a rainy summer would result in a low return. Wouldn’t it be smart to also buy stocks of a raincoat producer, just in case. But what if the summer was sunny, then we would have rather invested the entire money in fruits instead of raincoats. It’s clearly a trade off. Either we lower the risk of loosing money in a rainy summer and invest in both (fruits and raincoats). Or we take the risk investing all money in fruits to maybe gain more money. And if we lower the risk, in which raincoat producer should we invest? The one with the bumpy stock price or the one with a steady, but slowly growing stock price.</p>
<p>Now, we already see the first similarities between our ensemble example above and the Portfolio Theory. Risk can be measured through variance and a good return of our ensemble is results in a low expected residual.</p>
<p>But there is even more in Portfolio Theory. It also takes dependencies between assets into account. If the summer is sunny the fruit price goes up and the raincoat price goes down, they are somewhat negative correlated.</p>
<p>Since we expect the average residual of our fitted models to be close to 0 and we build a linear model, we can expect our ensemble average residual also to be close to 0. Therefore, we focus on optimizing the portfolio variance, which can be boiled down to <code>Var_p = w'*Cov*w</code>. The covariance measures the dependency between combined models and also considers the variance.</p>
<blockquote class="blockquote">
<p>What data can we actually use? In the financial example <em>returns</em> are the increase or decrease of an asset price (p/p_t-1), hence we are looking on returns for a certain period of time. In ML we can take our <strong>out-of-fold</strong> (oof) predictions and calculate the residuals from the train targets to build a dataset.</p>
</blockquote>
<blockquote class="blockquote">
<p>Can we do this despite we are looking at a time-series in the financial example? Yes, in this <em>basic</em> portfolio theory we don’t take time dependencies into account. But it’s important to keep the same order for the different asset returns for correlation/covariance calculation. We want to compare the residual of model 1 and 2 for always the same data item.</p>
</blockquote>
<p>The optimization function for the second ensemble technique is:</p>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;">## following https://en.wikipedia.org/wiki/Modern_portfolio_theory</span></span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;"># Predictions of Model 1 and Model 2</span></span>
<span id="cb11-4">preds <span class="op" style="color: #5E5E5E;">=</span> np.array([m1,m2])</span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;"># Residuals of Model 1 and Model 2</span></span>
<span id="cb11-6">preds_res <span class="op" style="color: #5E5E5E;">=</span> np.array([m1_res, m2_res])</span>
<span id="cb11-7"></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;"># handle residuals like asset returns</span></span>
<span id="cb11-9">R <span class="op" style="color: #5E5E5E;">=</span> np.array(preds_res.mean(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>))</span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;"># factor by which R is considered during optimization. turned off for our example</span></span>
<span id="cb11-11">q <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span> <span class="co" style="color: #5E5E5E;">#-1</span></span>
<span id="cb11-12"></span>
<span id="cb11-13"><span class="co" style="color: #5E5E5E;"># covariance matrix of model residuals</span></span>
<span id="cb11-14">CM <span class="op" style="color: #5E5E5E;">=</span> np.cov(preds_res)</span>
<span id="cb11-15"></span>
<span id="cb11-16"><span class="co" style="color: #5E5E5E;"># optimization function</span></span>
<span id="cb11-17">fun <span class="op" style="color: #5E5E5E;">=</span> <span class="kw" style="color: #003B4F;">lambda</span> w: np.matmul(np.matmul(w.T,CM),w) <span class="op" style="color: #5E5E5E;">-</span> q <span class="op" style="color: #5E5E5E;">*</span> np.matmul(R,w)</span>
<span id="cb11-18"></span>
<span id="cb11-19"><span class="co" style="color: #5E5E5E;"># constraint: weights must sum up to 1.0</span></span>
<span id="cb11-20">cons <span class="op" style="color: #5E5E5E;">=</span> ({<span class="st" style="color: #20794D;">'type'</span>: <span class="st" style="color: #20794D;">'eq'</span>, <span class="st" style="color: #20794D;">'fun'</span>: <span class="kw" style="color: #003B4F;">lambda</span> x: x.<span class="bu" style="color: null;">sum</span>()<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>})</span></code></pre></div>
</div>
<p>Run the optimization.</p>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;"># init weights</span></span>
<span id="cb12-2">w_init <span class="op" style="color: #5E5E5E;">=</span> np.ones(preds.shape[<span class="dv" style="color: #AD0000;">0</span>])<span class="op" style="color: #5E5E5E;">/</span>preds.shape[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;"># run optimization</span></span>
<span id="cb12-5">res <span class="op" style="color: #5E5E5E;">=</span> scipy.optimize.minimize(fun, w_init, method<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'SLSQP'</span>,  constraints<span class="op" style="color: #5E5E5E;">=</span>cons) <span class="co" style="color: #5E5E5E;">#,bounds=bnds</span></span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;"># get optimal weights</span></span>
<span id="cb12-8">w_calc <span class="op" style="color: #5E5E5E;">=</span> res.x</span>
<span id="cb12-9"></span>
<span id="cb12-10"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f'Calculated weights: </span><span class="sc" style="color: #5E5E5E;">{</span>w_calc<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Calculated weights: [0.53150242 0.46849758]</code></pre>
</div>
</div>
<p>The weights are the same as in the first technique. That really surprised me. And I run a couple of examples with different models. But the weights were only slightly different between the two techniques.</p>
</section>
<section id="ensembling-tps-aug-2021" class="level1">
<h1>4. Ensembling TPS Aug 2021</h1>
<p>Now that we have to techniques to ensemble, let’s try them on the <a href="https://www.kaggle.com/c/tabular-playground-series-aug-2021/overview">TPS August 2021</a> data.</p>
<p>We do a 7 kfold split and calculate the residuals on the out-of-fold-predictions, that are used for validation. We train 7 regression models with different architecture so we get some diversity.</p>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">N_SPLITS <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">7</span></span>
<span id="cb14-2">SEED <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2021</span></span>
<span id="cb14-3"></span>
<span id="cb14-4">PATH_INPUT <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'/home/kaggle/TPS-AUG-2021/input/'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;"># load and shuffle</span></span>
<span id="cb15-2">test <span class="op" style="color: #5E5E5E;">=</span> pd.read_csv(PATH_INPUT <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'test.csv'</span>)</span>
<span id="cb15-3"></span>
<span id="cb15-4">train <span class="op" style="color: #5E5E5E;">=</span> pd.read_csv(PATH_INPUT <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'train.csv'</span>).sample(frac<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>, random_state <span class="op" style="color: #5E5E5E;">=</span> SEED).reset_index(drop<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb15-5"></span>
<span id="cb15-6">train[<span class="st" style="color: #20794D;">'fold_crit'</span>] <span class="op" style="color: #5E5E5E;">=</span> train.loss</span>
<span id="cb15-7">train.loc[train.loss<span class="op" style="color: #5E5E5E;">&gt;=</span><span class="dv" style="color: #AD0000;">39</span>, <span class="st" style="color: #20794D;">'fold_crit'</span>]<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">39</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">target <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'loss'</span></span>
<span id="cb16-2">fold_crit <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'fold_crit'</span></span>
<span id="cb16-3">features <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">list</span>(<span class="bu" style="color: null;">set</span>(train.columns)<span class="op" style="color: #5E5E5E;">-</span><span class="bu" style="color: null;">set</span>([<span class="st" style="color: #20794D;">'id'</span>,<span class="st" style="color: #20794D;">'kfold'</span>,<span class="st" style="color: #20794D;">'loss'</span>,<span class="st" style="color: #20794D;">'fold_crit'</span>]<span class="op" style="color: #5E5E5E;">+</span>[target]))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;"># apply abhisheks splitting technique</span></span>
<span id="cb17-2">skf <span class="op" style="color: #5E5E5E;">=</span> StratifiedKFold(n_splits <span class="op" style="color: #5E5E5E;">=</span> N_SPLITS, random_state <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span>, shuffle <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>)</span>
<span id="cb17-3"></span>
<span id="cb17-4">train.kfold <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb17-5"></span>
<span id="cb17-6"><span class="cf" style="color: #003B4F;">for</span> f, (train_idx, valid_idx) <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(skf.split(X <span class="op" style="color: #5E5E5E;">=</span> train, y <span class="op" style="color: #5E5E5E;">=</span> train[fold_crit].values)):</span>
<span id="cb17-7">    </span>
<span id="cb17-8">    train.loc[valid_idx,<span class="st" style="color: #20794D;">'kfold'</span>] <span class="op" style="color: #5E5E5E;">=</span> f</span>
<span id="cb17-9"></span>
<span id="cb17-10">train.groupby(<span class="st" style="color: #20794D;">'kfold'</span>)[target].count()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>kfold
0.0    35715
1.0    35715
2.0    35714
3.0    35714
4.0    35714
5.0    35714
6.0    35714
Name: loss, dtype: int64</code></pre>
</div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;"># define models</span></span>
<span id="cb19-2">models <span class="op" style="color: #5E5E5E;">=</span> {</span>
<span id="cb19-3">    <span class="st" style="color: #20794D;">'LinReg'</span>: LinearRegression(n_jobs<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb19-4">    <span class="st" style="color: #20794D;">'HGB'</span>: HistGradientBoostingRegressor(),</span>
<span id="cb19-5">    <span class="st" style="color: #20794D;">'XGB'</span>: XGBRegressor(tree_method <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'gpu_hist'</span>, reg_lambda<span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">6</span>, reg_alpha<span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">10</span>, n_jobs<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb19-6">    <span class="st" style="color: #20794D;">'KNN'</span>: KNeighborsRegressor(<span class="dv" style="color: #AD0000;">100</span>, n_jobs<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb19-7">    <span class="st" style="color: #20794D;">'BayesRidge'</span>: BayesianRidge(),</span>
<span id="cb19-8">    <span class="st" style="color: #20794D;">'ExtraTrees'</span>: ExtraTreesRegressor(max_depth<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, n_jobs<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb19-9">    <span class="st" style="color: #20794D;">'Poisson'</span>: Pipeline(steps<span class="op" style="color: #5E5E5E;">=</span>[(<span class="st" style="color: #20794D;">'scale'</span>, StandardScaler()),</span>
<span id="cb19-10">                (<span class="st" style="color: #20794D;">'pois'</span>, PoissonRegressor(max_iter<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span>))])    </span>
<span id="cb19-11">}</span>
<span id="cb19-12"></span></code></pre></div>
</div>
<p>Fit models and save oof predictions.</p>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="cf" style="color: #003B4F;">for</span> (m_name, m) <span class="kw" style="color: #003B4F;">in</span> models.items():</span>
<span id="cb20-2">    <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f'# Model:</span><span class="sc" style="color: #5E5E5E;">{</span>m_name<span class="sc" style="color: #5E5E5E;">}</span><span class="ch" style="color: #20794D;">\n</span><span class="ss" style="color: #20794D;">'</span>)</span>
<span id="cb20-3">    train[m_name <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'_oof'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb20-4">    test[m_name] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb20-5">    </span>
<span id="cb20-6">    y_oof <span class="op" style="color: #5E5E5E;">=</span> np.zeros(train.shape[<span class="dv" style="color: #AD0000;">0</span>])</span>
<span id="cb20-7">    </span>
<span id="cb20-8">    <span class="cf" style="color: #003B4F;">for</span> f <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(N_SPLITS):</span>
<span id="cb20-9"></span>
<span id="cb20-10">        train_df <span class="op" style="color: #5E5E5E;">=</span> train[train[<span class="st" style="color: #20794D;">'kfold'</span>] <span class="op" style="color: #5E5E5E;">!=</span> f]</span>
<span id="cb20-11">        valid_df <span class="op" style="color: #5E5E5E;">=</span> train[train[<span class="st" style="color: #20794D;">'kfold'</span>] <span class="op" style="color: #5E5E5E;">==</span> f]</span>
<span id="cb20-12">        </span>
<span id="cb20-13">        m.fit(train_df[features], train_df[target])</span>
<span id="cb20-14">        </span>
<span id="cb20-15">        oof_preds <span class="op" style="color: #5E5E5E;">=</span> m.predict(valid_df[features])</span>
<span id="cb20-16">        y_oof[valid_df.index] <span class="op" style="color: #5E5E5E;">=</span> oof_preds</span>
<span id="cb20-17">        <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f'Fold </span><span class="sc" style="color: #5E5E5E;">{</span>f<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> rmse: </span><span class="sc" style="color: #5E5E5E;">{</span>mean_squared_error(valid_df[target], oof_preds, squared <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>)<span class="sc" style="color: #5E5E5E;">:0.5f}</span><span class="ss" style="color: #20794D;">'</span>)</span>
<span id="cb20-18">        </span>
<span id="cb20-19">        test[m_name] <span class="op" style="color: #5E5E5E;">+=</span> m.predict(test[features]) <span class="op" style="color: #5E5E5E;">/</span> N_SPLITS</span>
<span id="cb20-20">    </span>
<span id="cb20-21">    train[m_name <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'_oof'</span>] <span class="op" style="color: #5E5E5E;">=</span> y_oof</span>
<span id="cb20-22">    </span>
<span id="cb20-23">    <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"</span><span class="ch" style="color: #20794D;">\n</span><span class="ss" style="color: #20794D;">Total rmse: </span><span class="sc" style="color: #5E5E5E;">{</span>mean_squared_error(train[target], train[m_name <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'_oof'</span>], squared <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>)<span class="sc" style="color: #5E5E5E;">:0.5f}</span><span class="ch" style="color: #20794D;">\n</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb20-24"></span>
<span id="cb20-25"></span>
<span id="cb20-26">oof_cols <span class="op" style="color: #5E5E5E;">=</span> [m_name <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'_oof'</span> <span class="cf" style="color: #003B4F;">for</span> m_name <span class="kw" style="color: #003B4F;">in</span> models.keys()]</span>
<span id="cb20-27"></span>
<span id="cb20-28"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"# ALL Mean ensemble rmse: </span><span class="sc" style="color: #5E5E5E;">{</span>mean_squared_error(train[target], train[oof_cols].mean(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>), squared <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>)<span class="sc" style="color: #5E5E5E;">:0.5f}</span><span class="ch" style="color: #20794D;">\n</span><span class="ss" style="color: #20794D;">"</span>)        </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># Model:LinReg

Fold 0 rmse: 7.89515
Fold 1 rmse: 7.90212
Fold 2 rmse: 7.90260
Fold 3 rmse: 7.89748
Fold 4 rmse: 7.89844
Fold 5 rmse: 7.89134
Fold 6 rmse: 7.89643

Total rmse: 7.89765

# Model:HGB

Fold 0 rmse: 7.86447
Fold 1 rmse: 7.87374
Fold 2 rmse: 7.86688
Fold 3 rmse: 7.86255
Fold 4 rmse: 7.86822
Fold 5 rmse: 7.85785
Fold 6 rmse: 7.86566

Total rmse: 7.86563

# Model:XGB

Fold 0 rmse: 7.91179
Fold 1 rmse: 7.92748
Fold 2 rmse: 7.92141
Fold 3 rmse: 7.91901
Fold 4 rmse: 7.91125
Fold 5 rmse: 7.90286
Fold 6 rmse: 7.92340

Total rmse: 7.91675

# Model:KNN

Fold 0 rmse: 7.97845
Fold 1 rmse: 7.97709
Fold 2 rmse: 7.98165
Fold 3 rmse: 7.97895
Fold 4 rmse: 7.97781
Fold 5 rmse: 7.97798
Fold 6 rmse: 7.98711

Total rmse: 7.97986

# Model:BayesRidge

Fold 0 rmse: 7.89649
Fold 1 rmse: 7.90576
Fold 2 rmse: 7.90349
Fold 3 rmse: 7.90007
Fold 4 rmse: 7.90121
Fold 5 rmse: 7.89455
Fold 6 rmse: 7.89928

Total rmse: 7.90012

# Model:ExtraTrees

Fold 0 rmse: 7.93239
Fold 1 rmse: 7.93247
Fold 2 rmse: 7.92993
Fold 3 rmse: 7.93121
Fold 4 rmse: 7.93129
Fold 5 rmse: 7.93247
Fold 6 rmse: 7.93364

Total rmse: 7.93191

# Model:Poisson

Fold 0 rmse: 7.89597
Fold 1 rmse: 7.90240
Fold 2 rmse: 7.90233
Fold 3 rmse: 7.89682
Fold 4 rmse: 7.89873
Fold 5 rmse: 7.89241
Fold 6 rmse: 7.89701

Total rmse: 7.89795

# ALL Mean ensemble rmse: 7.88061
</code></pre>
</div>
</div>
<p>Let’s a look at the correlation heatmap.</p>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"></span>
<span id="cb22-2">oof_cols <span class="op" style="color: #5E5E5E;">=</span> [m_name <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'_oof'</span> <span class="cf" style="color: #003B4F;">for</span> m_name <span class="kw" style="color: #003B4F;">in</span> models.keys()]</span>
<span id="cb22-3"></span>
<span id="cb22-4">oofs <span class="op" style="color: #5E5E5E;">=</span> train[oof_cols]</span>
<span id="cb22-5"></span>
<span id="cb22-6">oof_diffs <span class="op" style="color: #5E5E5E;">=</span> oofs.copy()</span>
<span id="cb22-7"><span class="cf" style="color: #003B4F;">for</span> c <span class="kw" style="color: #003B4F;">in</span> oof_cols:</span>
<span id="cb22-8">    oof_diffs[c] <span class="op" style="color: #5E5E5E;">=</span> oofs[c]<span class="op" style="color: #5E5E5E;">-</span>train[target]</span>
<span id="cb22-9">    oof_diffs[c] <span class="op" style="color: #5E5E5E;">=</span> oof_diffs[c]<span class="co" style="color: #5E5E5E;">#**2</span></span>
<span id="cb22-10"></span>
<span id="cb22-11">sns.heatmap(oof_diffs.corr())</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<pre><code>&lt;AxesSubplot:&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation_files/figure-html/cell-32-output-2.png" class="img-fluid"></p>
</div>
</div>
<p>XGB and KNN are most diverse, so I export a 50:50 ensemble. I’ll also export an equally weighted ensemble of all models and HGB only because it is the best single model.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="32">
<div class="cell-output cell-output-stdout">
<pre><code>CV: ALL equaly weighted: 7.880605075536334
CV: XGB only: 7.916746570344035
CV: HGB only: 7.865625158180185
CV: XGB and LinReg (50:50): 7.872064005057903
CV: XGB and KNN (50:50): 7.893210466099108</code></pre>
</div>
</div>
<p>Next we inspect the variance and mean of the residuals. Means are close to 0, as expected.</p>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">oof_diffs.var(), oof_diffs.mean()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre><code>(LinReg_oof        62.373163
 HGB_oof           61.868296
 XGB_oof           62.675125
 KNN_oof           63.678431
 BayesRidge_oof    62.412188
 ExtraTrees_oof    62.915511
 Poisson_oof       62.377910
 dtype: float64,
 LinReg_oof       -0.000055
 HGB_oof          -0.003314
 XGB_oof           0.001392
 KNN_oof          -0.005395
 BayesRidge_oof   -0.000024
 ExtraTrees_oof   -0.000136
 Poisson_oof      -0.000084
 dtype: float64)</code></pre>
</div>
</div>
<p>These are the histograms of the residuals:</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="34">
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>array([[&lt;AxesSubplot:title={'center':'LinReg_oof'}&gt;,
        &lt;AxesSubplot:title={'center':'HGB_oof'}&gt;,
        &lt;AxesSubplot:title={'center':'XGB_oof'}&gt;],
       [&lt;AxesSubplot:title={'center':'KNN_oof'}&gt;,
        &lt;AxesSubplot:title={'center':'BayesRidge_oof'}&gt;,
        &lt;AxesSubplot:title={'center':'ExtraTrees_oof'}&gt;],
       [&lt;AxesSubplot:title={'center':'Poisson_oof'}&gt;, &lt;AxesSubplot:&gt;,
        &lt;AxesSubplot:&gt;]], dtype=object)</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation_files/figure-html/cell-35-output-2.png" class="img-fluid"></p>
</div>
</div>
<p>Finally, we apply the two techniques to calculate the ensembling weights</p>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">R <span class="op" style="color: #5E5E5E;">=</span> oof_diffs.mean().values</span>
<span id="cb28-2">CM <span class="op" style="color: #5E5E5E;">=</span> oof_diffs.cov().values</span>
<span id="cb28-3"></span>
<span id="cb28-4">q<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb28-5"></span>
<span id="cb28-6"><span class="co" style="color: #5E5E5E;"># Var technique</span></span>
<span id="cb28-7">fun_ex1 <span class="op" style="color: #5E5E5E;">=</span> <span class="kw" style="color: #003B4F;">lambda</span> w: (train[target]<span class="op" style="color: #5E5E5E;">-</span>np.matmul(oofs.values, w)).var()</span>
<span id="cb28-8"><span class="co" style="color: #5E5E5E;"># Cov technique</span></span>
<span id="cb28-9">fun_ex2 <span class="op" style="color: #5E5E5E;">=</span> <span class="kw" style="color: #003B4F;">lambda</span> w: np.matmul(np.matmul(w.T,CM),w) <span class="op" style="color: #5E5E5E;">-</span> q <span class="op" style="color: #5E5E5E;">*</span> np.matmul(R,w)</span>
<span id="cb28-10"></span>
<span id="cb28-11">cons <span class="op" style="color: #5E5E5E;">=</span> ({<span class="st" style="color: #20794D;">'type'</span>: <span class="st" style="color: #20794D;">'eq'</span>, <span class="st" style="color: #20794D;">'fun'</span>: <span class="kw" style="color: #003B4F;">lambda</span> x: x.<span class="bu" style="color: null;">sum</span>()<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>})</span>
<span id="cb28-12"></span>
<span id="cb28-13">bnds <span class="op" style="color: #5E5E5E;">=</span> ((<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>),</span>
<span id="cb28-14">        (<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>),</span>
<span id="cb28-15">        (<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>),</span>
<span id="cb28-16">        (<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>),</span>
<span id="cb28-17">        (<span class="dv" style="color: #AD0000;">0</span>,<span class="va" style="color: #111111;">None</span>))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="co" style="color: #5E5E5E;"># Example 1</span></span>
<span id="cb29-2"></span>
<span id="cb29-3">w_init <span class="op" style="color: #5E5E5E;">=</span> np.ones((<span class="bu" style="color: null;">len</span>(models)))<span class="op" style="color: #5E5E5E;">/</span><span class="bu" style="color: null;">len</span>(models)</span>
<span id="cb29-4"></span>
<span id="cb29-5">res <span class="op" style="color: #5E5E5E;">=</span> scipy.optimize.minimize(fun_ex1, w_init, method<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'SLSQP'</span>,  constraints<span class="op" style="color: #5E5E5E;">=</span>cons) <span class="co" style="color: #5E5E5E;">#,bounds=bnds</span></span>
<span id="cb29-6"></span>
<span id="cb29-7">w_calc <span class="op" style="color: #5E5E5E;">=</span> res.x</span></code></pre></div>
</div>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="37">
<div class="cell-output cell-output-stdout">
<pre><code>CV: Ex1 calc weights: 7.85594426240217</code></pre>
</div>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;"># Example 2</span></span>
<span id="cb31-2"></span>
<span id="cb31-3">w_init <span class="op" style="color: #5E5E5E;">=</span> np.ones((<span class="bu" style="color: null;">len</span>(models)))<span class="op" style="color: #5E5E5E;">/</span><span class="bu" style="color: null;">len</span>(models)</span>
<span id="cb31-4"></span>
<span id="cb31-5">res <span class="op" style="color: #5E5E5E;">=</span> scipy.optimize.minimize(fun_ex2, w_init, method<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'SLSQP'</span>,  constraints<span class="op" style="color: #5E5E5E;">=</span>cons) <span class="co" style="color: #5E5E5E;">#,bounds=bnds</span></span>
<span id="cb31-6"></span>
<span id="cb31-7">w_calc <span class="op" style="color: #5E5E5E;">=</span> res.x</span></code></pre></div>
</div>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="39">
<div class="cell-output cell-output-stdout">
<pre><code>CV: Ex2 calc weights: 7.855944262936231</code></pre>
</div>
</div>
</section>
<section id="results" class="level1">
<h1>5. Results</h1>
<p>The competition metric is root mean squared error (RMSE). These are the scores of the different ensembles:</p>
<table class="table">
<thead>
<tr class="header">
<th>Ensemble</th>
<th>CV</th>
<th>public LB</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>HGB only</td>
<td>7.86563</td>
<td>7.90117</td>
</tr>
<tr class="even">
<td>All weights eq.</td>
<td>7.88061</td>
<td>7.92183</td>
</tr>
<tr class="odd">
<td>XGB and KNN (50:50)</td>
<td>7.89321</td>
<td>7.91603</td>
</tr>
<tr class="even">
<td>Ex1 (Var)</td>
<td>7.85594</td>
<td>7.88876</td>
</tr>
<tr class="odd">
<td>Ex2 (Cov)</td>
<td>7.85594</td>
<td>7.88876</td>
</tr>
</tbody>
</table>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li>Modern Portfolio Theory: https://en.wikipedia.org/wiki/Modern_portfolio_theory</li>
<li>TPS August 2021 Competition: https://www.kaggle.com/c/tabular-playground-series-aug-2021/overview</li>
</ul>
</section>
<section id="ressources" class="level1">
<h1>Ressources</h1>
<ul>
<li>Original notebook: https://www.kaggle.com/joatom/model-allocation</li>
<li>TPS data: https://www.kaggle.com/c/tabular-playground-series-aug-2021/data</li>
</ul>


</section>

 ]]></description>
  <category>Basics</category>
  <category>ML</category>
  <category>Economics</category>
  <guid>https://joatom.github.io/blog/posts/2021-08-15-model-allocation/2021-08-15-model-allocation.html</guid>
  <pubDate>Sat, 14 Aug 2021 22:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2021-08-15-model-allocation/model_allocation.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Streaming ML training progress to a smart watch</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2021-06-19-watchtrain/index.html</link>
  <description><![CDATA[ 




<p align="center">
<span class="emoji" data-emoji="mountain_snow">🏔️</span>
</p>
<p>During the Covid winter I hardly had any reason to leave the house. It was clear that I actively had to look after my mental and physical well-being. So, I decided to buy a smart watch (Fitbit Versa 3) and take on the 10000 steps per day challenge. Henceforth I spent much more time outside and in the sunlight moving my body.</p>
<p align="center">
<span class="emoji" data-emoji="partly_sunny">⛅</span>
</p>
<p>When I registered my new Fitbit I instantly got attracted by the <em><a href="https://dev.fitbit.com/">For Developers</a></em> link. As you might guess my thoughts started spinning like - <em>Aha, they are providing a SDK! I got to try this out at some point and build an app for the watch.</em> - I wanted this app to be related to ML or at least to data somehow. My first thought was - <em>Would it be possible to use the green heart-rate sensor light as an OCR? - Nope, to complicated for a fun project.</em> - Then I went on with the registration of the watch on the webpage.</p>
<p align="center">
<span class="emoji" data-emoji="sun_behind_small_cloud">🌤️</span>
</p>
<p>Some month later, on a usual Sunday, I lay resting on the couch after lunch while the kids and my wife were cleaning the table and kitchen (I did the cooking ;-)). A little bored, I thought of my ML-model that was training on <em><a href="https://joatom.github.io/ai_curious/vision/classification/2021/05/28/hotel.html">Hotel Room classification</a></em> for a couple of hours upstairs in the office. I wanted to know how it was preceding. Sneaking upstairs would result in half an hour in front of the computer, followed by some trouble with my wife <span class="emoji" data-emoji="unamused">😒</span>. - <em>May by I should eventually register at Neptune.ai or wandb.ai, then I could preview my trainings from the couch on my cell phone!?</em> … <em>Or may be I now have a new fun project for my new watch <span class="emoji" data-emoji="smile">😄</span> <span class="emoji" data-emoji="bulb">💡</span>!</em> -</p>
<section id="user-story" class="level1">
<h1>User story</h1>
<p>Those were the requirements that finally got implemented: - Statistics (for metrics and losses) need to be captured during the training, so that I can see if training improves. - Progress of training needs to be captured and made available to the watch instantly, so that I can estimate how long the training will take to finish. - Stats &amp; progs should be processable in pytorch and fastai trainings, so that I can use my preferred ML libraries. - The watch plots the metrics history of the current training as line chart. so that I can quickly see if training improves on which metric. - The metrics values should be plotted, so I can easily compare with former trainings. - Progress on epochs and batches (train and valid) are plotted, so I can easily estimate how long the remaining training steps will last.</p>
<p>As by-product the training progress can also be displayed on a browser. This feature was build in parallel for debugging purpose.</p>
</section>
<section id="architecture" class="level1">
<h1>Architecture</h1>
<section id="api-server" class="level2">
<h2 class="anchored" data-anchor-id="api-server">API-Server</h2>
<p>The requirements led to the architecture shown in the diagram. In the center of the application is an API-Server to coordinate the training and the watch. The <em>Training</em>, <em>Watch</em> and <em>Web</em> are client applications connected to the API-Server’s <em>Watchtrain-Topic</em>. The <em>Topic</em> contains a connection pool for the <em>Training</em> client (data <em>Producer</em>) and another connection pool for the <em>Web</em> and the <em>Watch</em> clients (data <em>Consumer</em>).</p>
<p><img src="https://joatom.github.io/blog/posts/2021-06-19-watchtrain/arch.png" class="img-fluid"></p>
<blockquote class="blockquote">
<p>The initial idea was to setup a classical Consumer/Producer (Pub/Sub) pattern. But it ended up a bit different. The Topic holds the data in an object rather than a queue-like state and also does some data processing. The Producer and Consumer can still subscribe at any time, but they are also strongly connected via Websockets. I took the chance to play around with websockets, since it is also available on the watch.</p>
</blockquote>
<p>For each client type there is an <em>Agent</em> that processes the data and messages that are send from the clients. The stats and progress data is saved in the topic. The topic generates the metric chart that is send to the Consumers, since I couldn’t find a charts library in the watch SDK.</p>
<p>The Topic-Consumer-Producer-Agent “pattern” with the connection pool handler is set up in a generic way so it’s easy to develop other applications in the same manner and run them on the API-Server.</p>
<p>As API-Server I used FastApi which is easy to start with as shown on the <a href="https://fastapi.tiangolo.com/tutorial/">tutorial site</a> or in <a href="https://www.youtube.com/watch?v=Mw9etoRz0Ic">this video</a>.</p>
<p>The communications between the components is done with JSON. Messages start with an <em>action</em>-field followed by the <em>training_id</em> and a more or less complex payload. Depending of the <em>action</em> value different functionalities are triggered, such as sending the metric image to the client or converting batch information into a progress bar.</p>
</section>
<section id="training" class="level2">
<h2 class="anchored" data-anchor-id="training">Training</h2>
<section id="fastai" class="level3">
<h3 class="anchored" data-anchor-id="fastai">Fastai</h3>
<p>The easiest way to implement the train logging is by using the Fastai Callback infrastructure. So I built a <em>WebsocketLogger</em> which gets past to the training like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">learn <span class="op" style="color: #5E5E5E;">=</span> cnn_learner(dls, resnet18, pretrained <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>, metrics<span class="op" style="color: #5E5E5E;">=</span>[accuracy, </span>
<span id="cb1-2">                                                                Recall(average<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'macro'</span>), </span>
<span id="cb1-3">                                                                Precision(average<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'macro'</span>)])</span>
<span id="cb1-4"></span>
<span id="cb1-5">learn.unfreeze</span>
<span id="cb1-6">learn.fit_one_cycle(<span class="dv" style="color: #AD0000;">10</span>, lr_max <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">5e-3</span>, cbs<span class="op" style="color: #5E5E5E;">=</span>[WebsocketLogger(<span class="st" style="color: #20794D;">'ws://myapiserver:8555/ws/watchtrain/producer/12345'</span>)])</span></code></pre></div>
<p>Starting out by looking at the source code of the fastai build-in <a href="https://github.com/fastai/fastai/blob/master/fastai/callback/progress.py">CSVLoggers and ProgressCallback</a> I learned how to track train data (metrics, epoch and batch progress). A bit challenging was the integration of the websocket client. I preferred a permanent connection rather than many one time (open-send-close) connections. Otherwise a simple REST call would have been more suitable. It is also very important that training must not break when the websocket connection is lost or the API-Server isn’t available anymore.</p>
<p>That’s how it is implemented using the <a href="https://github.com/websocket-client/websocket-client">websocket-client</a> library:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, conn, ...):</span>
<span id="cb2-3">    <span class="va" style="color: #111111;">self</span>.conn <span class="op" style="color: #5E5E5E;">=</span> conn</span>
<span id="cb2-4">    ...</span>
<span id="cb2-5">    <span class="va" style="color: #111111;">self</span>.heartbeat <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span></span>
<span id="cb2-6">    <span class="va" style="color: #111111;">self</span>._ws_connect()</span>
<span id="cb2-7">    ...</span>
<span id="cb2-8"></span>
<span id="cb2-9">...</span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;"># gets called when a websocket is opened</span></span>
<span id="cb2-11"><span class="kw" style="color: #003B4F;">def</span> _on_ws_open(<span class="va" style="color: #111111;">self</span>,ws):</span>
<span id="cb2-12">    <span class="co" style="color: #5E5E5E;"># ws connection is now ready =&gt; unlock</span></span>
<span id="cb2-13">    <span class="va" style="color: #111111;">self</span>.ws_ready_lock.release()</span>
<span id="cb2-14">    <span class="va" style="color: #111111;">self</span>.heartbeat <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span></span>
<span id="cb2-15">    </span>
<span id="cb2-16"><span class="kw" style="color: #003B4F;">def</span> _ws_connect(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-17">    </span>
<span id="cb2-18">    <span class="va" style="color: #111111;">self</span>.heartbeat <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span></span>
<span id="cb2-19">    </span>
<span id="cb2-20">    <span class="co" style="color: #5E5E5E;"># aquire lock until websocket is ready to use</span></span>
<span id="cb2-21">    <span class="va" style="color: #111111;">self</span>.ws_ready_lock <span class="op" style="color: #5E5E5E;">=</span> threading.Lock()</span>
<span id="cb2-22">    <span class="va" style="color: #111111;">self</span>.ws_ready_lock.acquire()</span>
<span id="cb2-23">    </span>
<span id="cb2-24">    <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'Connecting websocket ...'</span>)</span>
<span id="cb2-25">    </span>
<span id="cb2-26">    <span class="va" style="color: #111111;">self</span>.ws <span class="op" style="color: #5E5E5E;">=</span> websocket.WebSocketApp(<span class="va" style="color: #111111;">self</span>.conn,</span>
<span id="cb2-27">                                      on_open <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._on_ws_open,</span>
<span id="cb2-28">                                      on_message <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._on_ws_message,</span>
<span id="cb2-29">                                      on_error <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._on_ws_error,</span>
<span id="cb2-30">                                      on_close <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._on_ws_close)</span>
<span id="cb2-31"></span>
<span id="cb2-32">    <span class="co" style="color: #5E5E5E;"># run websocket in background</span></span>
<span id="cb2-33">    thread.start_new_thread(<span class="va" style="color: #111111;">self</span>.ws.run_forever, ())</span>
<span id="cb2-34">    </span>
<span id="cb2-35">    <span class="co" style="color: #5E5E5E;"># wait for websocket to be initialized, </span></span>
<span id="cb2-36">    <span class="co" style="color: #5E5E5E;"># if connection is not possible (e.g. APIServer is down) resume after 3 sec, but heartbeat stays FALSE</span></span>
<span id="cb2-37">    <span class="va" style="color: #111111;">self</span>.ws_ready_lock.acquire(timeout <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb2-38">    </span>
<span id="cb2-39">    <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'... websocket connected.'</span>)</span></code></pre></div>
<p>The <em>WebSocketApp</em> runs as a local websocket-handler in the background. The <em>Locks</em> are used to make sure the connection gets properly established before the first messages are send. The <em>heartbeat</em> is introduced to keep the training running even if the websocket connection is broken and could not be reconnected via <em>WebSocketApp</em>.</p>
<p>If there is no heartbeat anymore _ws_connect() is called again after any epoch. If the API-Server is still not reachable the training continuous after a 3 second waiting time.</p>
</section>
<section id="pytorch" class="level3">
<h3 class="anchored" data-anchor-id="pytorch">Pytorch</h3>
<p>I skipped the pytorch implementation until I need it. But it is straight forward. Start a WebSocketApp thread in the background. Send the data from inside of the training/validation/inference-loop.</p>
</section>
</section>
<section id="watch" class="level2">
<h2 class="anchored" data-anchor-id="watch">Watch</h2>
<p><img src="https://joatom.github.io/blog/posts/2021-06-19-watchtrain/watch1.png" class="img-fluid"></p>
<p>The layout is held pretty simple as shown in the picture. There is a progress bar for the epochs and one for the mini batches (train and valid). In the center is the chart of the metrics. And at the bottom are the latest metric values. The cell phone that belongs to the watch establish a websocket connection to the API-Server and puts <em>EventListeners</em> for incoming messages into place. The incoming messages are uploaded to the watch were they can be displayed.</p>
</section>
</section>
<section id="lessons-learned" class="level1">
<h1>Lessons learned</h1>
<section id="fastapi" class="level2">
<h2 class="anchored" data-anchor-id="fastapi">FastAPI</h2>
<p>FastAPI is a well-documented and easy to use framework. In the beginning I set it up with HTTPS. There is a tutorial on how to setup <a href="https://traefik.io/resources/traefik-fastapi-kuberrnetes-ai-ml/">FastAPI with Traefik</a>. But since I wanted to run the server at home I had to invest some evenings to figure out, how to set it up by myself. I used <a href="https://github.com/FiloSottile/mkcert">mkcert</a> for SSL creation. A docker file to setup an FastAPI-Server at home can now be found <a href="https://github.com/joatom/dev-environments/tree/master/apiserver">here</a>. At the end when I got it working I decided to not use HTTPS for reasons described below, <span class="emoji" data-emoji="man_shrugging">🤷‍♂️</span>.</p>
</section>
<section id="websockets" class="level2">
<h2 class="anchored" data-anchor-id="websockets">Websockets</h2>
<p>The different components communicate instantly. The data is pushed to the watch, which is the preferred behavior on the receiving site. With the websocket on the training site it is a bit more complicated to be fail safe and pickup communication when the connection is broken for a longer period of time. I might switch this part to a simple REST-post in a later version. But this way it was a fun exersice nevertheless.</p>
</section>
<section id="fitbit-sdk" class="level2">
<h2 class="anchored" data-anchor-id="fitbit-sdk">Fitbit SDK</h2>
<p>The Fitbit SDK is nice. They provide an online IDE which can easily be connected to your devices. The SDK is documented with a few examples. They also host helpful forum.</p>
<p>I had a bit of a hard time when I tried to load and display the Metrics chart image to the watch. I had to figure out that there are two types of jpeg, progressive and basic. And only one worked. It also was hard to figure out that the the image needs to have a certain size to be displayed. But that’s part of the normal learning path with a new technology.</p>
<p>And than, there was this one thing that really upset me (But as fare as I read in forums it is not the Fitbit SDKs fault!). Android doesn’t allow regular HTTP connection through apps. That’s why I setup the API-Server with HTTPS. But since I generated the certificate on my own, it wasn’t a trusted source and therefore Android didn’t accept it. Then I found some post that showed how to access HTTP from a local net, but only for IP range 192.168.0.x. That meant either building a Reverse Proxy or changing the Subnet of my network. And then finally I needed to deal with the docker net-addresse where the API-Server is running. As suspected, one evening I freaked out - <em>?#@!, I just want to send a JSON to my cell phone! 30 years of web-development and all we ended up is JavaScript and SSL-certs @!#</em> - That was a good time to go to bed, put the project aside for a few days and celebrate that most of the time I’m into data instead of GUI <span class="emoji" data-emoji="grin">😁</span>.</p>
<p>Besides that I really enjoyed it to build a nice app for my Fitbit.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>It was a fun project! Websockets, API, ML, App on a watch, it all fits together. I still have a thousand ideas for improvements and features. But for now I leave it as it is.</p>
</section>
<section id="implementation" class="level1">
<h1>Implementation</h1>
<p>The code for this project can be found in this repository: https://github.com/joatom/watchtrain</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<p>Here is a list of my inspirations, templates and useful content listed by topic.</p>
<p><strong>Fitbit SDK</strong></p>
<ul>
<li><a href="https://studio.fitbit.com/">Online IDE</a> (there also is a CLI version for VScode)</li>
<li><a href="https://dev.fitbit.com/build/guides/">Tutorials</a></li>
</ul>
<p><strong>FastAPI</strong></p>
<ul>
<li><a href="https://fastapi.tiangolo.com/tutorial/">FastAPI’s tutorials</a></li>
<li><a href="https://fastapi.tiangolo.com/advanced/websockets/">FastAPI and websockets</a></li>
<li><a href="https://fastapi.tiangolo.com/deployment/docker/">Docker setup</a></li>
<li><a href="https://traefik.io/resources/traefik-fastapi-kuberrnetes-ai-ml/">FastAPI with Traefik</a></li>
<li><a href="https://www.youtube.com/watch?v=Mw9etoRz0Ic">Video Tutorial</a> for using FastAPI to serve ML models</li>
</ul>
<p><strong>Training</strong></p>
<ul>
<li><a href="https://docs.fast.ai/tutorial.datablock.html#Image-classification">Fastai’s Datablock tutorial</a></li>
<li><a href="https://docs.fast.ai/callback.progress.html">CSV and Progress logger</a></li>
</ul>
<p><strong>Others</strong></p>
<ul>
<li><a href="https://www.uvicorn.org/deployment/#running-with-https">Uvicorn HTTPS options</a></li>
<li><a href="https://github.com/FiloSottile/mkcert">Mkcert installation guide</a></li>
</ul>


</section>

 ]]></description>
  <category>API</category>
  <category>ML</category>
  <category>Side Project</category>
  <guid>https://joatom.github.io/blog/posts/2021-06-19-watchtrain/index.html</guid>
  <pubDate>Fri, 18 Jun 2021 22:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2021-06-19-watchtrain/logo_watchtrain2.png" medium="image" type="image/png" height="80" width="144"/>
</item>
<item>
  <title>Identifying Hotels</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2021-05-28-hotel/index.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>“Recognizing a hotel from an image of a hotel room is important for human trafficking investigations. Images directly link victims to places and can help verify where victims have been trafficked.” (Stylianou et al., 2019).</p>
</blockquote>
<p>As part of the <a href="https://sites.google.com/view/fgvc8/home">Eight Workshop on Fine-Grained Visual Categorization</a> a kaggle competition was launched to support investigations by advancing models to identify hotels from images.</p>
<p>This post contains some parts of my contribution to the <a href="https://www.kaggle.com/c/hotel-id-2021-fgvc8/overview">Hotel-ID to Combat Human Trafficking 2021 - FGVC8</a> kaggle competition.</p>
<section id="the-challenge" class="level1">
<h1>The challenge</h1>
<p>The competition contained 97000+ images of hotel rooms from 7700<strong>!</strong> different hotels around the world. The objective was to identify the hotels of 13000 images from the hidden test set. The metric of the competition was Mean Average Precision of the top 5 picks (MAP@5). My solution scored <strong>14th place</strong> out of 92 teams with a 0.6164 MAP@5 on the private leaderboard.</p>
<p>My solution contained six CNN models with various configurations. More technical details and why I ended up with rather simple models is described in a kaggle <a href="https://www.kaggle.com/c/hotel-id-2021-fgvc8/discussion/242030">discussion topic</a>.</p>
<p>Here I post the training and inference of one of the six models as well as the ensemble inference code.</p>
</section>
<section id="training" class="level1">
<h1>Training</h1>
<p>The final training was done on the entire train dataset. I didn’t choose a cross validation strategy to safe training time. To keep variance low nonetheless I relied on the usual regularization strategies, such as dropout and augmentation and in particular on test time augmentation during inference.</p>
<p>To refine the model a validation set can be created by setting the <code>debug</code> flag as described in the notebook. <iframe src="https://www.kaggle.com/embed/joatom/hotel-train-fastai-densnet161?kernelSessionId=63702072" height="800" style="margin: 0 auto; width: 100%; max-width: 950px;" frameborder="0" scrolling="auto" title="Hotel train (fastai + densnet161)"></iframe></p>
</section>
<section id="inference" class="level1">
<h1>Inference</h1>
<iframe src="https://www.kaggle.com/embed/joatom/hotel-inference-fastai?kernelSessionId=63761117" height="800" style="margin: 0 auto; width: 100%; max-width: 950px;" frameborder="0" scrolling="auto" title="Hotel inference (fastai)">
</iframe>
</section>
<section id="inference-ensemble" class="level1">
<h1>Inference ensemble</h1>
<iframe src="https://www.kaggle.com/embed/joatom/fgvc8-hotel-ensemble-inference?kernelSessionId=63977973" height="800" style="margin: 0 auto; width: 100%; max-width: 950px;" frameborder="0" scrolling="auto" title="fgvc8 - hotel ensemble (inference)">
</iframe>
</section>
<section id="references" class="level1">
<h1>References</h1>
<p>Stylianou, Abby and Xuan, Hong and Shende, Maya and Brandt, Jonathan and Souvenir, Richard and Pless, Robert (2019). Hotels-50K: A Global Hotel Recognition Dataset. <em>The AAAI Conference on Artificial Intelligence (AAAI)</em></p>


</section>

 ]]></description>
  <category>Vision</category>
  <category>ML</category>
  <category>Competition</category>
  <guid>https://joatom.github.io/blog/posts/2021-05-28-hotel/index.html</guid>
  <pubDate>Thu, 27 May 2021 22:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2021-05-28-hotel/logo_hotel.png" medium="image" type="image/png" height="143" width="144"/>
</item>
<item>
  <title>Bending the space with nonlinearity</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2021-04-14-nonlinearity/index.html</link>
  <description><![CDATA[ 




<p>I’m trying out a new <a href="https://www.kaggle.com/product-feedback/230748">kaggle feature</a> which allows us to include kaggle notebooks in our personal blogs. This articel was initialy published as <a href="https://www.kaggle.com/joatom/bending-the-space-with-nonlinearity">kaggle notebook</a> in November 2020.</p>
<iframe src="https://www.kaggle.com/embed/joatom/bending-the-space-with-nonlinearity?cellId=1&amp;kernelSessionId=46691617" height="800" style="margin: 0 auto; width: 100%; max-width: 950px;" frameborder="0" scrolling="auto" title="Bending the space with nonlinearity">
</iframe>



 ]]></description>
  <category>Basics</category>
  <category>ML</category>
  <guid>https://joatom.github.io/blog/posts/2021-04-14-nonlinearity/index.html</guid>
  <pubDate>Tue, 13 Apr 2021 22:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2021-04-14-nonlinearity/nonlinearity.png" medium="image" type="image/png" height="33" width="144"/>
</item>
<item>
  <title>Deaths by age group and states in Germany from 2016 to 2021</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2021-04-06-mortality-germany/2021-04-06-mortality-germany.html</link>
  <description><![CDATA[ 




<p><a href="2021-04-06-mortality-germany_de.html"><span class="emoji" data-emoji="de">🇩🇪</span></a> <a href="2021-04-06-mortality-germany.html"><span class="emoji" data-emoji="us">🇺🇸</span></a> [<a href="https://www.kaggle.com/joatom/deaths-by-age-and-states-in-germany-2016-2021">kaggle version</a>]</p>
<div class="callout-warning callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>(Updated on 2021/11/22) First of all here are some clarifying personal notes: <strong>I’m vaccinated!</strong> The guidelines of of the <a href="https://www.rki.de/DE/Content/Infekt/EpidBull/Archiv/2021/Ausgaben/38_21.pdf?__blob=publicationFile">STIKO</a> (official German board for vaccination recommendation) have always been plausible. Therefore my eldest daughter got vaccinated, too. And our younger children will also get their vaccination as soon as a recommendation exists. So, if you look at the numbers below, keep in mind, those were the numbers from <strong>Spring 2021</strong>, before Delta hit Germany and during a time where kids had more restrictions than adults.</p>
</div>
</div>
<p>In this blog post, I want to find out how easy it is to create interactive charts in notebooks. As a framework, I will use <a href="https://altair-viz.github.io/">Altair</a>, as it can be easily integrated into my blog [<a href="https://fastpages.fast.ai/jupyter/2020/02/20/test.html">FP20</a>].</p>
<p>In order to make the contribution interesting, I evaluate the death rates from Germany over the last five years. I construct two periods - the first period before and the second one during Covid19.</p>
<p>We will analyze these questions:</p>
<ul>
<li>How do deaths per age group and month change?</li>
<li>How do deaths per state change?</li>
</ul>
<p>The first part describes the origin and processing of the data. Then, charts are built around the above questions. Finally, a technical conclusion to the framework follows.</p>
<div class="callout-important callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>The death rates are not an indicator of the danger of Covid19. They only reflect the number of people who died retrospectively.</p>
</div>
</div>
<section id="source-of-data" class="level1">
<h1>Source of data</h1>
<p>For the analysis of deaths in Germany, the current death data from the <em>Statistisches Bundesamt</em> (Federal Statistical Office) [SB21] are used. The data include the number of deaths by age group or state on a monthly basis. In this blog post, the monthly death figures for the period March 2016 to February 2021 are examined. The most recent data are currently only available until February 2021 and include some estimations, which are explained in the data source in the tab “Hinweise”. In addition to the death figures, data on the population density of the states are processed [SB20]. These figures refere to the reference date 31.12.2019.</p>
</section>
<section id="procession-of-the-data" class="level1">
<h1>Procession of the data</h1>
<section id="preprocessing" class="level2">
<h2 class="anchored" data-anchor-id="preprocessing">Preprocessing</h2>
<p>The evaluation period is limited to March 2016 until February 2021. The period in which Corona was heavily active in Germany is simplified here to March 2020 (when Covid19 triggered the first major social changes in Germany) until February 2021 (orange). The pre-Covid19 period is set to March 2016 until February 2020 (blue). Thus, the Covid19 period covers exactly one year and the pre-Covid19 period exactly four years. Thus, both periods remain comparable without serious seasonal deviations. The split of the periods is illustrated in the diagram below.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="6">
<div class="cell-output cell-output-display" data-execution_count="6">

<div id="altair-viz-f9b4282a60504edbbf6ef797d8c5654c"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-f9b4282a60504edbbf6ef797d8c5654c") {
      outputDiv = document.getElementById("altair-viz-f9b4282a60504edbbf6ef797d8c5654c");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "data": {"name": "data-b65ac0e1c35ef56677222fd11d77c2b6"}, "mark": "rect", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "nominal", "field": "month", "sort": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], "title": ""}, "y": {"type": "nominal", "field": "year", "title": ""}}, "height": 200, "title": "Split of the Periods", "width": 600, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-b65ac0e1c35ef56677222fd11d77c2b6": [{"year": 2021, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 289.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 322.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 515.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 881.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1938.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3428.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4926.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 6701.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 8240.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 12121.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 21962.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 20982.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 16257.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 6712.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 281.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 330.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 260.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 381.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 491.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 869.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1955.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3193.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4453.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5846.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6666.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 11051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16673.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15667.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 12328.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 4975.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 485.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 952.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1981.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3132.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4424.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6542.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 11790.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16152.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15582.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 11986.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 5051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 314.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 386.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 243.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 304.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 496.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 1051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1991.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3204.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4392.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5685.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6671.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 12442.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 15346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15761.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 11827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 4860.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 397.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 300.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 486.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 1088.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 2070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4510.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5867.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 7605.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 14182.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16835.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 18767.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 14348.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 5663.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2021, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 211.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 265.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 180.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 287.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 457.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 759.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1692.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 2888.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4243.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5614.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6721.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 9697.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 16451.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 15535.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11653.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4950.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 299.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 334.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 194.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 805.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3007.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4170.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5518.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6223.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 10475.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15793.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 14531.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11493.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4721.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 326.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 327.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 449.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 851.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1852.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 2949.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4060.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5617.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6391.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 11199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15632.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 14812.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11402.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4620.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 288.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 194.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 485.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 946.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1927.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3035.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4190.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5608.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6878.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 12480.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15584.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 15943.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 12411.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 5214.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 280.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 207.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 967.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1903.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3000.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4101.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5416.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 7076.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 13341.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 16026.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 17997.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 13824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 5391.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 323.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 319.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 242.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 341.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 515.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 864.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1892.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3176.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4458.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 6114.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6906.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 11274.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 17126.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 16091.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 12621.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 5242.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 320.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 332.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 228.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 335.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 498.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 892.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3129.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4499.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12089.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 16724.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15852.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 12319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 5031.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 377.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 248.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 536.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 2226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3748.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 5062.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 6927.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 8192.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 15298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 19658.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 20552.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 15861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 6647.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 355.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 342.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 241.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 310.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 434.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1093.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1965.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3054.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 3992.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6622.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12543.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 14616.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15722.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 11496.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 4679.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 359.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 236.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 328.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 552.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1157.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 2146.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3207.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5433.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 7440.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 14230.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15697.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 11333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 3954.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 298.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 293.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 232.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 353.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 518.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 868.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1727.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 3047.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 4213.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5636.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6596.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 10832.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 16771.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 15572.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 11989.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4923.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 305.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 238.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 308.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 416.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1770.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2956.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3965.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6140.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 10862.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 14947.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 13883.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4433.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 357.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 457.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 915.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 3092.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 4140.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6292.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11587.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 14500.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 14541.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10929.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4525.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 296.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 252.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 292.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 413.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 1001.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1807.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2888.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3874.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 4809.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6195.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11133.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 12809.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 13474.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 9877.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 3751.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 293.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 214.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 479.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 1076.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1958.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2938.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 4898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11600.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 12632.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 14250.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10022.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 3621.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "May", "deaths": 282.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "May", "deaths": 312.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "May", "deaths": 206.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "May", "deaths": 351.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "May", "deaths": 503.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "May", "deaths": 817.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1744.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "May", "deaths": 3013.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4156.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5379.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6122.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "May", "deaths": 9521.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "May", "deaths": 14696.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13965.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "May", "deaths": 10405.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "May", "deaths": 4346.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "May", "deaths": 272.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "May", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "May", "deaths": 220.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "May", "deaths": 289.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "May", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "May", "deaths": 823.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2963.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4014.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5426.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6010.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "May", "deaths": 10606.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "May", "deaths": 14562.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13236.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "May", "deaths": 10492.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "May", "deaths": 4271.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "May", "deaths": 263.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "May", "deaths": 355.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "May", "deaths": 229.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "May", "deaths": 343.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "May", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "May", "deaths": 917.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2966.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4006.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "May", "deaths": 5924.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "May", "deaths": 10758.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "May", "deaths": 13819.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13562.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "May", "deaths": 4044.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "May", "deaths": 298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "May", "deaths": 358.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "May", "deaths": 242.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "May", "deaths": 360.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "May", "deaths": 473.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "May", "deaths": 999.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "May", "deaths": 2003.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2919.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4004.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5253.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6205.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "May", "deaths": 11402.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "May", "deaths": 13340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13911.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9998.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "May", "deaths": 3918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "May", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "May", "deaths": 390.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "May", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "May", "deaths": 364.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "May", "deaths": 491.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "May", "deaths": 1039.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1999.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2871.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "May", "deaths": 3861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5074.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6434.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "May", "deaths": 11181.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "May", "deaths": 12915.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13977.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9818.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "May", "deaths": 3588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 282.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 332.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 314.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 482.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 814.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1650.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2914.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3918.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 5159.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5894.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 8970.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 13911.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 13126.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9969.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 4217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 335.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 224.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 336.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 476.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 857.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1758.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2908.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3936.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 5122.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5746.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 14108.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 13055.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9980.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 4128.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 322.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 345.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 418.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 873.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1845.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2748.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3863.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4842.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5555.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10125.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 12784.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12196.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9168.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3717.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 354.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 245.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 443.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 970.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4851.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5623.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10483.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 12278.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12515.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9288.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 350.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 299.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 440.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1909.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2801.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3791.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4671.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 6097.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 11729.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 8960.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 289.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 339.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 256.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 346.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 468.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 796.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1732.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2949.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4102.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5272.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 5887.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 9402.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 14293.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13193.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10268.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 283.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 218.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 443.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 814.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1762.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2990.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4072.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5527.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6129.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10452.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 14949.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13615.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10611.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4374.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 240.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 330.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 495.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 940.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1817.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2956.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4053.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5344.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6075.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 13747.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13661.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10347.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4151.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 304.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 332.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 227.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 278.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 444.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 942.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 3860.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5125.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 5939.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10832.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 12590.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13027.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 9199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 3615.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 399.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 464.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 1112.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1897.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2904.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 3866.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 4920.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10957.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 12264.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13338.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 9401.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 3417.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 362.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 210.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 321.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 500.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 804.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1654.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2985.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 4135.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5526.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6295.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 9607.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 15479.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 14478.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 11324.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4735.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 283.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 363.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 215.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 343.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 448.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2821.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3904.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 5839.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10041.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 14177.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 13033.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 10048.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4071.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 371.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 231.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 462.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 930.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1909.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 3030.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 4052.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5546.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6099.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 11237.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 14500.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 14340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 10717.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4314.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 344.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 316.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 464.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 942.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1821.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2787.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3974.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5127.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 5894.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10635.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 12585.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 12997.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 9263.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 3816.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 242.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 301.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1885.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2848.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 4939.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6122.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10844.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 12238.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 13145.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 9243.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 3465.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 308.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 230.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 327.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 471.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 773.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1634.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2832.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3944.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5221.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 6088.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9237.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 14542.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 13666.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 10114.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 4402.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 285.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 219.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 432.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 781.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1743.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2769.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3756.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5124.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5593.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9713.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 13702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12550.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3960.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 280.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 418.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1759.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2742.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3756.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5013.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5582.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9880.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 13066.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12394.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9384.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3788.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 351.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 409.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 968.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1777.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2704.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3561.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 4861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5771.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 10490.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 12351.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12708.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9063.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 313.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 380.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 201.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 296.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 478.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 1026.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1772.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2830.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3569.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 4778.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5863.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 10483.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 11770.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12929.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9004.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3345.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 266.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 323.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 207.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 333.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 475.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 774.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1700.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 3065.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 4237.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5594.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6550.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 9650.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 15709.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 14729.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 11371.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4662.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 279.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 213.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 334.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1698.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2900.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 4075.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5361.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6116.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 10518.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 14922.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13783.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10727.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4469.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 312.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 336.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 302.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 435.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 886.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2957.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3972.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5201.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 5987.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 10584.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13804.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13189.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 9945.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 320.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 339.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 421.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 930.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1985.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3908.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5177.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6118.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 11074.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13526.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13738.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10229.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4059.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 384.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 249.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 477.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 1046.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1972.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 3003.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3889.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5187.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 11566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13147.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 14189.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10221.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 3802.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 254.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 312.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 207.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 336.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 471.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 769.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1714.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 3061.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 4267.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5673.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6880.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10394.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 17313.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 16704.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 12489.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 5187.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 276.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 327.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 326.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 814.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1695.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2969.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 4065.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6115.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10513.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 15388.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 14115.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 11234.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4575.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 293.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 208.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 341.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 424.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 837.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1775.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3912.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5241.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 5811.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10711.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 14291.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 13392.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10106.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4136.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 246.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 325.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 211.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 419.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 934.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1932.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2817.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3953.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5281.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 11032.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 13492.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 13777.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10124.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4111.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 322.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 206.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 307.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 501.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1879.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2891.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3903.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5017.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6305.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 11709.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 13534.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 14629.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10446.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4015.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 279.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 304.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 219.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 409.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 544.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 837.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1812.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3422.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4906.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 6603.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 8508.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12745.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 22399.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 21904.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 16817.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 6920.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 308.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 318.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 220.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 358.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 428.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 835.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1752.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3066.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4196.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5755.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 11065.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 16176.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 15410.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11987.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4889.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 300.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 458.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 846.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1808.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3013.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4186.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5480.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6371.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 11430.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 15589.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 14537.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11429.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 307.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 353.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 203.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1945.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 2961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4186.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5493.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6524.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12085.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 14894.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 15311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11146.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4510.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 348.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 497.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 1084.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 2008.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3028.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4151.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5520.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12805.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 14704.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 16123.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11830.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4451.0, "period": "2016/Mar - 2020/Feb"}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
</section>
<section id="aggregation-of-data" class="level2">
<h2 class="anchored" data-anchor-id="aggregation-of-data">Aggregation of data</h2>
<p>In the calculations, the values are averaged over a period of time. Depending on the evaluation, this happens over the whole period or per month. The first and third quartile of the aggregated data may also be shown as shading in the diagrams. In some charts, the calculated points are interpolated to increase readability.</p>
<div class="callout-tip callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>For some of the charts there are control elements in the upper right corner, such as drop-down boxes. The mouse wheel can be used to zoom and a chart can be reset by double-clicking.</p>
</div>
</div>
</section>
</section>
<section id="deaths-by-age" class="level1">
<h1>Deaths by age</h1>
<p>The diagram below shows the average number of <em>deaths per month</em> per <em>age group</em>. One age group covers five years. The point <em>age 55</em> includes, for example, all deaths between 50 and 55. Deaths of those over 100 years of age are shown in point <em>100</em>.</p>
<p>The values are aggregated over the pre-Covid19 period (blue) and the Covid19 period (orange). In the diagram, the <em>months</em> can be selected via drop-down box.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="7">
<div class="cell-output cell-output-display">

<style>
form.vega-bindings {
  position: absolute;
  right: 50px;
  top: 0px;
}
</style>
</div>
<div class="cell-output cell-output-display" data-execution_count="7">

<div id="altair-viz-852dbfaa45d94cfcbf9991a19346eaa6"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-852dbfaa45d94cfcbf9991a19346eaa6") {
      outputDiv = document.getElementById("altair-viz-852dbfaa45d94cfcbf9991a19346eaa6");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "layer": [{"layer": [{"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}, {"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}, "selection": {"month": {"type": "single", "fields": ["month"], "bind": {"input": "select", "options": [null, "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb"], "labels": ["All", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb"], "name": "Month: "}}, "selector002": {"type": "interval", "bind": "scales", "encodings": ["x", "y"]}}}]}, {"mark": "point", "encoding": {"opacity": {"value": 0}, "x": {"type": "quantitative", "field": "age_to"}}, "selection": {"selector001": {"type": "single", "nearest": true, "on": "mouseover", "fields": ["age_to"], "empty": "none"}}}, {"mark": "point", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "opacity": {"condition": {"value": 1, "selection": "selector001"}, "value": 0}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "rule", "color": "gray"}, "encoding": {"x": {"type": "quantitative", "field": "age_to"}}, "transform": [{"filter": {"selection": "selector001"}}]}, {"mark": {"type": "text", "align": "left", "dx": 5, "dy": -5}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "text": {"condition": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "format": ".0f", "selection": "selector001"}, "value": " "}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}], "data": {"name": "data-b65ac0e1c35ef56677222fd11d77c2b6"}, "height": 400, "title": "Deaths by Age (monthly average)", "transform": [{"filter": {"selection": "month"}}], "width": 800, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-b65ac0e1c35ef56677222fd11d77c2b6": [{"year": 2021, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 289.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 322.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 515.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 881.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1938.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3428.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4926.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 6701.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 8240.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 12121.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 21962.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 20982.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 16257.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 6712.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 281.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 330.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 260.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 381.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 491.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 869.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1955.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3193.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4453.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5846.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6666.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 11051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16673.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15667.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 12328.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 4975.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 485.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 952.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1981.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3132.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4424.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6542.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 11790.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16152.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15582.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 11986.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 5051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 314.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 386.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 243.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 304.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 496.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 1051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1991.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3204.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4392.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5685.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6671.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 12442.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 15346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15761.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 11827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 4860.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 397.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 300.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 486.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 1088.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 2070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4510.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5867.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 7605.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 14182.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16835.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 18767.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 14348.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 5663.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2021, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 211.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 265.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 180.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 287.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 457.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 759.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1692.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 2888.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4243.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5614.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6721.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 9697.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 16451.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 15535.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11653.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4950.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 299.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 334.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 194.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 805.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3007.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4170.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5518.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6223.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 10475.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15793.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 14531.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11493.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4721.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 326.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 327.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 449.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 851.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1852.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 2949.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4060.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5617.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6391.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 11199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15632.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 14812.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11402.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4620.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 288.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 194.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 485.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 946.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1927.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3035.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4190.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5608.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6878.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 12480.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15584.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 15943.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 12411.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 5214.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 280.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 207.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 967.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1903.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3000.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4101.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5416.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 7076.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 13341.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 16026.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 17997.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 13824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 5391.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 323.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 319.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 242.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 341.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 515.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 864.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1892.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3176.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4458.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 6114.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6906.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 11274.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 17126.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 16091.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 12621.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 5242.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 320.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 332.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 228.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 335.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 498.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 892.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3129.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4499.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12089.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 16724.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15852.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 12319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 5031.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 377.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 248.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 536.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 2226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3748.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 5062.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 6927.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 8192.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 15298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 19658.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 20552.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 15861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 6647.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 355.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 342.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 241.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 310.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 434.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1093.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1965.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3054.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 3992.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6622.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12543.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 14616.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15722.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 11496.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 4679.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 359.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 236.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 328.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 552.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1157.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 2146.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3207.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5433.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 7440.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 14230.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15697.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 11333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 3954.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 298.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 293.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 232.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 353.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 518.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 868.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1727.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 3047.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 4213.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5636.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6596.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 10832.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 16771.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 15572.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 11989.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4923.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 305.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 238.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 308.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 416.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1770.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2956.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3965.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6140.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 10862.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 14947.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 13883.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4433.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 357.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 457.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 915.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 3092.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 4140.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6292.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11587.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 14500.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 14541.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10929.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4525.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 296.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 252.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 292.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 413.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 1001.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1807.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2888.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3874.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 4809.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6195.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11133.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 12809.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 13474.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 9877.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 3751.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 293.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 214.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 479.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 1076.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1958.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2938.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 4898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11600.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 12632.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 14250.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10022.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 3621.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "May", "deaths": 282.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "May", "deaths": 312.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "May", "deaths": 206.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "May", "deaths": 351.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "May", "deaths": 503.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "May", "deaths": 817.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1744.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "May", "deaths": 3013.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4156.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5379.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6122.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "May", "deaths": 9521.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "May", "deaths": 14696.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13965.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "May", "deaths": 10405.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "May", "deaths": 4346.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "May", "deaths": 272.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "May", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "May", "deaths": 220.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "May", "deaths": 289.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "May", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "May", "deaths": 823.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2963.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4014.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5426.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6010.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "May", "deaths": 10606.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "May", "deaths": 14562.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13236.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "May", "deaths": 10492.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "May", "deaths": 4271.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "May", "deaths": 263.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "May", "deaths": 355.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "May", "deaths": 229.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "May", "deaths": 343.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "May", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "May", "deaths": 917.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2966.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4006.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "May", "deaths": 5924.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "May", "deaths": 10758.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "May", "deaths": 13819.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13562.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "May", "deaths": 4044.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "May", "deaths": 298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "May", "deaths": 358.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "May", "deaths": 242.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "May", "deaths": 360.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "May", "deaths": 473.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "May", "deaths": 999.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "May", "deaths": 2003.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2919.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4004.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5253.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6205.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "May", "deaths": 11402.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "May", "deaths": 13340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13911.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9998.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "May", "deaths": 3918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "May", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "May", "deaths": 390.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "May", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "May", "deaths": 364.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "May", "deaths": 491.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "May", "deaths": 1039.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1999.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2871.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "May", "deaths": 3861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5074.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6434.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "May", "deaths": 11181.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "May", "deaths": 12915.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13977.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9818.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "May", "deaths": 3588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 282.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 332.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 314.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 482.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 814.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1650.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2914.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3918.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 5159.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5894.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 8970.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 13911.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 13126.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9969.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 4217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 335.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 224.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 336.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 476.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 857.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1758.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2908.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3936.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 5122.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5746.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 14108.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 13055.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9980.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 4128.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 322.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 345.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 418.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 873.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1845.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2748.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3863.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4842.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5555.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10125.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 12784.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12196.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9168.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3717.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 354.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 245.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 443.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 970.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4851.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5623.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10483.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 12278.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12515.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9288.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 350.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 299.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 440.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1909.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2801.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3791.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4671.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 6097.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 11729.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 8960.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 289.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 339.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 256.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 346.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 468.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 796.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1732.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2949.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4102.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5272.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 5887.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 9402.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 14293.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13193.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10268.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 283.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 218.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 443.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 814.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1762.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2990.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4072.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5527.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6129.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10452.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 14949.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13615.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10611.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4374.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 240.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 330.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 495.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 940.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1817.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2956.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4053.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5344.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6075.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 13747.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13661.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10347.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4151.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 304.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 332.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 227.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 278.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 444.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 942.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 3860.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5125.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 5939.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10832.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 12590.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13027.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 9199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 3615.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 399.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 464.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 1112.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1897.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2904.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 3866.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 4920.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10957.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 12264.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13338.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 9401.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 3417.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 362.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 210.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 321.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 500.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 804.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1654.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2985.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 4135.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5526.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6295.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 9607.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 15479.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 14478.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 11324.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4735.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 283.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 363.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 215.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 343.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 448.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2821.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3904.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 5839.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10041.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 14177.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 13033.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 10048.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4071.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 371.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 231.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 462.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 930.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1909.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 3030.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 4052.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5546.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6099.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 11237.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 14500.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 14340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 10717.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4314.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 344.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 316.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 464.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 942.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1821.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2787.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3974.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5127.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 5894.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10635.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 12585.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 12997.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 9263.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 3816.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 242.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 301.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1885.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2848.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 4939.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6122.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10844.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 12238.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 13145.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 9243.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 3465.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 308.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 230.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 327.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 471.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 773.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1634.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2832.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3944.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5221.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 6088.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9237.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 14542.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 13666.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 10114.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 4402.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 285.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 219.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 432.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 781.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1743.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2769.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3756.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5124.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5593.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9713.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 13702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12550.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3960.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 280.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 418.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1759.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2742.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3756.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5013.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5582.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9880.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 13066.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12394.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9384.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3788.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 351.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 409.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 968.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1777.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2704.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3561.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 4861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5771.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 10490.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 12351.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12708.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9063.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 313.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 380.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 201.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 296.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 478.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 1026.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1772.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2830.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3569.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 4778.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5863.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 10483.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 11770.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12929.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9004.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3345.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 266.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 323.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 207.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 333.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 475.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 774.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1700.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 3065.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 4237.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5594.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6550.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 9650.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 15709.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 14729.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 11371.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4662.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 279.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 213.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 334.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1698.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2900.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 4075.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5361.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6116.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 10518.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 14922.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13783.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10727.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4469.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 312.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 336.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 302.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 435.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 886.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2957.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3972.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5201.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 5987.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 10584.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13804.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13189.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 9945.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 320.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 339.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 421.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 930.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1985.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3908.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5177.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6118.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 11074.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13526.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13738.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10229.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4059.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 384.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 249.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 477.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 1046.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1972.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 3003.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3889.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5187.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 11566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13147.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 14189.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10221.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 3802.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 254.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 312.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 207.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 336.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 471.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 769.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1714.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 3061.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 4267.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5673.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6880.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10394.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 17313.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 16704.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 12489.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 5187.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 276.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 327.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 326.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 814.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1695.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2969.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 4065.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6115.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10513.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 15388.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 14115.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 11234.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4575.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 293.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 208.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 341.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 424.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 837.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1775.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3912.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5241.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 5811.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10711.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 14291.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 13392.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10106.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4136.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 246.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 325.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 211.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 419.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 934.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1932.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2817.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3953.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5281.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 11032.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 13492.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 13777.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10124.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4111.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 322.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 206.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 307.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 501.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1879.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2891.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3903.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5017.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6305.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 11709.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 13534.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 14629.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10446.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4015.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 279.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 304.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 219.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 409.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 544.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 837.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1812.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3422.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4906.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 6603.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 8508.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12745.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 22399.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 21904.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 16817.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 6920.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 308.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 318.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 220.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 358.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 428.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 835.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1752.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3066.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4196.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5755.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 11065.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 16176.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 15410.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11987.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4889.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 300.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 458.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 846.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1808.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3013.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4186.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5480.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6371.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 11430.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 15589.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 14537.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11429.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 307.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 353.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 203.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1945.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 2961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4186.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5493.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6524.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12085.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 14894.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 15311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11146.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4510.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 348.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 497.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 1084.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 2008.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3028.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4151.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5520.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12805.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 14704.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 16123.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11830.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4451.0, "period": "2016/Mar - 2020/Feb"}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<p>Below are the average deaths by age for each month. The list starts with the month of March.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="8">
<div class="cell-output cell-output-display" data-execution_count="8">

<div id="altair-viz-e6a741a630d64cc3aca5ce97da1519c9"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-e6a741a630d64cc3aca5ce97da1519c9") {
      outputDiv = document.getElementById("altair-viz-e6a741a630d64cc3aca5ce97da1519c9");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "vconcat": [{"hconcat": [{"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Mar", "transform": [{"filter": "(datum.month === 'Mar')"}], "width": 210}, {"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Apr", "transform": [{"filter": "(datum.month === 'Apr')"}], "width": 210}, {"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "May", "transform": [{"filter": "(datum.month === 'May')"}], "width": 210}]}, {"hconcat": [{"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Jun", "transform": [{"filter": "(datum.month === 'Jun')"}], "width": 210}, {"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Jul", "transform": [{"filter": "(datum.month === 'Jul')"}], "width": 210}, {"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Aug", "transform": [{"filter": "(datum.month === 'Aug')"}], "width": 210}]}, {"hconcat": [{"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Sep", "transform": [{"filter": "(datum.month === 'Sep')"}], "width": 210}, {"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Oct", "transform": [{"filter": "(datum.month === 'Oct')"}], "width": 210}, {"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Nov", "transform": [{"filter": "(datum.month === 'Nov')"}], "width": 210}]}, {"hconcat": [{"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Dec", "transform": [{"filter": "(datum.month === 'Dec')"}], "width": 210}, {"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Jan", "transform": [{"filter": "(datum.month === 'Jan')"}], "width": 210}, {"layer": [{"layer": [{"mark": "line", "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "aggregate": "mean", "field": "deaths", "scale": {"domain": [0, 23000]}}}}, {"mark": {"type": "errorband", "extent": "iqr"}, "encoding": {"color": {"type": "nominal", "field": "period", "legend": {"title": "Period"}}, "x": {"type": "quantitative", "field": "age_to", "title": "Age"}, "y": {"type": "quantitative", "field": "deaths", "scale": {"domain": [0, 23000]}, "title": "Deaths"}}}]}], "height": 105, "title": "Feb", "transform": [{"filter": "(datum.month === 'Feb')"}], "width": 210}]}], "data": {"name": "data-b65ac0e1c35ef56677222fd11d77c2b6"}, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-b65ac0e1c35ef56677222fd11d77c2b6": [{"year": 2021, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 289.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 322.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 515.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 881.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1938.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3428.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4926.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 6701.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 8240.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 12121.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 21962.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 20982.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 16257.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 6712.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 281.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 330.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 260.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 381.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 491.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 869.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1955.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3193.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4453.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5846.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6666.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 11051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16673.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15667.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 12328.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 4975.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 485.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 952.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1981.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3132.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4424.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6542.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 11790.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16152.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15582.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 11986.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 5051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 314.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 386.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 243.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 304.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 496.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 1051.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 1991.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3204.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4392.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5685.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 6671.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 12442.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 15346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 15761.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 11827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 4860.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jan", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jan", "deaths": 397.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jan", "deaths": 232.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jan", "deaths": 300.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jan", "deaths": 486.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jan", "deaths": 1088.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jan", "deaths": 2070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jan", "deaths": 3346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jan", "deaths": 4510.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jan", "deaths": 5867.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jan", "deaths": 7605.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jan", "deaths": 14182.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jan", "deaths": 16835.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jan", "deaths": 18767.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jan", "deaths": 14348.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jan", "deaths": 5663.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2021, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 211.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 265.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 180.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 287.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 457.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 759.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1692.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 2888.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4243.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5614.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6721.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 9697.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 16451.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 15535.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11653.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2021, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4950.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 299.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 334.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 194.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 805.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3007.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4170.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5518.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6223.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 10475.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15793.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 14531.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11493.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4721.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 326.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 327.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 449.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 851.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1852.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 2949.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4060.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5617.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6391.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 11199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15632.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 14812.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 11402.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 4620.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 288.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 194.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 485.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 946.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1927.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3035.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4190.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5608.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 6878.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 12480.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 15584.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 15943.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 12411.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 5214.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Feb", "deaths": 280.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Feb", "deaths": 346.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Feb", "deaths": 207.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Feb", "deaths": 311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Feb", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Feb", "deaths": 967.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Feb", "deaths": 1903.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Feb", "deaths": 3000.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Feb", "deaths": 4101.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Feb", "deaths": 5416.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Feb", "deaths": 7076.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Feb", "deaths": 13341.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Feb", "deaths": 16026.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Feb", "deaths": 17997.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Feb", "deaths": 13824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Feb", "deaths": 5391.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 323.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 319.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 242.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 341.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 515.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 864.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1892.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3176.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4458.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 6114.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6906.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 11274.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 17126.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 16091.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 12621.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 5242.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 320.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 332.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 228.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 335.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 498.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 892.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3129.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4499.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12089.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 16724.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15852.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 12319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 5031.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 377.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 248.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 536.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 2226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3748.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 5062.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 6927.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 8192.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 15298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 19658.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 20552.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 15861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 6647.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 355.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 342.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 241.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 310.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 434.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1093.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 1965.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3054.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 3992.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 6622.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12543.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 14616.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15722.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 11496.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 4679.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Mar", "deaths": 373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Mar", "deaths": 359.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Mar", "deaths": 236.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Mar", "deaths": 328.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Mar", "deaths": 552.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Mar", "deaths": 1157.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Mar", "deaths": 2146.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Mar", "deaths": 3207.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Mar", "deaths": 4373.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Mar", "deaths": 5433.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Mar", "deaths": 7440.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Mar", "deaths": 12850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Mar", "deaths": 14230.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Mar", "deaths": 15697.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Mar", "deaths": 11333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Mar", "deaths": 3954.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 298.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 293.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 232.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 353.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 518.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 868.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1727.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 3047.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 4213.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5636.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6596.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 10832.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 16771.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 15572.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 11989.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4923.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 305.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 238.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 308.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 416.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1770.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2956.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3965.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6140.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 10862.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 14947.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 13883.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4433.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 357.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 457.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 915.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 3092.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 4140.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 5470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6292.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11587.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 14500.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 14541.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10929.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 4525.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 296.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 252.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 292.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 413.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 1001.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1807.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2888.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3874.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 4809.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6195.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11133.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 12809.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 13474.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 9877.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 3751.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Apr", "deaths": 293.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Apr", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Apr", "deaths": 214.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Apr", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Apr", "deaths": 479.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Apr", "deaths": 1076.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Apr", "deaths": 1958.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Apr", "deaths": 2938.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Apr", "deaths": 3961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Apr", "deaths": 4898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Apr", "deaths": 6740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Apr", "deaths": 11600.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Apr", "deaths": 12632.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Apr", "deaths": 14250.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Apr", "deaths": 10022.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Apr", "deaths": 3621.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "May", "deaths": 282.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "May", "deaths": 312.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "May", "deaths": 206.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "May", "deaths": 351.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "May", "deaths": 503.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "May", "deaths": 817.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1744.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "May", "deaths": 3013.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4156.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5379.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6122.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "May", "deaths": 9521.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "May", "deaths": 14696.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13965.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "May", "deaths": 10405.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "May", "deaths": 4346.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "May", "deaths": 272.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "May", "deaths": 337.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "May", "deaths": 220.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "May", "deaths": 289.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "May", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "May", "deaths": 823.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1703.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2963.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4014.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5426.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6010.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "May", "deaths": 10606.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "May", "deaths": 14562.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13236.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "May", "deaths": 10492.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "May", "deaths": 4271.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "May", "deaths": 263.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "May", "deaths": 355.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "May", "deaths": 229.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "May", "deaths": 343.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "May", "deaths": 463.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "May", "deaths": 917.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2966.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4006.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "May", "deaths": 5924.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "May", "deaths": 10758.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "May", "deaths": 13819.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13562.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "May", "deaths": 4044.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "May", "deaths": 298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "May", "deaths": 358.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "May", "deaths": 242.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "May", "deaths": 360.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "May", "deaths": 473.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "May", "deaths": 999.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "May", "deaths": 2003.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2919.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "May", "deaths": 4004.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5253.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6205.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "May", "deaths": 11402.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "May", "deaths": 13340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13911.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9998.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "May", "deaths": 3918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "May", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "May", "deaths": 390.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "May", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "May", "deaths": 364.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "May", "deaths": 491.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "May", "deaths": 1039.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "May", "deaths": 1999.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "May", "deaths": 2871.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "May", "deaths": 3861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "May", "deaths": 5074.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "May", "deaths": 6434.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "May", "deaths": 11181.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "May", "deaths": 12915.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "May", "deaths": 13977.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "May", "deaths": 9818.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "May", "deaths": 3588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 282.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 332.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 314.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 482.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 814.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1650.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2914.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3918.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 5159.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5894.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 8970.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 13911.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 13126.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9969.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 4217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 335.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 224.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 336.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 476.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 857.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1758.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2908.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3936.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 5122.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5746.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 14108.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 13055.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9980.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 4128.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 322.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 345.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 418.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 873.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1845.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2748.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3863.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4842.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5555.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10125.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 12784.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12196.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9168.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3717.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 354.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 245.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 443.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 970.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1827.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4851.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 5623.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10483.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 12278.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12515.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 9288.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Jun", "deaths": 298.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Jun", "deaths": 350.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Jun", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Jun", "deaths": 299.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Jun", "deaths": 440.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Jun", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Jun", "deaths": 1909.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Jun", "deaths": 2801.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Jun", "deaths": 3791.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Jun", "deaths": 4671.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Jun", "deaths": 6097.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Jun", "deaths": 10740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Jun", "deaths": 11729.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Jun", "deaths": 12588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Jun", "deaths": 8960.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Jun", "deaths": 3287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 289.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 339.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 256.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 346.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 468.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 796.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1732.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2949.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4102.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5272.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 5887.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 9402.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 14293.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13193.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10268.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4217.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 283.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 218.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 443.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 814.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1762.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2990.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4072.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5527.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6129.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10452.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 14949.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13615.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10611.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4374.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 240.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 330.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 495.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 940.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1817.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2956.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 4053.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5344.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6075.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 13747.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13661.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 10347.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 4151.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 304.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 332.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 227.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 278.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 444.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 942.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 3860.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 5125.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 5939.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10832.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 12590.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13027.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 9199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 3615.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Jul", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Jul", "deaths": 399.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Jul", "deaths": 226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Jul", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Jul", "deaths": 464.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Jul", "deaths": 1112.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Jul", "deaths": 1897.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Jul", "deaths": 2904.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Jul", "deaths": 3866.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Jul", "deaths": 4920.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Jul", "deaths": 6319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Jul", "deaths": 10957.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Jul", "deaths": 12264.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Jul", "deaths": 13338.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Jul", "deaths": 9401.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Jul", "deaths": 3417.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 362.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 210.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 321.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 500.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 804.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1654.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2985.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 4135.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5526.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6295.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 9607.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 15479.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 14478.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 11324.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4735.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 283.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 363.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 215.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 343.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 448.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 824.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1740.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2821.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3904.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 5839.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10041.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 14177.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 13033.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 10048.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4071.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 371.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 231.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 462.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 930.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1909.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 3030.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 4052.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5546.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6099.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 11237.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 14500.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 14340.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 10717.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 4314.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 344.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 226.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 316.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 464.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 942.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1821.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2787.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3974.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 5127.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 5894.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10635.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 12585.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 12997.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 9263.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 3816.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Aug", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Aug", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Aug", "deaths": 242.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Aug", "deaths": 301.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Aug", "deaths": 470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Aug", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Aug", "deaths": 1885.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Aug", "deaths": 2848.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Aug", "deaths": 3861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Aug", "deaths": 4939.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Aug", "deaths": 6122.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Aug", "deaths": 10844.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Aug", "deaths": 12238.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Aug", "deaths": 13145.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Aug", "deaths": 9243.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Aug", "deaths": 3465.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 286.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 308.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 230.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 327.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 471.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 773.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1634.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2832.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3944.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5221.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 6088.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9237.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 14542.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 13666.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 10114.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 4402.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 285.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 219.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 432.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 781.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1743.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2769.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3756.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5124.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5593.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9713.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 13702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12550.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9768.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3960.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 199.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 280.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 418.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 849.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1759.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2742.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3756.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 5013.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5582.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 9880.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 13066.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12394.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9384.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3788.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 351.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 303.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 409.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 968.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1777.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2704.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3561.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 4861.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5771.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 10490.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 12351.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12708.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9063.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3588.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Sep", "deaths": 313.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Sep", "deaths": 380.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Sep", "deaths": 201.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Sep", "deaths": 296.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Sep", "deaths": 478.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Sep", "deaths": 1026.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Sep", "deaths": 1772.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Sep", "deaths": 2830.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Sep", "deaths": 3569.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Sep", "deaths": 4778.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Sep", "deaths": 5863.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Sep", "deaths": 10483.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Sep", "deaths": 11770.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Sep", "deaths": 12929.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Sep", "deaths": 9004.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Sep", "deaths": 3345.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 266.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 323.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 207.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 333.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 475.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 774.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1700.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 3065.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 4237.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5594.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6550.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 9650.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 15709.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 14729.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 11371.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4662.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 279.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 319.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 213.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 334.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 847.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1698.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2900.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 4075.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5361.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6116.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 10518.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 14922.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13783.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10727.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4469.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 312.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 336.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 302.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 435.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 886.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1850.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2957.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3972.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5201.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 5987.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 10584.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13804.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13189.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 9945.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4070.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 297.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 320.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 339.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 421.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 930.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1985.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 2898.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3908.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5177.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6118.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 11074.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13526.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 13738.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10229.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 4059.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Oct", "deaths": 306.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Oct", "deaths": 384.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Oct", "deaths": 249.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Oct", "deaths": 294.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Oct", "deaths": 477.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Oct", "deaths": 1046.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Oct", "deaths": 1972.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Oct", "deaths": 3003.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Oct", "deaths": 3889.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Oct", "deaths": 5187.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Oct", "deaths": 6269.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Oct", "deaths": 11566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Oct", "deaths": 13147.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Oct", "deaths": 14189.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Oct", "deaths": 10221.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Oct", "deaths": 3802.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 254.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 312.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 207.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 336.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 471.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 769.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1714.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 3061.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 4267.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5673.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6880.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10394.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 17313.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 16704.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 12489.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 5187.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 276.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 327.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 209.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 326.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 470.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 814.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1695.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2969.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 4065.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5287.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6115.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10513.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 15388.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 14115.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 11234.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4575.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 293.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 323.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 208.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 341.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 424.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 837.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1775.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3912.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5241.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 5811.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 10711.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 14291.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 13392.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10106.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4136.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 246.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 325.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 211.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 317.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 419.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 934.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1932.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2817.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3953.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5281.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 11032.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 13492.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 13777.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10124.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4111.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Nov", "deaths": 322.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Nov", "deaths": 370.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Nov", "deaths": 206.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Nov", "deaths": 307.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Nov", "deaths": 501.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Nov", "deaths": 1016.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Nov", "deaths": 1879.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Nov", "deaths": 2891.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Nov", "deaths": 3903.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Nov", "deaths": 5017.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Nov", "deaths": 6305.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Nov", "deaths": 11709.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Nov", "deaths": 13534.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Nov", "deaths": 14629.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Nov", "deaths": 10446.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Nov", "deaths": 4015.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2020, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 279.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 304.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 219.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 409.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 544.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 837.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1812.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3422.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4906.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 6603.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 8508.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12745.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 22399.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 21904.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 16817.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2020, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 6920.0, "period": "2020/Mar - 2021/Feb"}, {"year": 2019, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 308.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 318.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 220.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 358.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 428.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 835.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1752.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3066.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4196.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5755.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6566.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 11065.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 16176.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 15410.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11987.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2019, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4889.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 300.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 324.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 217.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 309.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 458.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 846.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1808.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3013.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4186.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5480.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6371.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 11430.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 15589.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 14537.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11429.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2018, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4702.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 307.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 353.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 203.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 445.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 1945.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 2961.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4186.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5493.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6524.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12085.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 14894.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 15311.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11146.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2017, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4510.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "0-15", "age_to": 15, "month": "Dec", "deaths": 333.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "15-30", "age_to": 30, "month": "Dec", "deaths": 348.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "30-35", "age_to": 35, "month": "Dec", "deaths": 210.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "35-40", "age_to": 40, "month": "Dec", "deaths": 329.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "40-45", "age_to": 45, "month": "Dec", "deaths": 497.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "45-50", "age_to": 50, "month": "Dec", "deaths": 1084.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "50-55", "age_to": 55, "month": "Dec", "deaths": 2008.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "55-60", "age_to": 60, "month": "Dec", "deaths": 3028.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "60-65", "age_to": 65, "month": "Dec", "deaths": 4151.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "65-70", "age_to": 70, "month": "Dec", "deaths": 5520.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "70-75", "age_to": 75, "month": "Dec", "deaths": 6918.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "75-80", "age_to": 80, "month": "Dec", "deaths": 12805.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "80-85", "age_to": 85, "month": "Dec", "deaths": 14704.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "85-90", "age_to": 90, "month": "Dec", "deaths": 16123.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "90-95", "age_to": 95, "month": "Dec", "deaths": 11830.0, "period": "2016/Mar - 2020/Feb"}, {"year": 2016, "age": "95+", "age_to": 100, "month": "Dec", "deaths": 4451.0, "period": "2016/Mar - 2020/Feb"}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<section id="observation" class="level2">
<h2 class="anchored" data-anchor-id="observation">Observation</h2>
<p>In the age groups under 55, there was no excess mortality during these periods. In the age groups from 80 years and older, mortality increased massively.</p>
</section>
</section>
<section id="deaths-by-state" class="level1">
<h1>Deaths by state</h1>
<p>In the next diagram, the age groups <em>0-65</em> and <em>65+</em> can be evaluated for the two periods grouped by <em>state</em>. By drop-down box, you can choose between the key figures <em>Deaths</em> or <em>Deaths per 100,000 inhabitants</em>.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="11">
<div class="cell-output cell-output-display" data-execution_count="11">

<div id="altair-viz-f7c37dfba40349899214aa0b2b0da785"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-f7c37dfba40349899214aa0b2b0da785") {
      outputDiv = document.getElementById("altair-viz-f7c37dfba40349899214aa0b2b0da785");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "hconcat": [{"data": {"name": "data-531d50368a2f04e646d7faebd3e635e5"}, "mark": "bar", "encoding": {"color": {"type": "nominal", "field": "color_age", "scale": null}, "order": {"type": "nominal", "field": "state_abbrv", "sort": "ascending"}, "row": {"type": "nominal", "field": "state_abbrv", "header": {"title": " "}}, "tooltip": [{"type": "nominal", "field": "state_abbrv", "title": "State"}, {"type": "nominal", "field": "age", "title": "Age group"}, {"type": "quantitative", "field": "val", "format": ".0f", "title": "Deaths (monthly average)"}], "x": {"type": "quantitative", "field": "val", "title": "Deaths (monthly average)"}, "y": {"type": "nominal", "field": "period", "title": ""}}, "height": 50, "selection": {"measure": {"type": "single", "fields": ["measure"], "bind": {"input": "select", "options": ["deaths", "deaths_per_pop"], "labels": ["Deaths", "Deaths per 100,000"], "name": "Measure: "}}}, "title": "Deaths by State (monthly average) and Age group", "transform": [{"calculate": "datum.period == \"2016/Mar - 2020/Feb\" ? (datum.age == \"0-65\" ? \"#106ba3\" : \"#48aff0\") : (datum.age == \"0-65\" ? \"#bf7326\" : \"#f57c00\")", "as": "color_age"}, {"filter": {"selection": "measure"}}], "width": 800}, {"data": {"name": "data-2c993e909bda5ef1ccd1b3d4dd4793b8"}, "mark": "rect", "encoding": {"color": {"type": "nominal", "field": "color_legend", "scale": null}, "order": {"type": "ordinal", "field": "period", "sort": "ascending"}, "y": {"type": "ordinal", "axis": {"orient": "right"}, "field": "period", "title": " "}}, "transform": [{"calculate": "datum.color", "as": "color_legend"}]}], "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-531d50368a2f04e646d7faebd3e635e5": [{"state_abbrv": "BB", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 432.6458333333333}, {"state_abbrv": "BB", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 435.3333333333333}, {"state_abbrv": "BB", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 2231.3333333333335}, {"state_abbrv": "BB", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 2598.0833333333335}, {"state_abbrv": "BE", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 485.2916666666667}, {"state_abbrv": "BE", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 512.6666666666666}, {"state_abbrv": "BE", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 2414.2291666666665}, {"state_abbrv": "BE", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 2719.9166666666665}, {"state_abbrv": "BW", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 1257.4791666666667}, {"state_abbrv": "BW", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 1252.6666666666667}, {"state_abbrv": "BW", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 7897.854166666667}, {"state_abbrv": "BW", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 8546.833333333334}, {"state_abbrv": "BY", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 1543.9791666666667}, {"state_abbrv": "BY", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 1577.8333333333333}, {"state_abbrv": "BY", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 9585.958333333334}, {"state_abbrv": "BY", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 10551.083333333334}, {"state_abbrv": "HB", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 107.41666666666667}, {"state_abbrv": "HB", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 112.25}, {"state_abbrv": "HB", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 548.5}, {"state_abbrv": "HB", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 559.4166666666666}, {"state_abbrv": "HE", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 782.5416666666666}, {"state_abbrv": "HE", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 811.5}, {"state_abbrv": "HE", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 4736.25}, {"state_abbrv": "HE", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 5191.75}, {"state_abbrv": "HH", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 225.625}, {"state_abbrv": "HH", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 233.25}, {"state_abbrv": "HH", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 1243.2708333333333}, {"state_abbrv": "HH", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 1328.25}, {"state_abbrv": "MV", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 312.8958333333333}, {"state_abbrv": "MV", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 311.6666666666667}, {"state_abbrv": "MV", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 1452.2708333333333}, {"state_abbrv": "MV", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 1567.0833333333333}, {"state_abbrv": "NI", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 1166.4166666666667}, {"state_abbrv": "NI", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 1159.5833333333333}, {"state_abbrv": "NI", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 6683.8125}, {"state_abbrv": "NI", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 7006.75}, {"state_abbrv": "NW", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 2596.1041666666665}, {"state_abbrv": "NW", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 2600.9166666666665}, {"state_abbrv": "NW", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 14615.75}, {"state_abbrv": "NW", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 15513.166666666666}, {"state_abbrv": "RP", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 570.5}, {"state_abbrv": "RP", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 574.4166666666666}, {"state_abbrv": "RP", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 3377.0833333333335}, {"state_abbrv": "RP", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 3582.5}, {"state_abbrv": "SH", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 423.5416666666667}, {"state_abbrv": "SH", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 417.1666666666667}, {"state_abbrv": "SH", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 2479.125}, {"state_abbrv": "SH", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 2553.1666666666665}, {"state_abbrv": "SL", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 169.58333333333334}, {"state_abbrv": "SL", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 157.75}, {"state_abbrv": "SL", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 950.875}, {"state_abbrv": "SL", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 1014.0833333333334}, {"state_abbrv": "SN", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 616.8333333333334}, {"state_abbrv": "SN", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 620.75}, {"state_abbrv": "SN", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 3960.1458333333335}, {"state_abbrv": "SN", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 4841.083333333333}, {"state_abbrv": "ST", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 432.5416666666667}, {"state_abbrv": "ST", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 424.3333333333333}, {"state_abbrv": "ST", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 2283.5416666666665}, {"state_abbrv": "ST", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 2531.0}, {"state_abbrv": "TH", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 359.6458333333333}, {"state_abbrv": "TH", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 350.1666666666667}, {"state_abbrv": "TH", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths", "val": 2071.1041666666665}, {"state_abbrv": "TH", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths", "val": 2313.8333333333335}, {"state_abbrv": "BB", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 17.155598327658364}, {"state_abbrv": "BB", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 17.262165101109893}, {"state_abbrv": "BB", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 88.47850933141626}, {"state_abbrv": "BB", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 103.02115646196462}, {"state_abbrv": "BE", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 13.225040384801778}, {"state_abbrv": "BE", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 13.971056657903416}, {"state_abbrv": "BE", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 65.79193590246349}, {"state_abbrv": "BE", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 74.12245095209843}, {"state_abbrv": "BW", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 11.328239039683337}, {"state_abbrv": "BW", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 11.284884722710443}, {"state_abbrv": "BW", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 71.14931385918975}, {"state_abbrv": "BW", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 76.99576549565118}, {"state_abbrv": "BY", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 11.763886519529244}, {"state_abbrv": "BY", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 12.02182819612563}, {"state_abbrv": "BY", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 73.03733654497864}, {"state_abbrv": "BY", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 80.39081722805824}, {"state_abbrv": "HB", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 15.768695139865512}, {"state_abbrv": "HB", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 16.478225254770244}, {"state_abbrv": "HB", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 80.51943476384392}, {"state_abbrv": "HB", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 82.12199416130115}, {"state_abbrv": "HE", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 12.444842728888096}, {"state_abbrv": "HE", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 12.905370160684978}, {"state_abbrv": "HE", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 75.32108370122518}, {"state_abbrv": "HE", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 82.56494828310072}, {"state_abbrv": "HH", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 12.214082207472392}, {"state_abbrv": "HH", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 12.626857284844036}, {"state_abbrv": "HH", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 67.30376582597691}, {"state_abbrv": "HH", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 71.90406511723083}, {"state_abbrv": "MV", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 19.45702628339939}, {"state_abbrv": "MV", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 19.380592129945732}, {"state_abbrv": "MV", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 90.30760005256596}, {"state_abbrv": "MV", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 97.44706818278863}, {"state_abbrv": "NI", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 14.591867235254304}, {"state_abbrv": "NI", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 14.506382266097278}, {"state_abbrv": "NI", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 83.61446420690132}, {"state_abbrv": "NI", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 87.65441087428856}, {"state_abbrv": "NW", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 14.465215348196061}, {"state_abbrv": "NW", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 14.492030084583384}, {"state_abbrv": "NW", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 81.43739913828442}, {"state_abbrv": "NW", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 86.43770902841541}, {"state_abbrv": "RP", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 13.935357041923075}, {"state_abbrv": "RP", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 14.031027766575482}, {"state_abbrv": "RP", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 82.49055567103893}, {"state_abbrv": "RP", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 87.50817984695777}, {"state_abbrv": "SH", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 14.585908287826447}, {"state_abbrv": "SH", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 14.366366333272838}, {"state_abbrv": "SH", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 85.37599185611272}, {"state_abbrv": "SH", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 87.92583534135301}, {"state_abbrv": "SL", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 17.18366270234924}, {"state_abbrv": "SL", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 15.984606140317991}, {"state_abbrv": "SL", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 96.35095000744766}, {"state_abbrv": "SL", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 102.75576974195965}, {"state_abbrv": "SN", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 15.148274222319692}, {"state_abbrv": "SN", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 15.244460238051792}, {"state_abbrv": "SN", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 97.25378283227788}, {"state_abbrv": "SN", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 118.88796195585216}, {"state_abbrv": "ST", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 19.707727996068254}, {"state_abbrv": "ST", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 19.333734891817652}, {"state_abbrv": "ST", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 104.0441222256546}, {"state_abbrv": "ST", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 115.31897017562564}, {"state_abbrv": "TH", "age": "0-65", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 16.858045472172925}, {"state_abbrv": "TH", "age": "0-65", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 16.413718837761834}, {"state_abbrv": "TH", "age": "65+", "period": "2016/Mar - 2020/Feb", "measure": "deaths_per_pop", "val": 97.08097517958217}, {"state_abbrv": "TH", "age": "65+", "period": "2020/Mar - 2021/Feb", "measure": "deaths_per_pop", "val": 108.4586666466671}], "data-2c993e909bda5ef1ccd1b3d4dd4793b8": [{"age_group": "0-65", "color": "#106ba3", "period": "2016/Mar - 2020/Feb (0-65)"}, {"age_group": "0-65 ", "color": "#bf7326", "period": "2020/Mar - 2021/Feb (0-65)"}, {"age_group": "65+", "color": "#48aff0", "period": "2016/Mar - 2020/Feb (65+)"}, {"age_group": "65+ ", "color": "#f57c00", "period": "2020/Mar - 2021/Feb (65+)"}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<section id="observation-1" class="level2">
<h2 class="anchored" data-anchor-id="observation-1">Observation</h2>
<p>North Rhine-Westphalia (NW) has the largest number of deaths, since it is the state with highest population. In each state, there are increases in death rates in the Covid19 period. However, only minimal increases in Hesse (HE) and Bavaria (BY) can be seen for the age groups under the age of 65. In the other states, there is no noticeable increase in this age group.</p>
<p>There are smaller variations looking at the number of deaths per 100.000 inhabitants in the age group below 65. The increase in deaths in North Rhine-Westphalia (NW) is slightly lower than in Bavaria (BY) and roughly as high as in Baden-Württemberg (BW). Saxony (SN) and Brandenburg (BB) have the strongest increases.</p>
<div class="callout-note callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Only <em>deaths</em> are evaluated. No other aspects (such as demographic aspects) are taken into account.</p>
</div>
</div>
</section>
</section>
<section id="deaths-by-state-and-population-density" class="level1">
<h1>Deaths by state and population density</h1>
<p>The last diagram refers to the <em>population density</em> of the <em>states</em> and the amount of <em>deaths per 100,000 inhabitants</em>.</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="13">
<div class="cell-output cell-output-display" data-execution_count="13">

<div id="altair-viz-574f303bb60e4c6cb92a4782b69631ef"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-574f303bb60e4c6cb92a4782b69631ef") {
      outputDiv = document.getElementById("altair-viz-574f303bb60e4c6cb92a4782b69631ef");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}, "title": {"anchor": "middle", "fontSize": 15, "offset": 15, "orient": "top"}}, "layer": [{"layer": [{"mark": "point", "encoding": {"color": {"type": "nominal", "field": "state_abbrv", "legend": {"title": "State"}}, "size": {"type": "quantitative", "field": "deaths_pre_covid_period", "legend": {"title": "Deaths (monthly average)"}}, "tooltip": [{"type": "nominal", "field": "state_abbrv", "title": "State"}, {"type": "quantitative", "field": "incr_mortality", "format": ".2%", "title": "Increased mortality"}, {"type": "quantitative", "field": "deaths_pre_covid_period", "format": ".0f", "title": "Deaths before Covid19 (monthly average)"}, {"type": "quantitative", "field": "deaths_per_pop_pre_covid_period", "format": ".0f", "title": "per 100,000"}, {"type": "quantitative", "field": "deaths_covid_period", "format": ".0f", "title": "Deaths during Covid19 (monthly average)"}, {"type": "quantitative", "field": "deaths_per_pop_covid_period", "format": ".0f", "title": " per 100,000"}], "x": {"type": "quantitative", "field": "deaths_per_pop_pre_covid_period", "scale": {"domain": [71.11527865853874, 148.11797557418765]}, "title": "Deaths per 100,000 (monthly average)"}, "y": {"type": "quantitative", "field": "pop_density", "title": "Population per km\u00b2"}}, "selection": {"selector003": {"type": "interval", "bind": "scales", "encodings": ["y"]}}}, {"mark": "circle", "encoding": {"color": {"type": "nominal", "field": "state_abbrv", "legend": {"title": "State"}}, "size": {"type": "quantitative", "field": "deaths_covid_period", "legend": {"title": "Deaths (monthly average)"}}, "tooltip": [{"type": "nominal", "field": "state_abbrv", "title": "State"}, {"type": "quantitative", "field": "incr_mortality", "format": ".2%", "title": "Increased mortality"}, {"type": "quantitative", "field": "deaths_pre_covid_period", "format": ".0f", "title": "Deaths before Covid19 (monthly average)"}, {"type": "quantitative", "field": "deaths_per_pop_pre_covid_period", "format": ".0f", "title": "per 100,000"}, {"type": "quantitative", "field": "deaths_covid_period", "format": ".0f", "title": "Deaths during Covid19 (monthly average)"}, {"type": "quantitative", "field": "deaths_per_pop_covid_period", "format": ".0f", "title": " per 100,000"}], "x": {"type": "quantitative", "field": "deaths_per_pop_covid_period", "scale": {"domain": [71.11527865853874, 148.11797557418765]}, "title": "Deaths per 100,000 (monthly average)"}, "y": {"type": "quantitative", "field": "pop_density", "title": "Population per km\u00b2"}}, "selection": {"selector004": {"type": "interval", "bind": "scales", "encodings": ["y"]}}}, {"mark": "errorbar", "encoding": {"color": {"type": "nominal", "field": "state_abbrv", "legend": {"title": "State"}}, "tooltip": [{"type": "nominal", "field": "state_abbrv", "title": "State"}, {"type": "quantitative", "field": "incr_mortality", "format": ".2%", "title": "Increased mortality"}, {"type": "quantitative", "field": "deaths_pre_covid_period", "format": ".0f", "title": "Deaths before Covid19 (monthly average)"}, {"type": "quantitative", "field": "deaths_per_pop_pre_covid_period", "format": ".0f", "title": "per 100,000"}, {"type": "quantitative", "field": "deaths_covid_period", "format": ".0f", "title": "Deaths during Covid19 (monthly average)"}, {"type": "quantitative", "field": "deaths_per_pop_covid_period", "format": ".0f", "title": " per 100,000"}], "x": {"type": "quantitative", "field": "deaths_per_pop_pre_covid_period", "title": "Deaths per 100,000 (monthly average)"}, "x2": {"field": "deaths_per_pop_covid_period", "title": "Deaths per 100,000 (monthly average)"}, "y": {"type": "quantitative", "field": "pop_density", "title": "Population per km\u00b2"}}}]}], "data": {"name": "data-bf3d950c754c2574cdfb2a3b110a5123"}, "height": 500, "title": "Deaths by State (monthly average) and Population density", "width": 800, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-bf3d950c754c2574cdfb2a3b110a5123": [{"state_abbrv": "BB", "pop_density": 85.0, "deaths_pre_covid_period": 2663.979166666667, "deaths_covid_period": 3033.416666666667, "deaths_per_pop_pre_covid_period": 105.63410765907463, "deaths_per_pop_covid_period": 120.28332156307452, "incr_mortality": 0.13867882475307147}, {"state_abbrv": "BE", "pop_density": 4090.0, "deaths_pre_covid_period": 2899.520833333333, "deaths_covid_period": 3232.583333333333, "deaths_per_pop_pre_covid_period": 79.01697628726527, "deaths_per_pop_covid_period": 88.09350761000185, "incr_mortality": 0.11486811757689841}, {"state_abbrv": "BW", "pop_density": 311.0, "deaths_pre_covid_period": 9155.333333333334, "deaths_covid_period": 9799.5, "deaths_per_pop_pre_covid_period": 82.47755289887309, "deaths_per_pop_covid_period": 88.28065021836161, "incr_mortality": 0.0703597174688706}, {"state_abbrv": "BY", "pop_density": 186.0, "deaths_pre_covid_period": 11129.9375, "deaths_covid_period": 12128.916666666668, "deaths_per_pop_pre_covid_period": 84.80122306450788, "deaths_per_pop_covid_period": 92.41264542418388, "incr_mortality": 0.08975604460192765}, {"state_abbrv": "HB", "pop_density": 1624.0, "deaths_pre_covid_period": 655.9166666666666, "deaths_covid_period": 671.6666666666666, "deaths_per_pop_pre_covid_period": 96.28812990370942, "deaths_per_pop_covid_period": 98.6002194160714, "incr_mortality": 0.024012196671325148}, {"state_abbrv": "HE", "pop_density": 298.0, "deaths_pre_covid_period": 5518.791666666667, "deaths_covid_period": 6003.25, "deaths_per_pop_pre_covid_period": 87.76592643011328, "deaths_per_pop_covid_period": 95.4703184437857, "incr_mortality": 0.08778340669379614}, {"state_abbrv": "HH", "pop_density": 2446.0, "deaths_pre_covid_period": 1468.8958333333333, "deaths_covid_period": 1561.5, "deaths_per_pop_pre_covid_period": 79.5178480334493, "deaths_per_pop_covid_period": 84.53092240207486, "incr_mortality": 0.06304338576311586}, {"state_abbrv": "MV", "pop_density": 69.0, "deaths_pre_covid_period": 1765.1666666666665, "deaths_covid_period": 1878.75, "deaths_per_pop_pre_covid_period": 109.76462633596536, "deaths_per_pop_covid_period": 116.82766031273437, "incr_mortality": 0.06434708714946669}, {"state_abbrv": "NI", "pop_density": 168.0, "deaths_pre_covid_period": 7850.229166666667, "deaths_covid_period": 8166.333333333333, "deaths_per_pop_pre_covid_period": 98.20633144215562, "deaths_per_pop_covid_period": 102.16079314038582, "incr_mortality": 0.040266871190066}, {"state_abbrv": "NW", "pop_density": 526.0, "deaths_pre_covid_period": 17211.854166666668, "deaths_covid_period": 18114.083333333332, "deaths_per_pop_pre_covid_period": 95.90261448648049, "deaths_per_pop_covid_period": 100.92973911299879, "incr_mortality": 0.05241905711785355}, {"state_abbrv": "RP", "pop_density": 206.0, "deaths_pre_covid_period": 3947.5833333333335, "deaths_covid_period": 4156.916666666667, "deaths_per_pop_pre_covid_period": 96.42591271296202, "deaths_per_pop_covid_period": 101.53920761353328, "incr_mortality": 0.053028224018914605}, {"state_abbrv": "SH", "pop_density": 184.0, "deaths_pre_covid_period": 2902.6666666666665, "deaths_covid_period": 2970.333333333333, "deaths_per_pop_pre_covid_period": 99.96190014393916, "deaths_per_pop_covid_period": 102.29220167462583, "incr_mortality": 0.02331189710610926}, {"state_abbrv": "SL", "pop_density": 384.0, "deaths_pre_covid_period": 1120.4583333333333, "deaths_covid_period": 1171.8333333333335, "deaths_per_pop_pre_covid_period": 113.53461270979689, "deaths_per_pop_covid_period": 118.74037588227766, "incr_mortality": 0.04585177196831669}, {"state_abbrv": "SN", "pop_density": 221.0, "deaths_pre_covid_period": 4576.979166666667, "deaths_covid_period": 5461.833333333333, "deaths_per_pop_pre_covid_period": 112.40205705459756, "deaths_per_pop_covid_period": 134.13242219390398, "incr_mortality": 0.1933271125879059}, {"state_abbrv": "ST", "pop_density": 107.0, "deaths_pre_covid_period": 2716.083333333333, "deaths_covid_period": 2955.3333333333335, "deaths_per_pop_pre_covid_period": 123.75185022172285, "deaths_per_pop_covid_period": 134.65270506744332, "incr_mortality": 0.08808639892001358}, {"state_abbrv": "TH", "pop_density": 132.0, "deaths_pre_covid_period": 2430.75, "deaths_covid_period": 2664.0, "deaths_per_pop_pre_covid_period": 113.9390206517551, "deaths_per_pop_covid_period": 124.87238548442893, "incr_mortality": 0.09595803764270294}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<section id="observation-2" class="level2">
<h2 class="anchored" data-anchor-id="observation-2">Observation</h2>
<p>The city-states Hamburg (HH) and Bremen (HB) show a moderate increase in deaths despite their high population density. Berlin (BE) instead has a high increase in death rate. Schleswig-Holstein (SH) recorded the lowest increase.</p>
<p>The correlation coefficient of <em>population density</em> and <em>increase in mortality</em> is:</p>
<div class="cell" data-jupyter="{&quot;source_hidden&quot;:true}" data-execution_count="14">
<div class="cell-output cell-output-stdout">
<pre><code>0.0232</code></pre>
</div>
</div>
<p>Hence, There is no correlation for this comparison.</p>
<div class="callout-note callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Only deaths are evaluated. No other aspects (such as demographic aspects) are taken into account.</p>
</div>
</div>
</section>
</section>
<section id="technical-conclusion" class="level1">
<h1>Technical conclusion</h1>
<p>With Altair you can easily setup interactive charts and integrate them into notebooks. Their website contains a variety of examples [AA1]. Some questions are also answered in their Github Issue tracker [AA2].</p>
<p>I spent some time debugging JavaScript when I used the bindings incorrectly. However, there was finally a solution to every problem [AA2] or workarounds such as for the legend in the bar diagram [AG18]. As expected, a bit of practice is neccessary to get used to a new framework.</p>
<p>The integration [FP20] in this blog works perfectly. I will certainly use the framework elsewhere.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<section id="data-sources" class="level2">
<h2 class="anchored" data-anchor-id="data-sources">Data sources</h2>
<p>The data used here are from the “Statistisches Bundesamt” (Federal Statistical Office) and are subject to the license “dl-de/by-2-0”. The license text can be found at www.govdata.de/dl-de/by-2-0. The data were modified exclusively within this notebook by executing the specified program code for the purpose of analysis.</p>
<ul>
<li>[SB21] Statistisches Bundesamt (Destatis), 2021 (published 2012/03/30), <em>Sterbefälle - Fallzahlen nach Tagen, Wochen, Monaten, Altersgruppen, Geschlecht und Bundesländern für Deutschland 2016 - 2021</em>, visited 2021/04/03, <a href="https://www.destatis.de/DE/Themen/Gesellschaft-Umwelt/Bevoelkerung/Sterbefaelle-Lebenserwartung/Tabellen/sonderauswertung-sterbefaelle.xlsx?__blob=publicationFile" class="uri">https://www.destatis.de/DE/Themen/Gesellschaft-Umwelt/Bevoelkerung/Sterbefaelle-Lebenserwartung/Tabellen/sonderauswertung-sterbefaelle.xlsx?__blob=publicationFile</a></li>
<li>[SB20] Statistisches Bundesamt (Destatis), 2020 (published 2020/09/02), <em>Bundesländer mit Hauptstädten nach Fläche, Bevölkerung und Bevölkerungsdichte am 31.12.2019</em>, visited 2021/04/03, <a href="https://www.destatis.de/DE/Themen/Laender-Regionen/Regionales/Gemeindeverzeichnis/Administrativ/02-bundeslaender.xlsx?__blob=publicationFile" class="uri">https://www.destatis.de/DE/Themen/Laender-Regionen/Regionales/Gemeindeverzeichnis/Administrativ/02-bundeslaender.xlsx?__blob=publicationFile</a></li>
</ul>
</section>
<section id="other-references" class="level2">
<h2 class="anchored" data-anchor-id="other-references">Other references</h2>
<p>A lot of the coding is derived from various examples of the Altair homepage and from great examples in the coresponding Github Issue tracker answered by https://github.com/jakevdp.</p>
<ul>
<li>[AA1] https://altair-viz.github.io/gallery/index.html</li>
<li>[AA2] https://github.com/altair-viz/altair/issues/</li>
<li>[AG18] A. Gordon, 2018 (published 2018/10/06), <em>Focus: generating an interactive legend in Altair</em>, visited 2021/04/05, <a href="https://medium.com/dataexplorations/focus-generating-an-interactive-legend-in-altair-9a92b5714c55" class="uri">https://medium.com/dataexplorations/focus-generating-an-interactive-legend-in-altair-9a92b5714c55</a></li>
<li>[FP20] fastpages.fast.ai, 2020 (published 2020/02/20), <em>Fastpages Notebook Blog Post</em>, visited 2021/04/05, <a href="https://fastpages.fast.ai/jupyter/2020/02/20/test.html" class="uri">https://fastpages.fast.ai/jupyter/2020/02/20/test.html</a></li>
</ul>


</section>
</section>

 ]]></description>
  <category>EDA</category>
  <category>Society</category>
  <guid>https://joatom.github.io/blog/posts/2021-04-06-mortality-germany/2021-04-06-mortality-germany.html</guid>
  <pubDate>Mon, 05 Apr 2021 22:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2021-04-06-mortality-germany/mortality_germany.png" medium="image" type="image/png" height="67" width="144"/>
</item>
<item>
  <title>Automatically translate blog posts</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2020-12-26-blog-translator/index.html</link>
  <description><![CDATA[ 




<p><a href="index-de.html"><span class="emoji" data-emoji="de">🇩🇪</span></a> <a href="index.html"><span class="emoji" data-emoji="us">🇺🇸</span></a></p>
<blockquote class="blockquote">
<p>Attention! This text has been automatically translated!</p>
</blockquote>
<p>Since I made so many mistakes in my first <a href="https://datamuni.com/@joatom/a-handful-of-bricks-from-sql-to-pandas">Blog post</a>, I write this post in German and have it automatically translated.</p>
<p>For translation I use the popular NLP framework of <a href="https://huggingface.co/transformers/index.html">huggingface.co</a>. On their website is a simple <a href="https://huggingface.co/transformers/model_doc/marian.html">example</a> to implement a translation application and I will use it.</p>
<p>As expected, the Markdown syntax does not immediately work correctly when translating. So I had to make some adjustments at the beginning and afterwards.</p>
<p>The code (including pre- and post-processing) I used for the translation of the markdown files can be found <a href="https://github.com/joatom/blog-resources/tree/main/blog_translator">here</a>. But since it’s just a few lines of code, we can also look at it here:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">from</span> transformers <span class="im" style="color: #00769E;">import</span> MarianMTModel, MarianTokenizer </span>
<span id="cb1-2"> </span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># load pretrained model and tokenizer </span></span>
<span id="cb1-4">model_name <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'Helsinki-NLP/opus-mt-de-en'</span> </span>
<span id="cb1-5">tokenizer <span class="op" style="color: #5E5E5E;">=</span> MarianTokenizer.from_pretrained(model_name) </span>
<span id="cb1-6">model <span class="op" style="color: #5E5E5E;">=</span> MarianMTModel.from_pretrained(model_name) </span>
<span id="cb1-7"> </span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;"># load german block post </span></span>
<span id="cb1-9">f_in <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">open</span>(<span class="st" style="color: #20794D;">"blog_translator_de.md"</span>, <span class="st" style="color: #20794D;">"r"</span>) </span>
<span id="cb1-10">src_text <span class="op" style="color: #5E5E5E;">=</span> f_in.readlines() </span>
<span id="cb1-11">f_in.close() </span>
<span id="cb1-12"> </span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;"># preprocessing </span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;">## line break (\n) results to "I don't know."  We make it more specific: </span></span>
<span id="cb1-15">src_text <span class="op" style="color: #5E5E5E;">=</span> [s.replace(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">'</span>,<span class="st" style="color: #20794D;">' '</span>) <span class="cf" style="color: #003B4F;">for</span> s <span class="kw" style="color: #003B4F;">in</span> src_text] </span>
<span id="cb1-16"> </span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;">## remove code block </span></span>
<span id="cb1-18">code <span class="op" style="color: #5E5E5E;">=</span> [] </span>
<span id="cb1-19">inside_code_block <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span> </span>
<span id="cb1-20"><span class="cf" style="color: #003B4F;">for</span> i, line <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(src_text): </span>
<span id="cb1-21">    <span class="cf" style="color: #003B4F;">if</span> line.startswith(<span class="st" style="color: #20794D;">'```'</span>) <span class="kw" style="color: #003B4F;">and</span> <span class="kw" style="color: #003B4F;">not</span> inside_code_block: </span>
<span id="cb1-22">        <span class="co" style="color: #5E5E5E;"># entering codeblock </span></span>
<span id="cb1-23">        inside_code_block <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span> </span>
<span id="cb1-24">        code <span class="op" style="color: #5E5E5E;">+=</span> [line] </span>
<span id="cb1-25">        src_text[i] <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'&lt;&lt;code_block&gt;&gt;'</span> </span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;">elif</span> inside_code_block <span class="kw" style="color: #003B4F;">and</span> <span class="kw" style="color: #003B4F;">not</span> line.startswith(<span class="st" style="color: #20794D;">'```'</span>): </span>
<span id="cb1-27">        code <span class="op" style="color: #5E5E5E;">+=</span> [line] </span>
<span id="cb1-28">        src_text[i] <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'&lt;&lt;code_block&gt;&gt;'</span> </span>
<span id="cb1-29">    <span class="cf" style="color: #003B4F;">elif</span> inside_code_block <span class="kw" style="color: #003B4F;">and</span> line.startswith(<span class="st" style="color: #20794D;">'```'</span>): </span>
<span id="cb1-30">        <span class="co" style="color: #5E5E5E;"># leaving code block </span></span>
<span id="cb1-31">        code <span class="op" style="color: #5E5E5E;">+=</span> [line] </span>
<span id="cb1-32">        src_text[i] <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'&lt;&lt;code_block&gt;&gt;'</span> </span>
<span id="cb1-33">        inside_code_block <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span> </span>
<span id="cb1-34"> </span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;"># translate </span></span>
<span id="cb1-36">translated <span class="op" style="color: #5E5E5E;">=</span> model.generate(<span class="op" style="color: #5E5E5E;">**</span>tokenizer.prepare_seq2seq_batch(src_text, return_tensors<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"pt"</span>)) </span>
<span id="cb1-37">tgt_text <span class="op" style="color: #5E5E5E;">=</span> [tokenizer.decode(t, skip_special_tokens<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>) <span class="cf" style="color: #003B4F;">for</span> t <span class="kw" style="color: #003B4F;">in</span> translated] </span>
<span id="cb1-38"> </span>
<span id="cb1-39"><span class="co" style="color: #5E5E5E;"># postprocessing </span></span>
<span id="cb1-40"><span class="co" style="color: #5E5E5E;">## replace code_blog tags with code </span></span>
<span id="cb1-41"><span class="cf" style="color: #003B4F;">for</span> i, line <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">enumerate</span>(tgt_text): </span>
<span id="cb1-42">    <span class="cf" style="color: #003B4F;">if</span> line <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'&lt;&lt;code_block&gt;&gt;'</span>: </span>
<span id="cb1-43">        tgt_text[i] <span class="op" style="color: #5E5E5E;">=</span> code.pop(<span class="dv" style="color: #AD0000;">0</span>) </span>
<span id="cb1-44"> </span>
<span id="cb1-45"><span class="co" style="color: #5E5E5E;">## remove the eol (but keep empty list entries / lines) </span></span>
<span id="cb1-46">tgt_text <span class="op" style="color: #5E5E5E;">=</span> [s.replace(<span class="st" style="color: #20794D;">''</span>, <span class="st" style="color: #20794D;">''</span>,) <span class="cf" style="color: #003B4F;">for</span> s <span class="kw" style="color: #003B4F;">in</span> tgt_text] </span>
<span id="cb1-47"><span class="co" style="color: #5E5E5E;">## remove space between ]( to get the md link syntax right </span></span>
<span id="cb1-48">tgt_text <span class="op" style="color: #5E5E5E;">=</span> [s.replace(<span class="st" style="color: #20794D;">']('</span>, <span class="st" style="color: #20794D;">']('</span>,) <span class="cf" style="color: #003B4F;">for</span> s <span class="kw" style="color: #003B4F;">in</span> tgt_text] </span>
<span id="cb1-49"> </span>
<span id="cb1-50"><span class="co" style="color: #5E5E5E;"># write english blog post </span></span>
<span id="cb1-51"><span class="cf" style="color: #003B4F;">with</span> <span class="bu" style="color: null;">open</span>(<span class="st" style="color: #20794D;">'2020-12-26-blog-translator.md'</span>, <span class="st" style="color: #20794D;">'w'</span>) <span class="im" style="color: #00769E;">as</span> f_out: </span>
<span id="cb1-52">    <span class="cf" style="color: #003B4F;">for</span> line <span class="kw" style="color: #003B4F;">in</span> tgt_text: </span>
<span id="cb1-53">        f_out.write(<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">%s</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">"</span> <span class="op" style="color: #5E5E5E;">%</span> line) </span>
<span id="cb1-54">f_out.close() </span></code></pre></div>
<p>Since this is my first NLP application, I left it with this <em>Hello World</em> code. Surely there are clever ways to map the markdown syntax in <em>tokenizer</em>. Maybe I’ll write a follow up when I find out.</p>
<p>By the way, the translation just made me adapt my German writing style. For example, sarcasm doesn’t work so well after translation, so I avoided it. Also, it often depends on the correct choice of words (e.g.&nbsp;there is no markdown command, but there is markdown syntax). &lt;<eol></eol></p>
<p>Best regards</p>
<p>Johannes &amp; the Robot</p>



 ]]></description>
  <category>NLP</category>
  <category>ML</category>
  <guid>https://joatom.github.io/blog/posts/2020-12-26-blog-translator/index.html</guid>
  <pubDate>Fri, 25 Dec 2020 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2020-12-26-blog-translator/logo_blog_translator.png" medium="image" type="image/png" height="67" width="144"/>
</item>
<item>
  <title>A handful of bricks - from SQL to Pandas</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/index.html</link>
  <description><![CDATA[ 




<p>Original article published at <a href="https://datamuni.com/@joatom/a-handful-of-bricks-from-sql-to-pandas">datamuni.com</a>.</p>
<section id="sql-vs.-and-pandas" class="level1">
<h1>SQL <del>vs.</del> and Pandas</h1>
<p>I love SQL. It’s been around for decades to arrange and analyse data. Data is kept in tables which are stored in a relational structure. Consistancy and data integraty is kept in mind when designing a relational data model. However, when it comes to machine learning other data structures such as matrices and tensors become important to feat the underlying algorithms and make data processing more efficient. That’s where Pandas steps in. From a SQL developer perspective it is the library to close the gap between your data storage and the ml frameworks.</p>
<p>This blog post shows how to translate some common and some advanced techniques from SQL to Pandas step-by-step. I didn’t just want to write a plain cheat sheet (actually Pandas has a good one to get started: <a href="https://pandas.pydata.org/docs/getting_started/comparison/comparison_with_sql.html">Comparison SQL</a> (Ref. 1)). Rather I want to unwind some concepts that might be helpful for a SQL developer who now and then deals with Pandas.</p>
<p>The coding examples are built upon a <a href="https://www.kaggle.com/rtatman/lego-database">Lego Dataset</a> (Ref. 2), that contains a couple of tables with data about various lego sets. &gt; To follow along I’ve provided a <a href="https://www.kaggle.com/joatom/a-handful-of-bricks-from-sql-to-pandas">notebook</a> (Res. 1) on kaggle, where you can play with the blog examples either using SQLite or Bigquery. You can also checkout a <a href="https://github.com/joatom/blog-resources/tree/main/handful_bricks">docker container</a> (Res. 2) to play on your home machine.</p>
</section>
<section id="missing-bricks" class="level1">
<h1>Missing bricks</h1>
<p>First listen to this imaginary dialogue that guides us throug the coding:</p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/chick.png" class="img-fluid">: <em>I miss all red bricks of the Lego Pizzeria. I definetly need a new one.</em></p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/penguin.png" class="img-fluid">: <em>Don’t worry. We can try to solve this with data. That will be fun. :-)</em></p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/chick.png" class="img-fluid">: <em>(!@#%&amp;) You’re kidding, right?</em></p>
<p>Now that we have a mission we are ready to code and figuere out how to deal with missing bricks. First we inspect the tables. They are organized as shown in the relational diagram (Fig. 1).</p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/schema.png" class="img-fluid"></p>
<p>Fig. 1: Data model (<a href="https://www.kaggle.com/rtatman/lego-database">source: Lego dataset</a> (Ref. 2))</p>
<p>There are colors, parts, sets and inventories. We should start by searching for the <em>Pizzeria</em> in the <code>sets</code> table using the set number (<em>41311</em>).</p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/piz.png" class="img-fluid"></p>
<p>Fig. 2: Lego Box with set number</p>
</section>
<section id="a-simple-filter-the-behaviour-of-brackets." class="level1">
<h1>A simple Filter <em>(The behaviour of brackets.)</em></h1>
<p>A simple <code>like</code>-filter on the <code>sets</code> table will return the set info.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb1-1"><span class="kw" style="color: #003B4F;">SELECT</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb1-2">  <span class="kw" style="color: #003B4F;">FROM</span> sets s</span>
<span id="cb1-3"> <span class="kw" style="color: #003B4F;">WHERE</span> s.set_num <span class="kw" style="color: #003B4F;">like</span> <span class="st" style="color: #20794D;">'41311%'</span></span></code></pre></div>
<p>There are several ways to apply a filter in Pandas. The most SQL-like code utilizes the <code>query</code>-function which basicaly substitutes the <code>where</code> clause.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df_sets.query(<span class="st" style="color: #20794D;">"set_num.str.contains('41311')"</span>, engine<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'python'</span>)</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>name</th>
<th>year</th>
<th>theme_id</th>
<th>num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>3582</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>2017</td>
<td>494</td>
<td>287</td>
</tr>
</tbody>
</table>
<p>Since the <code>query</code> function expects a String as input parameter we loose syntax highlighting and syntax checking for our filter expression.</p>
<p>Therefore a more commonly used expression consists of the <strong>bracket notation</strong> (The behaviour of the bracket notation of a class in python is implementated in the class function <code>__getitem__</code>)</p>
<p>See how we can apply an equals filter using brackets.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">df_sets.query(<span class="st" style="color: #20794D;">"set_num == '41311-1'"</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;"># or</span></span>
<span id="cb3-4"></span>
<span id="cb3-5">df_sets[df_sets.set_num <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'41311-1'</span>]</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;"># or</span></span>
<span id="cb3-8"></span>
<span id="cb3-9">df_sets[df_sets[<span class="st" style="color: #20794D;">'set_num'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'41311-1'</span>]</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>name</th>
<th>year</th>
<th>theme_id</th>
<th>num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>3582</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>2017</td>
<td>494</td>
<td>287</td>
</tr>
</tbody>
</table>
<p>There is a lot going on in this expression.</p>
<p>Let’s take it apart.</p>
<p><code>df_sets['set_num']</code> returns a single column (a <em>Pandas.Series</em> object). A Pandas DataFrame is basically a collection of Series. Additionaly there is a row index (often just called <em>index</em>) and a column index (<em>columnnames</em>). Think of a column store database.</p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/df.png" class="img-fluid"></p>
<p>Fig. 3: Elements of a DataFrame</p>
<p>Applying a boolean condition (<code>== '41311-1'</code>) to a Series of the DataFrame (<code>df_sets['set_num']</code>) will result in a boolean collection of the size of the column.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">bool_coll <span class="op" style="color: #5E5E5E;">=</span> df_sets[<span class="st" style="color: #20794D;">'set_num'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'41311-1'</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;"># only look at the position 3580 - 3590 of the collection</span></span>
<span id="cb4-4">bool_coll[<span class="dv" style="color: #AD0000;">3580</span>:<span class="dv" style="color: #AD0000;">3590</span>]</span></code></pre></div>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1">    <span class="ex" style="color: null;">3580</span>    False</span>
<span id="cb5-2">    <span class="ex" style="color: null;">3581</span>    False</span>
<span id="cb5-3">    <span class="ex" style="color: null;">3582</span>     True</span>
<span id="cb5-4">    <span class="ex" style="color: null;">3583</span>    False</span>
<span id="cb5-5">    <span class="ex" style="color: null;">3584</span>    False</span>
<span id="cb5-6">    <span class="ex" style="color: null;">3585</span>    False</span>
<span id="cb5-7">    <span class="ex" style="color: null;">3586</span>    False</span>
<span id="cb5-8">    <span class="ex" style="color: null;">3587</span>    False</span>
<span id="cb5-9">    <span class="ex" style="color: null;">3588</span>    False</span>
<span id="cb5-10">    <span class="ex" style="color: null;">3589</span>    False</span>
<span id="cb5-11">    <span class="ex" style="color: null;">Name:</span> set_num, dtype: bool</span></code></pre></div>
<p>The boolean collection now gets past to the DataFrame and filters the rows:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">df_sets[bool_coll]</span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;"># or </span></span>
<span id="cb6-3">df_sets[df_sets[<span class="st" style="color: #20794D;">'set_num'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'41311-1'</span>]</span></code></pre></div>
<p>Depending on what type of object we pass to the square brackets the outcome result in very different behaviors.</p>
<p>We have already seen in the example above that if we pass a <strong>boolean collection</strong> with the size of number of rows, the collection is been handled as a <strong>row filter</strong>.</p>
<p>But if we pass a column name or a <strong>list of column</strong> names to the brackets instead, the given columns are selected like in the <code>SELECT</code> clause of an SQL statement.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb7-1"><span class="kw" style="color: #003B4F;">SELECT</span> name,</span>
<span id="cb7-2">       <span class="dt" style="color: #AD0000;">year</span></span>
<span id="cb7-3">  <span class="kw" style="color: #003B4F;">FROM</span> lego.sets;</span></code></pre></div>
<p>=&gt;</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">df_sets[[<span class="st" style="color: #20794D;">'name'</span>, <span class="st" style="color: #20794D;">'year'</span>]]</span></code></pre></div>
<p>Row filter and column selection can be combined like this:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb9-1"><span class="kw" style="color: #003B4F;">SELECT</span> s.name,</span>
<span id="cb9-2">       s.<span class="dt" style="color: #AD0000;">year</span></span>
<span id="cb9-3">  <span class="kw" style="color: #003B4F;">FROM</span> lego.sets s</span>
<span id="cb9-4"> <span class="kw" style="color: #003B4F;">WHERE</span> s.set_num <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'41311-1'</span>;</span></code></pre></div>
<p>=&gt;</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">df_temp <span class="op" style="color: #5E5E5E;">=</span> df_sets[df_sets[<span class="st" style="color: #20794D;">'set_num'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'41311-1'</span>]</span>
<span id="cb10-2">df_temp[[<span class="st" style="color: #20794D;">'name'</span>,<span class="st" style="color: #20794D;">'year'</span>]]</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;"># or simply:</span></span>
<span id="cb10-5"></span>
<span id="cb10-6">df_sets[df_sets[<span class="st" style="color: #20794D;">'set_num'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'41311-1'</span>][[<span class="st" style="color: #20794D;">'name'</span>,<span class="st" style="color: #20794D;">'year'</span>]]</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>name</th>
<th>year</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>3582</td>
<td>Heartlake Pizzeria</td>
<td>2017</td>
</tr>
</tbody>
</table>
</section>
<section id="indexing-what-actually-is-an-index" class="level1">
<h1>Indexing <em>(What actually is an index?)</em></h1>
<p>Another way to access a row in Pandas is by using the row index. With the <code>loc</code> function (and brackets) we select the <em>Pizzeria</em> and another arbitrary set. We use the row numbers to filter the rows.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">df_sets.loc[[<span class="dv" style="color: #AD0000;">236</span>, <span class="dv" style="color: #AD0000;">3582</span>]]</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>name</th>
<th>year</th>
<th>theme_id</th>
<th>num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>236</strong></td>
<td>10255-1</td>
<td>Assembly Square</td>
<td>2017</td>
<td>155</td>
<td>4009</td>
</tr>
<tr class="even">
<td><strong>3582</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>2017</td>
<td>494</td>
<td>287</td>
</tr>
</tbody>
</table>
<p>If we inspect the DataFrame closely we realize that it doesn’t realy look like a simple table but rather like a <strong>cross table</strong>.</p>
<p>The first column on the left is a row index and the table header is the column index. In the center the values of the columns are displayed (see Fig. 3).</p>
<p>If we think of the values as a matrix the rows are dimension 0 and columns are dimension 1. The dimension is often used in DataFrame functions as <code>axis</code> parameter. E.g. dropping columns can be done using dimensional information:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb12-1"><span class="co" style="color: #5E5E5E;">-- EXCEPT in SELECT clause only works with BIGQUERY</span></span>
<span id="cb12-2"><span class="kw" style="color: #003B4F;">SELECT</span> s.<span class="op" style="color: #5E5E5E;">*</span> <span class="kw" style="color: #003B4F;">EXCEPT</span> s.<span class="dt" style="color: #AD0000;">year</span></span>
<span id="cb12-3">  <span class="kw" style="color: #003B4F;">FROM</span> lego.sets s;</span></code></pre></div>
<p>==&gt;</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">df_sets.drop([<span class="st" style="color: #20794D;">'year'</span>], axis <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span>).head(<span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>name</th>
<th>theme_id</th>
<th>num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>0</strong></td>
<td>00-1</td>
<td>Weetabix Castle</td>
<td>414</td>
<td>471</td>
</tr>
<tr class="even">
<td><strong>1</strong></td>
<td>0011-2</td>
<td>Town Mini-Figures</td>
<td>84</td>
<td>12</td>
</tr>
<tr class="odd">
<td><strong>2</strong></td>
<td>0011-3</td>
<td>Castle 2 for 1 Bonus Offer</td>
<td>199</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>3</strong></td>
<td>0012-1</td>
<td>Space Mini-Figures</td>
<td>143</td>
<td>12</td>
</tr>
<tr class="odd">
<td><strong>4</strong></td>
<td>0013-1</td>
<td>Space Mini-Figures</td>
<td>143</td>
<td>12</td>
</tr>
</tbody>
</table>
<p>The indexes can be accessed with the <code>index</code> and <code>columns</code> variable. <code>axes</code> contains both.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">df_sets.index <span class="co" style="color: #5E5E5E;"># row index</span></span>
<span id="cb14-2">df_sets.columns <span class="co" style="color: #5E5E5E;"># column index</span></span>
<span id="cb14-3"></span>
<span id="cb14-4">df_sets.axes <span class="co" style="color: #5E5E5E;"># both</span></span></code></pre></div>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1">    <span class="ex" style="color: null;">[RangeIndex</span><span class="er" style="color: #AD0000;">(</span><span class="va" style="color: #111111;">start</span><span class="op" style="color: #5E5E5E;">=</span>0, <span class="va" style="color: #111111;">stop</span><span class="op" style="color: #5E5E5E;">=</span>11673, <span class="va" style="color: #111111;">step</span><span class="op" style="color: #5E5E5E;">=</span>1<span class="kw" style="color: #003B4F;">)</span><span class="ex" style="color: null;">,</span></span>
<span id="cb15-2">     <span class="ex" style="color: null;">Index</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">[</span><span class="st" style="color: #20794D;">'set_num'</span><span class="ex" style="color: null;">,</span> <span class="st" style="color: #20794D;">'name'</span>, <span class="st" style="color: #20794D;">'year'</span>, <span class="st" style="color: #20794D;">'theme_id'</span>, <span class="st" style="color: #20794D;">'num_parts'</span>], dtype=<span class="st" style="color: #20794D;">'object'</span><span class="kw" style="color: #003B4F;">)</span><span class="ex" style="color: null;">]</span></span></code></pre></div>
<p>The row index doesn’t necessarely be the row number. We can also convert a column into a row index.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">df_sets.set_index(<span class="st" style="color: #20794D;">'set_num'</span>).head()</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>name</th>
<th>year</th>
<th>theme_id</th>
<th>num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>set_num</strong></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>00-1</strong></td>
<td>Weetabix Castle</td>
<td>1970</td>
<td>414</td>
<td>471</td>
</tr>
<tr class="odd">
<td><strong>0011-2</strong></td>
<td>Town Mini-Figures</td>
<td>1978</td>
<td>84</td>
<td>12</td>
</tr>
<tr class="even">
<td><strong>0011-3</strong></td>
<td>Castle 2 for 1 Bonus Offer</td>
<td>1987</td>
<td>199</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>0012-1</strong></td>
<td>Space Mini-Figures</td>
<td>1979</td>
<td>143</td>
<td>12</td>
</tr>
<tr class="even">
<td><strong>0013-1</strong></td>
<td>Space Mini-Figures</td>
<td>1979</td>
<td>143</td>
<td>12</td>
</tr>
</tbody>
</table>
<p>It is also possible to define hierarchicle indicies for multi dimensional representation.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df_sets.set_index([<span class="st" style="color: #20794D;">'year'</span>, <span class="st" style="color: #20794D;">'set_num'</span>]).sort_index(axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>).head() <span class="co" style="color: #5E5E5E;"># axis = 0 =&gt; row index</span></span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th></th>
<th>name</th>
<th>theme_id</th>
<th>num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>year</strong></td>
<td><strong>set_num</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>150</strong></td>
<td><strong>700.1.1-1</strong></td>
<td>Individual 2 x 4 Bricks</td>
<td>371</td>
<td>10</td>
</tr>
<tr class="odd">
<td></td>
<td><strong>700.1.2-1</strong></td>
<td>Individual 2 x 2 Bricks</td>
<td>371</td>
<td>9</td>
</tr>
<tr class="even">
<td></td>
<td><strong>700.A-1</strong></td>
<td>Automatic Binding Bricks Small Brick Set (Lego…</td>
<td>366</td>
<td>24</td>
</tr>
<tr class="odd">
<td></td>
<td><strong>700.B.1-1</strong></td>
<td>Individual 1 x 4 x 2 Window (without glass)</td>
<td>371</td>
<td>7</td>
</tr>
<tr class="even">
<td></td>
<td><strong>700.B.2-1</strong></td>
<td>Individual 1 x 2 x 3 Window (without glass)</td>
<td>371</td>
<td>7</td>
</tr>
</tbody>
</table>
<p>Sometimes it is usefull to reset the index, hence reset the row numbers.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">df_sets.loc[[<span class="dv" style="color: #AD0000;">236</span>, <span class="dv" style="color: #AD0000;">3582</span>]].reset_index(drop <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>) <span class="co" style="color: #5E5E5E;"># set drop = False to keep the old index as new column</span></span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>name</th>
<th>year</th>
<th>theme_id</th>
<th>num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>0</strong></td>
<td>10255-1</td>
<td>Assembly Square</td>
<td>2017</td>
<td>155</td>
<td>4009</td>
</tr>
<tr class="even">
<td><strong>1</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>2017</td>
<td>494</td>
<td>287</td>
</tr>
</tbody>
</table>
<p>Now we get a sence what is meant by an index in Pandas in contrast to SQL.</p>
<p><strong>Indices in SQL</strong> are hidden data structures (in form of e.g.&nbsp;b-trees or hash-tables). They are built to <strong>access data more quickly</strong>, to avoid full table scans when appropriate or to mantain consistancies when used with constraints.</p>
<p>An <strong>index in Pandas</strong> can rather be seen as a <strong>dimensional access</strong> to the data values. They can be distingueshed between row and column indices.</p>
</section>
<section id="joins-why-merge-doesnt-mean-upsert." class="level1">
<h1>Joins <em>(Why merge doesn’t mean upsert.)</em></h1>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/chick.png" class="img-fluid">: <em>What are we gonna do now about my missing parts?</em></p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/penguin.png" class="img-fluid">: <em>We don’t have all the information we need, yet. We need to join the other tables.</em></p>
<p>Though there is a function called <code>join</code> to join DataFrames I always use the <code>merge</code> function. This can be a bit confusing, when you are used to Oracle where <em>merge</em> means upsert/updelete rather then combining two tables.</p>
<p>When combining two DataFrames with the <code>merge</code> function in Pandas we have to define the relationship more explicitly. If you are used to SQL thats what you want.</p>
<p>In contrast the <code>join</code> function implicitly combines the DataFrames by their index or column names. It also enables multiply DataFrame joins in one statement as long as the join columns are matchable by name.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb19-1"><span class="kw" style="color: #003B4F;">SELECT</span> <span class="op" style="color: #5E5E5E;">*</span> </span>
<span id="cb19-2">  <span class="kw" style="color: #003B4F;">FROM</span> sets s</span>
<span id="cb19-3"> <span class="kw" style="color: #003B4F;">INNER</span> <span class="kw" style="color: #003B4F;">JOIN</span></span>
<span id="cb19-4">       inventories i</span>
<span id="cb19-5">    <span class="kw" style="color: #003B4F;">ON</span> s.set_num <span class="op" style="color: #5E5E5E;">=</span> i.set_num <span class="co" style="color: #5E5E5E;">-- USING (set_num)</span></span>
<span id="cb19-6"><span class="kw" style="color: #003B4F;">LIMIT</span> <span class="dv" style="color: #AD0000;">5</span></span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th>set_num</th>
<th>name</th>
<th>year</th>
<th>theme_id</th>
<th>num_parts</th>
<th>id</th>
<th>version</th>
<th>set_num_1</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>00-1</td>
<td>Weetabix Castle</td>
<td>1970</td>
<td>414</td>
<td>471</td>
<td>5574</td>
<td>1</td>
<td>00-1</td>
</tr>
<tr class="even">
<td>0011-2</td>
<td>Town Mini-Figures</td>
<td>1978</td>
<td>84</td>
<td>12</td>
<td>5087</td>
<td>1</td>
<td>0011-2</td>
</tr>
<tr class="odd">
<td>0011-3</td>
<td>Castle 2 for 1 Bonus Offer</td>
<td>1987</td>
<td>199</td>
<td>2</td>
<td>2216</td>
<td>1</td>
<td>0011-3</td>
</tr>
<tr class="even">
<td>0012-1</td>
<td>Space Mini-Figures</td>
<td>1979</td>
<td>143</td>
<td>12</td>
<td>1414</td>
<td>1</td>
<td>0012-1</td>
</tr>
<tr class="odd">
<td>0013-1</td>
<td>Space Mini-Figures</td>
<td>1979</td>
<td>143</td>
<td>12</td>
<td>4609</td>
<td>1</td>
<td>0013-1</td>
</tr>
</tbody>
</table>
<p>These Pandas statements all do the same:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">df_sets.merge(df_inventories, how <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inner'</span>, on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'set_num'</span>).head(<span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;">#or if columns are matching</span></span>
<span id="cb20-4"></span>
<span id="cb20-5">df_sets.merge(df_inventories, on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'set_num'</span>).head(<span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;">#or explicitly defined columns</span></span>
<span id="cb20-8"></span>
<span id="cb20-9">df_sets.merge(df_inventories, how <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inner'</span>, left_on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'set_num'</span>, right_on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'set_num'</span>).head(<span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>name</th>
<th>year</th>
<th>theme_id</th>
<th>num_parts</th>
<th>id</th>
<th>version</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>0</strong></td>
<td>00-1</td>
<td>Weetabix Castle</td>
<td>1970</td>
<td>414</td>
<td>471</td>
<td>5574</td>
<td>1</td>
</tr>
<tr class="even">
<td><strong>1</strong></td>
<td>0011-2</td>
<td>Town Mini-Figures</td>
<td>1978</td>
<td>84</td>
<td>12</td>
<td>5087</td>
<td>1</td>
</tr>
<tr class="odd">
<td><strong>2</strong></td>
<td>0011-3</td>
<td>Castle 2 for 1 Bonus Offer</td>
<td>1987</td>
<td>199</td>
<td>2</td>
<td>2216</td>
<td>1</td>
</tr>
<tr class="even">
<td><strong>3</strong></td>
<td>0012-1</td>
<td>Space Mini-Figures</td>
<td>1979</td>
<td>143</td>
<td>12</td>
<td>1414</td>
<td>1</td>
</tr>
<tr class="odd">
<td><strong>4</strong></td>
<td>0013-1</td>
<td>Space Mini-Figures</td>
<td>1979</td>
<td>143</td>
<td>12</td>
<td>4609</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>To see witch parts are needed for the <em>Pizzeria</em> we combine some tables. We look for the inventory of the set and gather all parts. Then we get color and part category information.</p>
<p>We end up with an inventory list:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb21-1"><span class="kw" style="color: #003B4F;">SELECT</span> s.set_num, </span>
<span id="cb21-2">       s.name set_name, </span>
<span id="cb21-3">       p.part_num, </span>
<span id="cb21-4">       p.name part_name, </span>
<span id="cb21-5">       ip.quantity,</span>
<span id="cb21-6">       c.name color,</span>
<span id="cb21-7">       pc.name part_cat</span>
<span id="cb21-8">  <span class="kw" style="color: #003B4F;">FROM</span> sets s,</span>
<span id="cb21-9">       inventories i,</span>
<span id="cb21-10">       inventory_parts ip,</span>
<span id="cb21-11">       parts p,</span>
<span id="cb21-12">       colors c,</span>
<span id="cb21-13">       part_categories pc</span>
<span id="cb21-14"> <span class="kw" style="color: #003B4F;">WHERE</span> s.set_num <span class="op" style="color: #5E5E5E;">=</span> i.set_num</span>
<span id="cb21-15">   <span class="kw" style="color: #003B4F;">AND</span> i.<span class="kw" style="color: #003B4F;">id</span> <span class="op" style="color: #5E5E5E;">=</span> ip.inventory_id</span>
<span id="cb21-16">   <span class="kw" style="color: #003B4F;">AND</span> ip.part_num <span class="op" style="color: #5E5E5E;">=</span> p.part_num</span>
<span id="cb21-17">   <span class="kw" style="color: #003B4F;">AND</span> ip.color_id <span class="op" style="color: #5E5E5E;">=</span> c.<span class="kw" style="color: #003B4F;">id</span></span>
<span id="cb21-18">   <span class="kw" style="color: #003B4F;">AND</span> p.part_cat_id <span class="op" style="color: #5E5E5E;">=</span> pc.<span class="kw" style="color: #003B4F;">id</span> </span>
<span id="cb21-19">   <span class="kw" style="color: #003B4F;">AND</span> s.set_num <span class="kw" style="color: #003B4F;">in</span> (<span class="st" style="color: #20794D;">'41311-1'</span>)</span>
<span id="cb21-20">   <span class="kw" style="color: #003B4F;">AND</span> i.version <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb21-21">   <span class="kw" style="color: #003B4F;">AND</span> ip.is_spare <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'f'</span></span>
<span id="cb21-22"> <span class="kw" style="color: #003B4F;">ORDER</span> <span class="kw" style="color: #003B4F;">BY</span> p.name, s.set_num, c.name</span>
<span id="cb21-23"><span class="kw" style="color: #003B4F;">LIMIT</span> <span class="dv" style="color: #AD0000;">10</span></span></code></pre></div>
<table class="table">
<colgroup>
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
</colgroup>
<thead>
<tr class="header">
<th>set_num</th>
<th>set_name</th>
<th>part_num</th>
<th>part_name</th>
<th>quantity</th>
<th>color</th>
<th>part_cat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>25269pr03</td>
<td>1/4 CIRCLE TILE 1X1 with Pizza Print</td>
<td>4</td>
<td>Tan</td>
<td>Tiles Printed</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>32807</td>
<td>BRICK 1X1X1 1/3, W/ ARCH</td>
<td>4</td>
<td>Red</td>
<td>Other</td>
</tr>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>6190</td>
<td>Bar 1 x 3 (Radio Handle, Phone Handset)</td>
<td>1</td>
<td>Red</td>
<td>Bars, Ladders and Fences</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>30374</td>
<td>Bar 4L (Lightsaber Blade / Wand)</td>
<td>1</td>
<td>Light Bluish Gray</td>
<td>Bars, Ladders and Fences</td>
</tr>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>99207</td>
<td>Bracket 1 x 2 - 2 x 2 Inverted</td>
<td>1</td>
<td>Black</td>
<td>Plates Special</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>2453b</td>
<td>Brick 1 x 1 x 5 with Solid Stud</td>
<td>4</td>
<td>Tan</td>
<td>Bricks</td>
</tr>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>3004</td>
<td>Brick 1 x 2</td>
<td>4</td>
<td>Light Bluish Gray</td>
<td>Bricks</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>3004</td>
<td>Brick 1 x 2</td>
<td>3</td>
<td>Tan</td>
<td>Bricks</td>
</tr>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>3004</td>
<td>Brick 1 x 2</td>
<td>1</td>
<td>White</td>
<td>Bricks</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>3245b</td>
<td>Brick 1 x 2 x 2 with Inside Axle Holder</td>
<td>2</td>
<td>White</td>
<td>Bricks</td>
</tr>
</tbody>
</table>
<p>Lets create a general <code>inventory_list</code> as view and make the statement more readable and comparable with ANSI-syntax (separating filters/predicates from join conditions).</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb22-1"><span class="kw" style="color: #003B4F;">DROP</span> <span class="kw" style="color: #003B4F;">VIEW</span> <span class="cf" style="color: #003B4F;">IF</span> <span class="kw" style="color: #003B4F;">EXISTS</span> inventory_list;</span>
<span id="cb22-2"><span class="kw" style="color: #003B4F;">CREATE</span> <span class="kw" style="color: #003B4F;">VIEW</span> inventory_list <span class="kw" style="color: #003B4F;">AS</span></span>
<span id="cb22-3"><span class="kw" style="color: #003B4F;">SELECT</span> s.set_num, </span>
<span id="cb22-4">       s.name set_name, </span>
<span id="cb22-5">       s.theme_id,</span>
<span id="cb22-6">       s.num_parts,</span>
<span id="cb22-7">       p.part_num, </span>
<span id="cb22-8">       ip.quantity,</span>
<span id="cb22-9">       p.name part_name, </span>
<span id="cb22-10">       c.name color,</span>
<span id="cb22-11">       pc.name part_cat</span>
<span id="cb22-12">  <span class="kw" style="color: #003B4F;">FROM</span> sets s</span>
<span id="cb22-13"> <span class="kw" style="color: #003B4F;">INNER</span> <span class="kw" style="color: #003B4F;">JOIN</span></span>
<span id="cb22-14">       inventories i</span>
<span id="cb22-15"> <span class="kw" style="color: #003B4F;">USING</span> (set_num)</span>
<span id="cb22-16"> <span class="kw" style="color: #003B4F;">INNER</span> <span class="kw" style="color: #003B4F;">JOIN</span></span>
<span id="cb22-17">       inventory_parts ip</span>
<span id="cb22-18">    <span class="kw" style="color: #003B4F;">ON</span> (i.<span class="kw" style="color: #003B4F;">id</span> <span class="op" style="color: #5E5E5E;">=</span> ip.inventory_id)</span>
<span id="cb22-19"> <span class="kw" style="color: #003B4F;">INNER</span> <span class="kw" style="color: #003B4F;">JOIN</span></span>
<span id="cb22-20">       parts p</span>
<span id="cb22-21"> <span class="kw" style="color: #003B4F;">USING</span> (part_num)</span>
<span id="cb22-22"> <span class="kw" style="color: #003B4F;">INNER</span> <span class="kw" style="color: #003B4F;">JOIN</span></span>
<span id="cb22-23">       colors c</span>
<span id="cb22-24">    <span class="kw" style="color: #003B4F;">ON</span> (ip.color_id <span class="op" style="color: #5E5E5E;">=</span> c.<span class="kw" style="color: #003B4F;">id</span>)</span>
<span id="cb22-25"> <span class="kw" style="color: #003B4F;">INNER</span> <span class="kw" style="color: #003B4F;">JOIN</span></span>
<span id="cb22-26">       part_categories pc</span>
<span id="cb22-27">    <span class="kw" style="color: #003B4F;">ON</span> (p.part_cat_id <span class="op" style="color: #5E5E5E;">=</span> pc.<span class="kw" style="color: #003B4F;">id</span>)</span>
<span id="cb22-28"> <span class="kw" style="color: #003B4F;">WHERE</span> i.version <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb22-29">   <span class="kw" style="color: #003B4F;">AND</span> ip.is_spare <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'f'</span>;</span></code></pre></div>
<p>Now we translate the view to Pandas. We see how the structure relates to sql. The parameter <code>how</code> defines the type of join (here: <code>inner</code>), <code>on</code> represents the <code>USING</code> clause whereas <code>left_on</code> and <code>right_on</code> stand for the SQL <code>ON</code> condition.</p>
<p>In SQL usually an optimizer defines based in rules or statistics the execution plan (the order in which the tables are accessed, combined and filtered). I’m not sure if Pandas follows a similar approache. To be safe, I assume the order and early column dropping might matter for performance and memory management.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">df_inventory_list <span class="op" style="color: #5E5E5E;">=</span> df_sets[[<span class="st" style="color: #20794D;">'set_num'</span>, <span class="st" style="color: #20794D;">'name'</span>, <span class="st" style="color: #20794D;">'theme_id'</span>, <span class="st" style="color: #20794D;">'num_parts'</span>]] <span class="op" style="color: #5E5E5E;">\</span></span>
<span id="cb23-2">                    .merge(</span>
<span id="cb23-3">                    df_inventories[df_inventories[<span class="st" style="color: #20794D;">'version'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">1</span>][[<span class="st" style="color: #20794D;">'id'</span>, <span class="st" style="color: #20794D;">'set_num'</span>]],</span>
<span id="cb23-4">                        how <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inner'</span>,</span>
<span id="cb23-5">                        on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'set_num'</span></span>
<span id="cb23-6">                    ) <span class="op" style="color: #5E5E5E;">\</span></span>
<span id="cb23-7">                    .merge(</span>
<span id="cb23-8">                    df_inventory_parts[df_inventory_parts[<span class="st" style="color: #20794D;">'is_spare'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'f'</span>][[<span class="st" style="color: #20794D;">'inventory_id'</span>, <span class="st" style="color: #20794D;">'part_num'</span>, <span class="st" style="color: #20794D;">'color_id'</span>, <span class="st" style="color: #20794D;">'quantity'</span>]],</span>
<span id="cb23-9">                        how <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inner'</span>,</span>
<span id="cb23-10">                        left_on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'id'</span>,</span>
<span id="cb23-11">                        right_on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inventory_id'</span></span>
<span id="cb23-12">                    ) <span class="op" style="color: #5E5E5E;">\</span></span>
<span id="cb23-13">                    .merge(</span>
<span id="cb23-14">                    df_parts[[<span class="st" style="color: #20794D;">'part_num'</span>, <span class="st" style="color: #20794D;">'name'</span>, <span class="st" style="color: #20794D;">'part_cat_id'</span>]],</span>
<span id="cb23-15">                        how <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inner'</span>,</span>
<span id="cb23-16">                        on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'part_num'</span></span>
<span id="cb23-17">                    ) <span class="op" style="color: #5E5E5E;">\</span></span>
<span id="cb23-18">                    .merge(</span>
<span id="cb23-19">                    df_colors[[<span class="st" style="color: #20794D;">'id'</span>, <span class="st" style="color: #20794D;">'name'</span>]],</span>
<span id="cb23-20">                        how <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inner'</span>,</span>
<span id="cb23-21">                        left_on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'color_id'</span>,</span>
<span id="cb23-22">                        right_on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'id'</span></span>
<span id="cb23-23">                    ) <span class="op" style="color: #5E5E5E;">\</span></span>
<span id="cb23-24">                    .merge(</span>
<span id="cb23-25">                    df_part_categories[[<span class="st" style="color: #20794D;">'id'</span>, <span class="st" style="color: #20794D;">'name'</span>]],</span>
<span id="cb23-26">                        how <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inner'</span>,</span>
<span id="cb23-27">                        left_on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'part_cat_id'</span>,</span>
<span id="cb23-28">                        right_on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'id'</span></span>
<span id="cb23-29">                    )</span>
<span id="cb23-30"></span>
<span id="cb23-31"><span class="co" style="color: #5E5E5E;"># remove some columns and use index as row number (reset_index)</span></span>
<span id="cb23-32">df_inventory_list <span class="op" style="color: #5E5E5E;">=</span> df_inventory_list.drop([<span class="st" style="color: #20794D;">'id_x'</span>, <span class="st" style="color: #20794D;">'inventory_id'</span>, <span class="st" style="color: #20794D;">'color_id'</span>, <span class="st" style="color: #20794D;">'part_cat_id'</span>, <span class="st" style="color: #20794D;">'id_y'</span>, <span class="st" style="color: #20794D;">'id'</span>], axis <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span>).reset_index(drop <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>)</span>
<span id="cb23-33"></span>
<span id="cb23-34"><span class="co" style="color: #5E5E5E;"># rename columns</span></span>
<span id="cb23-35">df_inventory_list.columns <span class="op" style="color: #5E5E5E;">=</span> [<span class="st" style="color: #20794D;">'set_num'</span>, <span class="st" style="color: #20794D;">'set_name'</span>, <span class="st" style="color: #20794D;">'theme_id'</span>, <span class="st" style="color: #20794D;">'num_parts'</span>, <span class="st" style="color: #20794D;">'part_num'</span>, <span class="st" style="color: #20794D;">'quantity'</span>, <span class="st" style="color: #20794D;">'part_name'</span>, <span class="st" style="color: #20794D;">'color'</span>, <span class="st" style="color: #20794D;">'part_cat'</span>]</span></code></pre></div>
<p>Lots of code here. So we better check if our Pandas code matches the results of our SQL code.</p>
<p>Select the inventory list for our example, write it to a DataFrame (<code>df_test_from_sql</code>) and compare the results.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb24-1">df_test_from_sql <span class="op" style="color: #5E5E5E;">&lt;&lt;</span></span>
<span id="cb24-2"><span class="kw" style="color: #003B4F;">SELECT</span> il.<span class="op" style="color: #5E5E5E;">*</span> </span>
<span id="cb24-3">  <span class="kw" style="color: #003B4F;">FROM</span> inventory_list il</span>
<span id="cb24-4"> <span class="kw" style="color: #003B4F;">WHERE</span> il.set_num <span class="kw" style="color: #003B4F;">in</span> (<span class="st" style="color: #20794D;">'41311-1'</span>)</span>
<span id="cb24-5"> <span class="kw" style="color: #003B4F;">ORDER</span> <span class="kw" style="color: #003B4F;">BY</span> </span>
<span id="cb24-6">       il.part_name, </span>
<span id="cb24-7">       il.set_num, </span>
<span id="cb24-8">       il.color</span>
<span id="cb24-9"><span class="kw" style="color: #003B4F;">LIMIT</span> <span class="dv" style="color: #AD0000;">10</span>;</span></code></pre></div>
<table class="table">
<colgroup>
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
</colgroup>
<thead>
<tr class="header">
<th>set_num</th>
<th>set_name</th>
<th>theme_id</th>
<th>num_parts</th>
<th>part_num</th>
<th>quantity</th>
<th>part_name</th>
<th>color</th>
<th>part_cat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>25269pr03</td>
<td>4</td>
<td>1/4 CIRCLE TILE 1X1 with Pizza Print</td>
<td>Tan</td>
<td>Tiles Printed</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>32807</td>
<td>4</td>
<td>BRICK 1X1X1 1/3, W/ ARCH</td>
<td>Red</td>
<td>Other</td>
</tr>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>6190</td>
<td>1</td>
<td>Bar 1 x 3 (Radio Handle, Phone Handset)</td>
<td>Red</td>
<td>Bars, Ladders and Fences</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>30374</td>
<td>1</td>
<td>Bar 4L (Lightsaber Blade / Wand)</td>
<td>Light Bluish Gray</td>
<td>Bars, Ladders and Fences</td>
</tr>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>99207</td>
<td>1</td>
<td>Bracket 1 x 2 - 2 x 2 Inverted</td>
<td>Black</td>
<td>Plates Special</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>2453b</td>
<td>4</td>
<td>Brick 1 x 1 x 5 with Solid Stud</td>
<td>Tan</td>
<td>Bricks</td>
</tr>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3004</td>
<td>4</td>
<td>Brick 1 x 2</td>
<td>Light Bluish Gray</td>
<td>Bricks</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3004</td>
<td>3</td>
<td>Brick 1 x 2</td>
<td>Tan</td>
<td>Bricks</td>
</tr>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3004</td>
<td>1</td>
<td>Brick 1 x 2</td>
<td>White</td>
<td>Bricks</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3245b</td>
<td>2</td>
<td>Brick 1 x 2 x 2 with Inside Axle Holder</td>
<td>White</td>
<td>Bricks</td>
</tr>
</tbody>
</table>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;"># test</span></span>
<span id="cb25-2">df_test_from_df <span class="op" style="color: #5E5E5E;">=</span> df_inventory_list[df_inventory_list[<span class="st" style="color: #20794D;">'set_num'</span>].isin([<span class="st" style="color: #20794D;">'41311-1'</span>])].sort_values(by<span class="op" style="color: #5E5E5E;">=</span>[<span class="st" style="color: #20794D;">'part_name'</span>, <span class="st" style="color: #20794D;">'set_num'</span>, <span class="st" style="color: #20794D;">'color'</span>]).head(<span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb25-3"></span>
<span id="cb25-4">df_test_from_df</span></code></pre></div>
<table class="table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>set_name</th>
<th>theme_id</th>
<th>num_parts</th>
<th>part_num</th>
<th>quantity</th>
<th>part_name</th>
<th>color</th>
<th>part_cat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>507161</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>25269pr03</td>
<td>4</td>
<td>1/4 CIRCLE TILE 1X1 with Pizza Print</td>
<td>Tan</td>
<td>Tiles Printed</td>
</tr>
<tr class="even">
<td><strong>543292</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>32807</td>
<td>4</td>
<td>BRICK 1X1X1 1/3, W/ ARCH</td>
<td>Red</td>
<td>Other</td>
</tr>
<tr class="odd">
<td><strong>266022</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>6190</td>
<td>1</td>
<td>Bar 1 x 3 (Radio Handle, Phone Handset)</td>
<td>Red</td>
<td>Bars, Ladders and Fences</td>
</tr>
<tr class="even">
<td><strong>273113</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>30374</td>
<td>1</td>
<td>Bar 4L (Lightsaber Blade / Wand)</td>
<td>Light Bluish Gray</td>
<td>Bars, Ladders and Fences</td>
</tr>
<tr class="odd">
<td><strong>306863</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>99207</td>
<td>1</td>
<td>Bracket 1 x 2 - 2 x 2 Inverted</td>
<td>Black</td>
<td>Plates Special</td>
</tr>
<tr class="even">
<td><strong>47206</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>2453b</td>
<td>4</td>
<td>Brick 1 x 1 x 5 with Solid Stud</td>
<td>Tan</td>
<td>Bricks</td>
</tr>
<tr class="odd">
<td><strong>50211</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3004</td>
<td>4</td>
<td>Brick 1 x 2</td>
<td>Light Bluish Gray</td>
<td>Bricks</td>
</tr>
<tr class="even">
<td><strong>45716</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3004</td>
<td>3</td>
<td>Brick 1 x 2</td>
<td>Tan</td>
<td>Bricks</td>
</tr>
<tr class="odd">
<td><strong>16485</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3004</td>
<td>1</td>
<td>Brick 1 x 2</td>
<td>White</td>
<td>Bricks</td>
</tr>
<tr class="even">
<td><strong>22890</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3245b</td>
<td>2</td>
<td>Brick 1 x 2 x 2 with Inside Axle Holder</td>
<td>White</td>
<td>Bricks</td>
</tr>
</tbody>
</table>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;"># assert equals</span></span>
<span id="cb26-2"><span class="cf" style="color: #003B4F;">if</span> <span class="kw" style="color: #003B4F;">not</span> USE_BIGQUERY:</span>
<span id="cb26-3">    df_test_from_sql <span class="op" style="color: #5E5E5E;">=</span> df_test_from_sql.DataFrame()</span>
<span id="cb26-4">    </span>
<span id="cb26-5">pd._testing.assert_frame_equal(df_test_from_sql, df_test_from_df.reset_index(drop <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>))</span></code></pre></div>
<p>The results are equal as expected.</p>
<p>Since we are only interested in the red bricks we create a list of those missing parts.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb27-1"><span class="kw" style="color: #003B4F;">SELECT</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb27-2">  <span class="kw" style="color: #003B4F;">FROM</span> inventory_list il</span>
<span id="cb27-3"> <span class="kw" style="color: #003B4F;">WHERE</span> il.set_num <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'41311-1'</span></span>
<span id="cb27-4">   <span class="kw" style="color: #003B4F;">AND</span> part_cat <span class="kw" style="color: #003B4F;">like</span> <span class="st" style="color: #20794D;">'%Brick%'</span></span>
<span id="cb27-5">   <span class="kw" style="color: #003B4F;">AND</span> color <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'Red'</span></span>
<span id="cb27-6"> <span class="kw" style="color: #003B4F;">ORDER</span> <span class="kw" style="color: #003B4F;">BY</span> </span>
<span id="cb27-7">       il.color, </span>
<span id="cb27-8">       il.part_name, </span>
<span id="cb27-9">       il.set_num;</span></code></pre></div>
<table class="table">
<colgroup>
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
</colgroup>
<thead>
<tr class="header">
<th>set_num</th>
<th>set_name</th>
<th>theme_id</th>
<th>num_parts</th>
<th>part_num</th>
<th>quantity</th>
<th>part_name</th>
<th>color</th>
<th>part_cat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3039</td>
<td>1</td>
<td>Slope 45° 2 x 2</td>
<td>Red</td>
<td>Bricks Sloped</td>
</tr>
<tr class="even">
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3045</td>
<td>2</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>Red</td>
<td>Bricks Sloped</td>
</tr>
</tbody>
</table>
<p>We need to watchout for the brackets when combining filters in DataFrames.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">df_missing_parts <span class="op" style="color: #5E5E5E;">=</span> df_inventory_list[(df_inventory_list[<span class="st" style="color: #20794D;">'set_num'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'41311-1'</span>) <span class="op" style="color: #5E5E5E;">&amp;</span> </span>
<span id="cb28-2">                                     (df_inventory_list[<span class="st" style="color: #20794D;">'part_cat'</span>].<span class="bu" style="color: null;">str</span>.contains(<span class="st" style="color: #20794D;">"Brick"</span>)) <span class="op" style="color: #5E5E5E;">&amp;</span></span>
<span id="cb28-3">                                     (df_inventory_list[<span class="st" style="color: #20794D;">'color'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'Red'</span>)</span>
<span id="cb28-4">                                    ].sort_values(by<span class="op" style="color: #5E5E5E;">=</span>[<span class="st" style="color: #20794D;">'color'</span>, <span class="st" style="color: #20794D;">'part_name'</span>, <span class="st" style="color: #20794D;">'set_num'</span>]).reset_index(drop <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>)</span>
<span id="cb28-5"></span>
<span id="cb28-6">df_missing_parts</span></code></pre></div>
<table class="table">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>set_name</th>
<th>theme_id</th>
<th>num_parts</th>
<th>part_num</th>
<th>quantity</th>
<th>part_name</th>
<th>color</th>
<th>part_cat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>0</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3039</td>
<td>1</td>
<td>Slope 45° 2 x 2</td>
<td>Red</td>
<td>Bricks Sloped</td>
</tr>
<tr class="even">
<td><strong>1</strong></td>
<td>41311-1</td>
<td>Heartlake Pizzeria</td>
<td>494</td>
<td>287</td>
<td>3045</td>
<td>2</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>Red</td>
<td>Bricks Sloped</td>
</tr>
</tbody>
</table>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/penguin.png" class="img-fluid">: <em>There we go, we are missing one 2x2 brick and tw0 2x2 double convex.</em></p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/chick.png" class="img-fluid">: <em>Yup, that’s the roof of the fireplace. I knew that before.</em></p>
</section>
<section id="conditional-joins-and-aggregation-almost-done" class="level1">
<h1>Conditional Joins and Aggregation <em>(Almost done!)</em></h1>
<p>Next we search for sets that contain the missing parts. The quantity of the parts in the found sets must be greater or equal the quantity of the missing parts.</p>
<p>In SQL it is done with an <strong>conditional join</strong> <code>il.quantity &gt;= mp.quantity</code>.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb29-1">sets_with_missing_parts <span class="op" style="color: #5E5E5E;">&lt;&lt;</span> </span>
<span id="cb29-2"></span>
<span id="cb29-3"><span class="co" style="color: #5E5E5E;">-- A list of missing parts</span></span>
<span id="cb29-4"></span>
<span id="cb29-5"><span class="kw" style="color: #003B4F;">WITH</span> missing_parts <span class="kw" style="color: #003B4F;">AS</span> (</span>
<span id="cb29-6">  <span class="kw" style="color: #003B4F;">SELECT</span> il.set_name,</span>
<span id="cb29-7">         il.part_num, </span>
<span id="cb29-8">         il.part_name,</span>
<span id="cb29-9">         il.color,</span>
<span id="cb29-10">         il.quantity</span>
<span id="cb29-11">    <span class="kw" style="color: #003B4F;">FROM</span> inventory_list il</span>
<span id="cb29-12">   <span class="kw" style="color: #003B4F;">WHERE</span> il.set_num <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'41311-1'</span></span>
<span id="cb29-13">     <span class="kw" style="color: #003B4F;">AND</span> il.part_cat <span class="kw" style="color: #003B4F;">like</span> <span class="st" style="color: #20794D;">'%Brick%'</span></span>
<span id="cb29-14">     <span class="kw" style="color: #003B4F;">AND</span> il.color <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'Red'</span></span>
<span id="cb29-15">)</span>
<span id="cb29-16"></span>
<span id="cb29-17"><span class="co" style="color: #5E5E5E;">-- Looking for set that contains as much of the missing parts as needed</span></span>
<span id="cb29-18"></span>
<span id="cb29-19"><span class="kw" style="color: #003B4F;">SELECT</span> mp.set_name <span class="kw" style="color: #003B4F;">as</span> searching_for_set,</span>
<span id="cb29-20">       il.set_num, </span>
<span id="cb29-21">       il.set_name, </span>
<span id="cb29-22">       il.part_name,</span>
<span id="cb29-23">       <span class="co" style="color: #5E5E5E;">-- total number of parts per set</span></span>
<span id="cb29-24">       il.num_parts,</span>
<span id="cb29-25">       <span class="co" style="color: #5E5E5E;">-- how many of the missing parts were found in the set </span></span>
<span id="cb29-26">       <span class="fu" style="color: #4758AB;">COUNT</span>(<span class="op" style="color: #5E5E5E;">*</span>) <span class="kw" style="color: #003B4F;">OVER</span> (<span class="kw" style="color: #003B4F;">PARTITION</span> <span class="kw" style="color: #003B4F;">BY</span> il.set_num) <span class="kw" style="color: #003B4F;">AS</span> matches_per_set</span>
<span id="cb29-27">  <span class="kw" style="color: #003B4F;">FROM</span> inventory_list il</span>
<span id="cb29-28"> <span class="kw" style="color: #003B4F;">INNER</span> <span class="kw" style="color: #003B4F;">JOIN</span></span>
<span id="cb29-29">       missing_parts mp</span>
<span id="cb29-30">    <span class="kw" style="color: #003B4F;">ON</span> (il.part_num <span class="op" style="color: #5E5E5E;">=</span> mp.part_num</span>
<span id="cb29-31">        <span class="kw" style="color: #003B4F;">AND</span> il.color <span class="op" style="color: #5E5E5E;">=</span> mp.color</span>
<span id="cb29-32">        <span class="co" style="color: #5E5E5E;">-- searching for a set that contains at least as much parts as there are missing</span></span>
<span id="cb29-33">        <span class="kw" style="color: #003B4F;">AND</span> il.quantity <span class="op" style="color: #5E5E5E;">&gt;=</span> mp.quantity</span>
<span id="cb29-34">       )</span>
<span id="cb29-35"> <span class="co" style="color: #5E5E5E;">-- don't search in the Pizzeria set</span></span>
<span id="cb29-36"> <span class="kw" style="color: #003B4F;">WHERE</span> il.set_num <span class="op" style="color: #5E5E5E;">&lt;&gt;</span> <span class="st" style="color: #20794D;">'41311-1'</span></span>
<span id="cb29-37"> <span class="co" style="color: #5E5E5E;">-- prioritize sets with all the missing parts and as few parts as possible</span></span>
<span id="cb29-38"> <span class="kw" style="color: #003B4F;">ORDER</span> <span class="kw" style="color: #003B4F;">BY</span> </span>
<span id="cb29-39">       matches_per_set <span class="kw" style="color: #003B4F;">DESC</span>, </span>
<span id="cb29-40">       il.num_parts, </span>
<span id="cb29-41">       il.set_num,</span>
<span id="cb29-42">       il.part_name</span>
<span id="cb29-43"><span class="kw" style="color: #003B4F;">LIMIT</span> <span class="dv" style="color: #AD0000;">16</span></span></code></pre></div>
<section id="conditional-join" class="level2">
<h2 class="anchored" data-anchor-id="conditional-join">Conditional Join</h2>
<p>There is no intuitive way to do a conditional join on DataFrames. The easiest I’ve <a href="https://stackoverflow.com/questions/23508351/how-to-do-workaround-a-conditional-join-in-python-pandas">seen</a> so far is a two step solution. As substitution for the SQL <code>WITH</code>-clause we can reuse <code>df_missing_parts</code>.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;"># 1. merge on the equal conditions</span></span>
<span id="cb30-2">df_sets_with_missing_parts <span class="op" style="color: #5E5E5E;">=</span> df_inventory_list.merge(df_missing_parts, how <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'inner'</span>, on <span class="op" style="color: #5E5E5E;">=</span> [<span class="st" style="color: #20794D;">'part_num'</span>, <span class="st" style="color: #20794D;">'color'</span>], suffixes <span class="op" style="color: #5E5E5E;">=</span> (<span class="st" style="color: #20794D;">'_found'</span>, <span class="st" style="color: #20794D;">'_missing'</span>))</span>
<span id="cb30-3"><span class="co" style="color: #5E5E5E;"># 2. apply filter for the qreater equals condition</span></span>
<span id="cb30-4">df_sets_with_missing_parts <span class="op" style="color: #5E5E5E;">=</span> df_sets_with_missing_parts[df_sets_with_missing_parts[<span class="st" style="color: #20794D;">'quantity_found'</span>] <span class="op" style="color: #5E5E5E;">&gt;=</span> df_sets_with_missing_parts[<span class="st" style="color: #20794D;">'quantity_missing'</span>]]</span>
<span id="cb30-5"></span>
<span id="cb30-6"><span class="co" style="color: #5E5E5E;"># select columns</span></span>
<span id="cb30-7">cols <span class="op" style="color: #5E5E5E;">=</span> [<span class="st" style="color: #20794D;">'set_num'</span>, <span class="st" style="color: #20794D;">'set_name'</span>, <span class="st" style="color: #20794D;">'part_name'</span>, <span class="st" style="color: #20794D;">'num_parts'</span>]</span>
<span id="cb30-8">df_sets_with_missing_parts <span class="op" style="color: #5E5E5E;">=</span> df_sets_with_missing_parts[[<span class="st" style="color: #20794D;">'set_name_missing'</span>] <span class="op" style="color: #5E5E5E;">+</span> [c <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">'_found'</span> <span class="cf" style="color: #003B4F;">for</span> c <span class="kw" style="color: #003B4F;">in</span> cols]]</span>
<span id="cb30-9">df_sets_with_missing_parts.columns <span class="op" style="color: #5E5E5E;">=</span> [<span class="st" style="color: #20794D;">'searching_for_set'</span>] <span class="op" style="color: #5E5E5E;">+</span> cols</span></code></pre></div>
</section>
<section id="aggregation" class="level2">
<h2 class="anchored" data-anchor-id="aggregation">Aggregation</h2>
<p>In the next step the aggregation of the analytic function</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb31-1"><span class="fu" style="color: #4758AB;">COUNT</span>(<span class="op" style="color: #5E5E5E;">*</span>) <span class="kw" style="color: #003B4F;">OVER</span> (<span class="kw" style="color: #003B4F;">PARTITION</span> <span class="kw" style="color: #003B4F;">BY</span> il.set_num) matches_per_set</span></code></pre></div>
<p>needs to be calculated. Hence the number of not-NaN values will be counted per <code>SET_NUM</code> group and assigned to each row in a new column (<code>matches_per_set</code>).</p>
<p>But before translating the analytic function, let’s have a look at a regular aggregation, first. Say, we simply want to count the entries per <code>set_num</code> on group level (without assigning the results back to the original group entries) and also sum up all parts of a group. Then the SQL would look something like this:</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb32-1"><span class="kw" style="color: #003B4F;">SELECT</span> s.set_num,</span>
<span id="cb32-2">       <span class="fu" style="color: #4758AB;">COUNT</span>(<span class="op" style="color: #5E5E5E;">*</span>) <span class="kw" style="color: #003B4F;">AS</span> matches_per_set</span>
<span id="cb32-3">       <span class="fu" style="color: #4758AB;">SUM</span>(s.num_parts) <span class="kw" style="color: #003B4F;">AS</span> total_num_parts</span>
<span id="cb32-4">  <span class="kw" style="color: #003B4F;">FROM</span> <span class="op" style="color: #5E5E5E;">..</span>.</span>
<span id="cb32-5"> <span class="kw" style="color: #003B4F;">WHERE</span> <span class="op" style="color: #5E5E5E;">..</span>.</span>
<span id="cb32-6"> <span class="kw" style="color: #003B4F;">GROUP</span> <span class="kw" style="color: #003B4F;">BY</span> </span>
<span id="cb32-7">       s.set_num;</span></code></pre></div>
<p>All selected columns must either be aggregated by a function (<code>COUNT</code>, <code>SUM</code>) or defined as a group (<code>GROUP BY</code>). The result is a two column list with the group <code>set_num</code> and the aggregations <code>matches_per_set</code> and <code>total_num_part</code>.</p>
<p>Now see how the counting is done with Pandas.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">df_sets_with_missing_parts.groupby([<span class="st" style="color: #20794D;">'set_num'</span>]).count()  .sort_values(<span class="st" style="color: #20794D;">'set_num'</span>, ascending <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>)</span>
<span id="cb33-2"></span>
<span id="cb33-3"><span class="co" style="color: #5E5E5E;"># for sum and count:</span></span>
<span id="cb33-4"><span class="co" style="color: #5E5E5E;"># df_sets_with_missing_parts.groupby(['set_num']).agg(['count', 'sum']) </span></span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>searching_for_set</th>
<th>set_name</th>
<th>part_name</th>
<th>num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>set_num</strong></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>llca8-1</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="odd">
<td><strong>llca21-1</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td><strong>fruit1-1</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="odd">
<td><strong>MMMB026-1</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td><strong>MMMB003-1</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="odd">
<td><strong>…</strong></td>
<td>…</td>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
<tr class="even">
<td><strong>10021-1</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="odd">
<td><strong>088-1</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td><strong>080-1</strong></td>
<td>2</td>
<td>2</td>
<td>2</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>066-1</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td><strong>00-4</strong></td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>Wow, that’s different! The aggregation function is applied to every column independently and the group is set as row index. But it is also possible to define the aggregation function for each column explicitly like in SQL:</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">df_sets_with_missing_parts.groupby([<span class="st" style="color: #20794D;">'set_num'</span>], as_index <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>) <span class="op" style="color: #5E5E5E;">\</span></span>
<span id="cb34-2">    .agg(matches_per_set <span class="op" style="color: #5E5E5E;">=</span> pd.NamedAgg(column <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"set_num"</span>, aggfunc <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"count"</span>), </span>
<span id="cb34-3">         total_num_parts <span class="op" style="color: #5E5E5E;">=</span> pd.NamedAgg(column <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"num_parts"</span>, aggfunc <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"sum"</span>))</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>set_num</th>
<th>matches_per_set</th>
<th>total_num_parts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>0</strong></td>
<td>00-4</td>
<td>1</td>
<td>126</td>
</tr>
<tr class="even">
<td><strong>1</strong></td>
<td>066-1</td>
<td>1</td>
<td>407</td>
</tr>
<tr class="odd">
<td><strong>2</strong></td>
<td>080-1</td>
<td>2</td>
<td>1420</td>
</tr>
<tr class="even">
<td><strong>3</strong></td>
<td>088-1</td>
<td>1</td>
<td>615</td>
</tr>
<tr class="odd">
<td><strong>4</strong></td>
<td>10021-1</td>
<td>1</td>
<td>974</td>
</tr>
<tr class="even">
<td><strong>…</strong></td>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
<tr class="odd">
<td><strong>463</strong></td>
<td>MMMB003-1</td>
<td>1</td>
<td>15</td>
</tr>
<tr class="even">
<td><strong>464</strong></td>
<td>MMMB026-1</td>
<td>1</td>
<td>43</td>
</tr>
<tr class="odd">
<td><strong>465</strong></td>
<td>fruit1-1</td>
<td>1</td>
<td>8</td>
</tr>
<tr class="even">
<td><strong>466</strong></td>
<td>llca21-1</td>
<td>1</td>
<td>42</td>
</tr>
<tr class="odd">
<td><strong>467</strong></td>
<td>llca8-1</td>
<td>1</td>
<td>58</td>
</tr>
</tbody>
</table>
<p>This looks more familiar. With the <code>as_index</code> argument the group becomes a column (rather than a row index).</p>
<p>So, now we return to our initial task translating the <code>COUNT(*) OVER(PARTITION BY)</code> clause. One approach could be to join the results of the above aggregated DataFrame with the origanal DataFrame, like</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">df_sets_with_missing_parts.merge(my_agg_df, on <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'set_num'</span>)</span></code></pre></div>
<p>A more common why is to use the <code>transform()</code> function:</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;"># add aggregatiom</span></span>
<span id="cb36-2">df_sets_with_missing_parts[<span class="st" style="color: #20794D;">'matches_per_set'</span>] <span class="op" style="color: #5E5E5E;">=</span> df_sets_with_missing_parts.groupby([<span class="st" style="color: #20794D;">'set_num'</span>])[<span class="st" style="color: #20794D;">'part_name'</span>].transform(<span class="st" style="color: #20794D;">'count'</span>)</span>
<span id="cb36-3"></span>
<span id="cb36-4">df_sets_with_missing_parts.head(<span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
<table class="table">
<colgroup>
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>searching_for_set</th>
<th>set_num</th>
<th>set_name</th>
<th>part_name</th>
<th>num_parts</th>
<th>matches_per_set</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>0</strong></td>
<td>Heartlake Pizzeria</td>
<td>00-4</td>
<td>Weetabix Promotional Windmill</td>
<td>Slope 45° 2 x 2</td>
<td>126</td>
<td>1</td>
</tr>
<tr class="even">
<td><strong>1</strong></td>
<td>Heartlake Pizzeria</td>
<td>066-1</td>
<td>Basic Building Set</td>
<td>Slope 45° 2 x 2</td>
<td>407</td>
<td>1</td>
</tr>
<tr class="odd">
<td><strong>2</strong></td>
<td>Heartlake Pizzeria</td>
<td>080-1</td>
<td>Basic Building Set with Train</td>
<td>Slope 45° 2 x 2</td>
<td>710</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>3</strong></td>
<td>Heartlake Pizzeria</td>
<td>088-1</td>
<td>Super Set</td>
<td>Slope 45° 2 x 2</td>
<td>615</td>
<td>1</td>
</tr>
<tr class="odd">
<td><strong>4</strong></td>
<td>Heartlake Pizzeria</td>
<td>10021-1</td>
<td>U.S.S. Constellation</td>
<td>Slope 45° 2 x 2</td>
<td>974</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>Let’s elaborate the magic that’s happening.</p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">df_sets_with_missing_parts.groupby([<span class="st" style="color: #20794D;">'set_num'</span>])[<span class="st" style="color: #20794D;">'part_name'</span>]</span></code></pre></div>
<p>returns a <code>GroupByDataFrame</code> which contains the group names (from <code>set_num</code>) and all row/column indicies and values related to the groups. Here only one column <code>['part_name']</code> is selected. In the next step <a href="https://github.com/pandas-dev/pandas/blob/v1.1.4/pandas/core/groupby/generic.py#L514"><code>transform</code> applies</a> the given function (<code>count</code>) to each column individually but only with the values in the current group. Finaly the results are assigned to each row in the group as shown in Fig. 4.</p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/trnsf.png" class="img-fluid"></p>
<p>Fig. 4: Aggregation with transform</p>
<p>Now that we have gathered all the data we arange the results so that they can be compared to the SQL data:</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="co" style="color: #5E5E5E;"># sort and pick top 16</span></span>
<span id="cb38-2">df_sets_with_missing_parts <span class="op" style="color: #5E5E5E;">=</span> df_sets_with_missing_parts.sort_values([<span class="st" style="color: #20794D;">'matches_per_set'</span>, <span class="st" style="color: #20794D;">'num_parts'</span>, <span class="st" style="color: #20794D;">'set_num'</span>, <span class="st" style="color: #20794D;">'part_name'</span>], ascending <span class="op" style="color: #5E5E5E;">=</span> [<span class="va" style="color: #111111;">False</span>, <span class="va" style="color: #111111;">True</span>, <span class="va" style="color: #111111;">True</span>, <span class="va" style="color: #111111;">True</span>]).reset_index(drop <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>).head(<span class="dv" style="color: #AD0000;">16</span>)</span>
<span id="cb38-3"></span>
<span id="cb38-4">df_sets_with_missing_parts</span></code></pre></div>
<table class="table">
<colgroup>
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>searching_for_set</th>
<th>set_num</th>
<th>set_name</th>
<th>part_name</th>
<th>num_parts</th>
<th>matches_per_set</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>0</strong></td>
<td>Heartlake Pizzeria</td>
<td>199-1</td>
<td>Scooter</td>
<td>Slope 45° 2 x 2</td>
<td>41</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>1</strong></td>
<td>Heartlake Pizzeria</td>
<td>199-1</td>
<td>Scooter</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>41</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>2</strong></td>
<td>Heartlake Pizzeria</td>
<td>212-2</td>
<td>Scooter</td>
<td>Slope 45° 2 x 2</td>
<td>41</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>3</strong></td>
<td>Heartlake Pizzeria</td>
<td>212-2</td>
<td>Scooter</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>41</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>4</strong></td>
<td>Heartlake Pizzeria</td>
<td>838-1</td>
<td>Red Roof Bricks Parts Pack, 45 Degree</td>
<td>Slope 45° 2 x 2</td>
<td>58</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>5</strong></td>
<td>Heartlake Pizzeria</td>
<td>838-1</td>
<td>Red Roof Bricks Parts Pack, 45 Degree</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>58</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>6</strong></td>
<td>Heartlake Pizzeria</td>
<td>5151-1</td>
<td>Roof Bricks, Red, 45 Degrees</td>
<td>Slope 45° 2 x 2</td>
<td>59</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>7</strong></td>
<td>Heartlake Pizzeria</td>
<td>5151-1</td>
<td>Roof Bricks, Red, 45 Degrees</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>59</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>8</strong></td>
<td>Heartlake Pizzeria</td>
<td>811-1</td>
<td>Red Roof Bricks, Steep Pitch</td>
<td>Slope 45° 2 x 2</td>
<td>59</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>9</strong></td>
<td>Heartlake Pizzeria</td>
<td>811-1</td>
<td>Red Roof Bricks, Steep Pitch</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>59</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>10</strong></td>
<td>Heartlake Pizzeria</td>
<td>663-1</td>
<td>Hovercraft</td>
<td>Slope 45° 2 x 2</td>
<td>60</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>11</strong></td>
<td>Heartlake Pizzeria</td>
<td>663-1</td>
<td>Hovercraft</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>60</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>12</strong></td>
<td>Heartlake Pizzeria</td>
<td>336-1</td>
<td>Fire Engine</td>
<td>Slope 45° 2 x 2</td>
<td>76</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>13</strong></td>
<td>Heartlake Pizzeria</td>
<td>336-1</td>
<td>Fire Engine</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>76</td>
<td>2</td>
</tr>
<tr class="odd">
<td><strong>14</strong></td>
<td>Heartlake Pizzeria</td>
<td>6896-1</td>
<td>Celestial Forager</td>
<td>Slope 45° 2 x 2</td>
<td>92</td>
<td>2</td>
</tr>
<tr class="even">
<td><strong>15</strong></td>
<td>Heartlake Pizzeria</td>
<td>6896-1</td>
<td>Celestial Forager</td>
<td>Slope 45° 2 x 2 Double Convex</td>
<td>92</td>
<td>2</td>
</tr>
</tbody>
</table>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="co" style="color: #5E5E5E;"># assert equals</span></span>
<span id="cb39-2"><span class="cf" style="color: #003B4F;">if</span> <span class="kw" style="color: #003B4F;">not</span> USE_BIGQUERY:</span>
<span id="cb39-3">    sets_with_missing_parts <span class="op" style="color: #5E5E5E;">=</span> sets_with_missing_parts.DataFrame()</span>
<span id="cb39-4">    </span>
<span id="cb39-5">pd._testing.assert_frame_equal(sets_with_missing_parts, df_sets_with_missing_parts)</span></code></pre></div>
<p>The results are matching!</p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/penguin.png" class="img-fluid">: We got it. We can buy the small Fire Engine to fix the roof of the fireplace. Now need for a new Pizzeria. :-)</p>
<p><img src="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/chick.png" class="img-fluid">: (#@§?!*#) Are you sure your data is usefull for anything?</p>
</section>
</section>
<section id="recursion-lost-in-trees" class="level1">
<h1>Recursion <em>(Lost in trees?)</em></h1>
<p>We solved the red brick problem. But since we have the data already open, let’s have a closer look at the <em>Fire Engine</em>, set number <em>336-1</em>.</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb40-1"><span class="kw" style="color: #003B4F;">SELECT</span> s.name <span class="kw" style="color: #003B4F;">AS</span> set_name,</span>
<span id="cb40-2">       s.<span class="dt" style="color: #AD0000;">year</span>,</span>
<span id="cb40-3">       t.<span class="kw" style="color: #003B4F;">id</span>,</span>
<span id="cb40-4">       t.name <span class="kw" style="color: #003B4F;">AS</span> theme_name,</span>
<span id="cb40-5">       t.parent_id</span>
<span id="cb40-6">  <span class="kw" style="color: #003B4F;">FROM</span> sets s,</span>
<span id="cb40-7">       themes t</span>
<span id="cb40-8"> <span class="kw" style="color: #003B4F;">WHERE</span> t.<span class="kw" style="color: #003B4F;">id</span> <span class="op" style="color: #5E5E5E;">=</span> s.theme_id</span>
<span id="cb40-9">   <span class="kw" style="color: #003B4F;">AND</span> s.set_num <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'336-1'</span>;</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th>set_name</th>
<th>year</th>
<th>id</th>
<th>theme_name</th>
<th>parent_id</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Fire Engine</td>
<td>1968</td>
<td>376</td>
<td>Fire</td>
<td>373.0</td>
</tr>
</tbody>
</table>
<p>The <em>fire engine</em> is quiet old (from 1968) and it belongs to the theme <em>Fire</em>. The <code>themes</code> table also includes as column called <code>parent_id</code>. This suggests that <code>themes</code> is a hierarchical structure. We can check this with an recursive <code>WITH</code>-clause in SQL. (*BQ: recursive WITH is not implemented in BIGQUERY.</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb41-1"><span class="kw" style="color: #003B4F;">WITH</span> RECURSIVE hier(name, parent_id, <span class="kw" style="color: #003B4F;">level</span>) <span class="kw" style="color: #003B4F;">AS</span> ( </span>
<span id="cb41-2">    </span>
<span id="cb41-3">    <span class="co" style="color: #5E5E5E;">-- init recursion</span></span>
<span id="cb41-4">    <span class="kw" style="color: #003B4F;">SELECT</span> t.name, </span>
<span id="cb41-5">           t.parent_id, </span>
<span id="cb41-6">           <span class="dv" style="color: #AD0000;">0</span> <span class="kw" style="color: #003B4F;">AS</span> <span class="kw" style="color: #003B4F;">level</span> </span>
<span id="cb41-7">      <span class="kw" style="color: #003B4F;">FROM</span> themes t </span>
<span id="cb41-8">     <span class="kw" style="color: #003B4F;">WHERE</span> <span class="kw" style="color: #003B4F;">id</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">376</span></span>
<span id="cb41-9">    </span>
<span id="cb41-10">    <span class="kw" style="color: #003B4F;">UNION</span> <span class="kw" style="color: #003B4F;">ALL</span></span>
<span id="cb41-11">    </span>
<span id="cb41-12">    <span class="co" style="color: #5E5E5E;">-- recursive call</span></span>
<span id="cb41-13">    <span class="kw" style="color: #003B4F;">SELECT</span> t.name, </span>
<span id="cb41-14">           t.parent_id, </span>
<span id="cb41-15">           h.<span class="kw" style="color: #003B4F;">level</span> <span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span> </span>
<span id="cb41-16">      <span class="kw" style="color: #003B4F;">FROM</span> themes t, </span>
<span id="cb41-17">           hier h </span>
<span id="cb41-18">     <span class="kw" style="color: #003B4F;">WHERE</span> t.<span class="kw" style="color: #003B4F;">id</span> <span class="op" style="color: #5E5E5E;">=</span> h.parent_id</span>
<span id="cb41-19">    </span>
<span id="cb41-20">)</span>
<span id="cb41-21"><span class="kw" style="color: #003B4F;">SELECT</span> <span class="fu" style="color: #4758AB;">COUNT</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="kw" style="color: #003B4F;">OVER</span>() <span class="op" style="color: #5E5E5E;">-</span> <span class="kw" style="color: #003B4F;">level</span> <span class="kw" style="color: #003B4F;">AS</span> <span class="kw" style="color: #003B4F;">level</span>, </span>
<span id="cb41-22">       name <span class="kw" style="color: #003B4F;">as</span> theme, </span>
<span id="cb41-23">       GROUP_CONCAT(name,<span class="st" style="color: #20794D;">' --&gt; '</span>) <span class="kw" style="color: #003B4F;">over</span>(<span class="kw" style="color: #003B4F;">order</span> <span class="kw" style="color: #003B4F;">by</span> <span class="kw" style="color: #003B4F;">level</span> <span class="kw" style="color: #003B4F;">desc</span>) path</span>
<span id="cb41-24">  <span class="kw" style="color: #003B4F;">FROM</span> hier </span>
<span id="cb41-25"> <span class="kw" style="color: #003B4F;">ORDER</span> <span class="kw" style="color: #003B4F;">BY</span> <span class="kw" style="color: #003B4F;">level</span>;</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th>level</th>
<th>theme</th>
<th>path</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>Classic</td>
<td>Classic</td>
</tr>
<tr class="even">
<td>2</td>
<td>Vehicle</td>
<td>Classic –&gt; Vehicle</td>
</tr>
<tr class="odd">
<td>3</td>
<td>Fire</td>
<td>Classic –&gt; Vehicle –&gt; Fire</td>
</tr>
</tbody>
</table>
<p>OK, that looks like a reasonable hierarchie. The <code>path</code> column includes the parents and grant parents of a theme. What if we want to reverse the order of the path. Unfortunately <code>GROUP_CONCAT</code> in SQLite doesn’t allow us to specify a sort order in the aggregation. It’s possible to add custom aggregation function in some databases. In SQLite we can compile <a href="https://www.sqlite.org/appfunc.html">application defined function</a> or in Oracle we can define <a href="https://docs.oracle.com/cd/B28359_01/appdev.111/b28425/aggr_functions.htm">customized aggregation function</a> even at runtime as types.</p>
<p>Quiet some steps need to be taken to make the database use costumized aggregation efficently, so we can use them like regulare aggregation and windowing function. In Oracle for instance we have to define:</p>
<ol type="1">
<li>initial values: <code>plsql     total := 0;      n := 0;</code></li>
<li>calculation per iteration step: <code>plsql     total := total + this_step_value;      n := n + 1;</code></li>
<li>deletion per iteration for windowing: <code>plsql     total := total - removed_step_value;      n := n - 1;</code></li>
<li>merging for parallel execution: <code>total := total_worker1 + total_worker2;      n := n_worker1 + n_worker2;</code></li>
<li>termination: <code>plsql     my_avg := total / nullif(n-1, 0)</code></li>
</ol>
<p>Now, how are we gonna do this in Pandas? We start by traversing the hierarchie.</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">fire_engine_info <span class="op" style="color: #5E5E5E;">=</span> df_themes[df_themes[<span class="st" style="color: #20794D;">'id'</span>] <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">376</span>].copy()</span>
<span id="cb42-2">fire_engine_info[<span class="st" style="color: #20794D;">'level'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb42-3"></span>
<span id="cb42-4">parent_id <span class="op" style="color: #5E5E5E;">=</span> fire_engine_info.parent_id.values[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb42-5"></span>
<span id="cb42-6"></span>
<span id="cb42-7">lvl <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb42-8"><span class="cf" style="color: #003B4F;">while</span> <span class="kw" style="color: #003B4F;">not</span> np.isnan(parent_id) <span class="kw" style="color: #003B4F;">and</span> lvl <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">10</span>:</span>
<span id="cb42-9">    lvl<span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb42-10">    new_info <span class="op" style="color: #5E5E5E;">=</span> df_themes[df_themes[<span class="st" style="color: #20794D;">'id'</span>] <span class="op" style="color: #5E5E5E;">==</span> parent_id].copy()</span>
<span id="cb42-11">    new_info[<span class="st" style="color: #20794D;">'level'</span>] <span class="op" style="color: #5E5E5E;">=</span> lvl</span>
<span id="cb42-12">    parent_id <span class="op" style="color: #5E5E5E;">=</span> new_info.parent_id.values[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb42-13">    fire_engine_info <span class="op" style="color: #5E5E5E;">=</span> fire_engine_info.append(new_info)</span>
<span id="cb42-14"></span>
<span id="cb42-15">fire_engine_info[<span class="st" style="color: #20794D;">'grp'</span>]<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb42-16">fire_engine_info</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>id</th>
<th>name</th>
<th>parent_id</th>
<th>level</th>
<th>grp</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>375</strong></td>
<td>376</td>
<td>Fire</td>
<td>373.0</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td><strong>372</strong></td>
<td>373</td>
<td>Vehicle</td>
<td>365.0</td>
<td>1</td>
<td>0</td>
</tr>
<tr class="odd">
<td><strong>364</strong></td>
<td>365</td>
<td>Classic</td>
<td>NaN</td>
<td>2</td>
<td>0</td>
</tr>
</tbody>
</table>
<p>On the one hand this is pretty need, since we can do what ever we want in a manually coded loop. On the other hand I doubt that it is very efficent when we have to deal with lots of data. But to be fair, Recursive <code>WITH</code> isn’t that fast either in SQL.</p>
<p>Finaly we consider how to do customized aggregation. We could do it in the loop above or we can rather use the library’s <code>transform</code> or <code>apply</code> functions.</p>
<p>We define a custom aggregation function <code>cat_sorted</code> and then use the <code>apply</code> function like this:</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="kw" style="color: #003B4F;">def</span> cat_sorted(ser, df, val_col <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span>, sort_col <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span>):</span>
<span id="cb43-2">    u<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' --&gt; '</span>.join(df[df.<span class="bu" style="color: null;">id</span>.isin(ser)].sort_values(sort_col)[val_col].values)</span>
<span id="cb43-3">    <span class="cf" style="color: #003B4F;">return</span> [u]</span></code></pre></div>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">fire_engine_info.<span class="bu" style="color: null;">apply</span>(<span class="kw" style="color: #003B4F;">lambda</span> x: cat_sorted(x, fire_engine_info, <span class="st" style="color: #20794D;">'name'</span>, <span class="st" style="color: #20794D;">'level'</span>))</span></code></pre></div>
<table class="table">
<thead>
<tr class="header">
<th></th>
<th>id</th>
<th>name</th>
<th>parent_id</th>
<th>level</th>
<th>grp</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>Fire –&gt; Vehicle –&gt; Classic</td>
<td></td>
<td>Vehicle –&gt; Classic</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>We can also apply rolling or windowing behaviour. &gt; Note that a rolling representation or windowing on string values is not possible because Pandas only allows numeric values for those action.</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">fire_engine_info.rolling(<span class="dv" style="color: #AD0000;">10</span>,min_periods<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)[<span class="st" style="color: #20794D;">'level'</span>].<span class="bu" style="color: null;">apply</span>(<span class="kw" style="color: #003B4F;">lambda</span> x: <span class="bu" style="color: null;">sum</span>(<span class="dv" style="color: #AD0000;">10</span><span class="op" style="color: #5E5E5E;">**</span>x), raw <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb46-1">    <span class="ex" style="color: null;">375</span>      1.0</span>
<span id="cb46-2">    <span class="ex" style="color: null;">372</span>     11.0</span>
<span id="cb46-3">    <span class="ex" style="color: null;">364</span>    111.0</span>
<span id="cb46-4">    <span class="ex" style="color: null;">Name:</span> level, dtype: float64</span></code></pre></div>
<p>Now, we not only understand the numbers on the lego package but also have a better understandig of Pandas.</p>
</section>
<section id="summary-got-it" class="level1">
<h1>Summary <em>(Got it!)</em></h1>
<p>SQL stays my favourite language to access structured data arranged over many tables. Pandas shines when data already is gathered together and easily accessable (e.g.&nbsp;as csv file). There are alternatives to Pandas to build ml pipelines, such as <a href="https://docs.dask.org/en/latest/">Dask</a> or <a href="https://docs.rapids.ai/api/cudf/stable/">CUDF</a>. But learning Pandas is a good foundation to learn more of them.</p>
</section>
<section id="resources" class="level1">
<h1>Resources</h1>
<p>To play with the examples: - <em>Res. 1</em> Kaggle notebook: https://www.kaggle.com/joatom/a-handful-of-bricks-from-sql-to-pandas - <em>Res. 2</em> Docker container: https://github.com/joatom/blog-resources/tree/main/handful_bricks</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li><em>Ref. 1</em> Pandas SQL comparison: https://pandas.pydata.org/docs/getting_started/comparison/comparison_with_sql.html</li>
<li><em>Ref. 2</em> The Lego dataset: https://www.kaggle.com/rtatman/lego-database</li>
</ul>


</section>

 ]]></description>
  <category>SQL</category>
  <category>Pandas</category>
  <category>BigQuery</category>
  <category>ML</category>
  <guid>https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/index.html</guid>
  <pubDate>Fri, 11 Dec 2020 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2020-12-12-a-handful-of-bricks-from-sql-to-pandas/logo_sql2pandas.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>BigQuery-Geotab Intersection Congestion</title>
  <dc:creator>Johannes Tomasoni</dc:creator>
  <link>https://joatom.github.io/blog/posts/2020-01-05-bgml-geotab/index.html</link>
  <description><![CDATA[ 




<p>This blog post contains some of my codings for the 2019 kaggle <a href="https://www.kaggle.com/c/bigquery-geotab-intersection-congestion">BigQuery-Geotab competition</a>.</p>
<p>My submission scored <strong><a href="https://www.kaggle.com/c/bigquery-geotab-intersection-congestion/discussion/121504#709650">1st Place</a></strong> in the categorie <em>BigQuery ML Models built in SQL</em>.</p>
<p>The challange was to predict six measures for cars approaching intersections in four US cities.</p>
<p>My objective in the competition was to tryout BigQuery (BQ) including the basic ML features. Therefore the notebooks rely as much as possible on BQ. All features are generated in BQ with varying SQL-techniques. The prediction model is also build in BQ.</p>
<p>Additional resources can be found in my <a href="https://github.com/joatom/kaggle-2019-BigQuery-Geotab-Intersection-Congestion">github repo</a>.</p>
<iframe src="https://www.kaggle.com/embed/joatom/bigquery-geotab-bqml?kernelSessionId=24953109" height="800" style="margin: 0 auto; width: 100%; " frameborder="0" scrolling="auto" title="BigQuery-GeoTab [BQML]">
</iframe>



 ]]></description>
  <category>SQL</category>
  <category>BigQuery</category>
  <category>ML</category>
  <category>Competition</category>
  <guid>https://joatom.github.io/blog/posts/2020-01-05-bgml-geotab/index.html</guid>
  <pubDate>Sat, 04 Jan 2020 23:00:00 GMT</pubDate>
  <media:content url="https://joatom.github.io/blog/posts/2020-01-05-bgml-geotab/logo_bqml.png" medium="image" type="image/png" height="70" width="144"/>
</item>
</channel>
</rss>
